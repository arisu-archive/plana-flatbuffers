// Code generated by fbsgen. DO NOT EDIT.
// Package flatdata contains generated code for FlatBuffers schema
package flatdata

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// ConstFieldExcelDto represents a FlatBuffers table
type ConstFieldExcelDto struct {
	fbsutils.FlatBuffer
	DialogSmoothTime           int32 `json:"dialog_smooth_time"`
	TalkDialogDurationDefault  int32 `json:"talk_dialog_duration_default"`
	ThinkDialogDurationDefault int32 `json:"think_dialog_duration_default"`
	IdleThinkDelayMin          int32 `json:"idle_think_delay_min"`
	IdleThinkDelayMax          int32 `json:"idle_think_delay_max"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *ConstFieldExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	if t.FlatBuffer.TableKey == nil {
		t.FlatBuffer.InitKey(fbsutils.CreateTableKey("ConstField"))
	}
	ConstFieldExcelStart(b)
	ConstFieldExcelAddDialogSmoothTime(b, fbsutils.Convert(t.DialogSmoothTime, t.FlatBuffer.TableKey))
	ConstFieldExcelAddTalkDialogDurationDefault(b, fbsutils.Convert(t.TalkDialogDurationDefault, t.FlatBuffer.TableKey))
	ConstFieldExcelAddThinkDialogDurationDefault(b, fbsutils.Convert(t.ThinkDialogDurationDefault, t.FlatBuffer.TableKey))
	ConstFieldExcelAddIdleThinkDelayMin(b, fbsutils.Convert(t.IdleThinkDelayMin, t.FlatBuffer.TableKey))
	ConstFieldExcelAddIdleThinkDelayMax(b, fbsutils.Convert(t.IdleThinkDelayMax, t.FlatBuffer.TableKey))
	return ConstFieldExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *ConstFieldExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *ConstFieldExcelDto) UnmarshalMessage(e *ConstFieldExcel) error {
	if t.FlatBuffer.TableKey == nil {
		t.FlatBuffer.InitKey(fbsutils.CreateTableKey("ConstField"))
	}
	t.DialogSmoothTime = fbsutils.Convert(e.DialogSmoothTime(), t.FlatBuffer.TableKey)
	t.TalkDialogDurationDefault = fbsutils.Convert(e.TalkDialogDurationDefault(), t.FlatBuffer.TableKey)
	t.ThinkDialogDurationDefault = fbsutils.Convert(e.ThinkDialogDurationDefault(), t.FlatBuffer.TableKey)
	t.IdleThinkDelayMin = fbsutils.Convert(e.IdleThinkDelayMin(), t.FlatBuffer.TableKey)
	t.IdleThinkDelayMax = fbsutils.Convert(e.IdleThinkDelayMax(), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *ConstFieldExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsConstFieldExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (ConstFieldExcelDto) FlatDataName() string {
	return "ConstFieldExcel"
}
