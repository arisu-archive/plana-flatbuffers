// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package flatdata

import "strconv"

type RecipeType int32

const (
	RecipeTypeNone                   RecipeType = 0
	RecipeTypeCraft                  RecipeType = 1
	RecipeTypeSkillLevelUp           RecipeType = 2
	RecipeTypeCharacterTranscendence RecipeType = 3
	RecipeTypeEquipmentTierUp        RecipeType = 4
	RecipeTypeCafeRankUp             RecipeType = 5
	RecipeTypeSelectionItem          RecipeType = 6
	RecipeTypeWeaponTranscendence    RecipeType = 7
	RecipeTypeSelectRecruit          RecipeType = 8
	RecipeTypeCharacterPotential     RecipeType = 9
)

var EnumNamesRecipeType = map[RecipeType]string{
	RecipeTypeNone:                   "None",
	RecipeTypeCraft:                  "Craft",
	RecipeTypeSkillLevelUp:           "SkillLevelUp",
	RecipeTypeCharacterTranscendence: "CharacterTranscendence",
	RecipeTypeEquipmentTierUp:        "EquipmentTierUp",
	RecipeTypeCafeRankUp:             "CafeRankUp",
	RecipeTypeSelectionItem:          "SelectionItem",
	RecipeTypeWeaponTranscendence:    "WeaponTranscendence",
	RecipeTypeSelectRecruit:          "SelectRecruit",
	RecipeTypeCharacterPotential:     "CharacterPotential",
}

var EnumValuesRecipeType = map[string]RecipeType{
	"None":                   RecipeTypeNone,
	"Craft":                  RecipeTypeCraft,
	"SkillLevelUp":           RecipeTypeSkillLevelUp,
	"CharacterTranscendence": RecipeTypeCharacterTranscendence,
	"EquipmentTierUp":        RecipeTypeEquipmentTierUp,
	"CafeRankUp":             RecipeTypeCafeRankUp,
	"SelectionItem":          RecipeTypeSelectionItem,
	"WeaponTranscendence":    RecipeTypeWeaponTranscendence,
	"SelectRecruit":          RecipeTypeSelectRecruit,
	"CharacterPotential":     RecipeTypeCharacterPotential,
}

func (v RecipeType) String() string {
	if s, ok := EnumNamesRecipeType[v]; ok {
		return s
	}
	return "RecipeType(" + strconv.FormatInt(int64(v), 10) + ")"
}
