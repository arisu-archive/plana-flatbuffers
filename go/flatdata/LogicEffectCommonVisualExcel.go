// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package flatdata

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type LogicEffectCommonVisualExcel struct {
	_tab flatbuffers.Table
}

func GetRootAsLogicEffectCommonVisualExcel(buf []byte, offset flatbuffers.UOffsetT) *LogicEffectCommonVisualExcel {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &LogicEffectCommonVisualExcel{}
	x.Init(buf, n+offset)
	return x
}

func GetSizePrefixedRootAsLogicEffectCommonVisualExcel(buf []byte, offset flatbuffers.UOffsetT) *LogicEffectCommonVisualExcel {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &LogicEffectCommonVisualExcel{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func (rcv *LogicEffectCommonVisualExcel) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *LogicEffectCommonVisualExcel) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *LogicEffectCommonVisualExcel) StringId() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *LogicEffectCommonVisualExcel) MutateStringId(n uint32) bool {
	return rcv._tab.MutateUint32Slot(4, n)
}

func (rcv *LogicEffectCommonVisualExcel) IconSpriteName() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LogicEffectCommonVisualExcel) IconDispelColor(j int) float32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		a := rcv._tab.Vector(o)
		return rcv._tab.GetFloat32(a + flatbuffers.UOffsetT(j*4))
	}
	return 0
}

func (rcv *LogicEffectCommonVisualExcel) IconDispelColorLength() int {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.VectorLen(o)
	}
	return 0
}

func (rcv *LogicEffectCommonVisualExcel) MutateIconDispelColor(j int, n float32) bool {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		a := rcv._tab.Vector(o)
		return rcv._tab.MutateFloat32(a+flatbuffers.UOffsetT(j*4), n)
	}
	return false
}

func (rcv *LogicEffectCommonVisualExcel) ParticleEnterPath() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LogicEffectCommonVisualExcel) ParticleEnterSocket() EffectBone {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(12))
	if o != 0 {
		return EffectBone(rcv._tab.GetInt32(o + rcv._tab.Pos))
	}
	return 0
}

func (rcv *LogicEffectCommonVisualExcel) MutateParticleEnterSocket(n EffectBone) bool {
	return rcv._tab.MutateInt32Slot(12, int32(n))
}

func (rcv *LogicEffectCommonVisualExcel) ParticleLoopPath() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(14))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LogicEffectCommonVisualExcel) ParticleLoopSocket() EffectBone {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(16))
	if o != 0 {
		return EffectBone(rcv._tab.GetInt32(o + rcv._tab.Pos))
	}
	return 0
}

func (rcv *LogicEffectCommonVisualExcel) MutateParticleLoopSocket(n EffectBone) bool {
	return rcv._tab.MutateInt32Slot(16, int32(n))
}

func (rcv *LogicEffectCommonVisualExcel) ParticleEndPath() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(18))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LogicEffectCommonVisualExcel) ParticleEndSocket() EffectBone {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(20))
	if o != 0 {
		return EffectBone(rcv._tab.GetInt32(o + rcv._tab.Pos))
	}
	return 0
}

func (rcv *LogicEffectCommonVisualExcel) MutateParticleEndSocket(n EffectBone) bool {
	return rcv._tab.MutateInt32Slot(20, int32(n))
}

func (rcv *LogicEffectCommonVisualExcel) ParticleApplyPath() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(22))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LogicEffectCommonVisualExcel) ParticleApplySocket() EffectBone {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(24))
	if o != 0 {
		return EffectBone(rcv._tab.GetInt32(o + rcv._tab.Pos))
	}
	return 0
}

func (rcv *LogicEffectCommonVisualExcel) MutateParticleApplySocket(n EffectBone) bool {
	return rcv._tab.MutateInt32Slot(24, int32(n))
}

func (rcv *LogicEffectCommonVisualExcel) ParticleRemovedPath() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(26))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LogicEffectCommonVisualExcel) ParticleRemovedSocket() EffectBone {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(28))
	if o != 0 {
		return EffectBone(rcv._tab.GetInt32(o + rcv._tab.Pos))
	}
	return 0
}

func (rcv *LogicEffectCommonVisualExcel) MutateParticleRemovedSocket(n EffectBone) bool {
	return rcv._tab.MutateInt32Slot(28, int32(n))
}

func LogicEffectCommonVisualExcelStart(builder *flatbuffers.Builder) {
	builder.StartObject(13)
}
func LogicEffectCommonVisualExcelAddStringId(builder *flatbuffers.Builder, stringId uint32) {
	builder.PrependUint32Slot(0, stringId, 0)
}
func LogicEffectCommonVisualExcelAddIconSpriteName(builder *flatbuffers.Builder, iconSpriteName flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(iconSpriteName), 0)
}
func LogicEffectCommonVisualExcelAddIconDispelColor(builder *flatbuffers.Builder, iconDispelColor flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(2, flatbuffers.UOffsetT(iconDispelColor), 0)
}
func LogicEffectCommonVisualExcelStartIconDispelColorVector(builder *flatbuffers.Builder, numElems int) flatbuffers.UOffsetT {
	return builder.StartVector(4, numElems, 4)
}
func LogicEffectCommonVisualExcelAddParticleEnterPath(builder *flatbuffers.Builder, particleEnterPath flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(3, flatbuffers.UOffsetT(particleEnterPath), 0)
}
func LogicEffectCommonVisualExcelAddParticleEnterSocket(builder *flatbuffers.Builder, particleEnterSocket EffectBone) {
	builder.PrependInt32Slot(4, int32(particleEnterSocket), 0)
}
func LogicEffectCommonVisualExcelAddParticleLoopPath(builder *flatbuffers.Builder, particleLoopPath flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(5, flatbuffers.UOffsetT(particleLoopPath), 0)
}
func LogicEffectCommonVisualExcelAddParticleLoopSocket(builder *flatbuffers.Builder, particleLoopSocket EffectBone) {
	builder.PrependInt32Slot(6, int32(particleLoopSocket), 0)
}
func LogicEffectCommonVisualExcelAddParticleEndPath(builder *flatbuffers.Builder, particleEndPath flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(7, flatbuffers.UOffsetT(particleEndPath), 0)
}
func LogicEffectCommonVisualExcelAddParticleEndSocket(builder *flatbuffers.Builder, particleEndSocket EffectBone) {
	builder.PrependInt32Slot(8, int32(particleEndSocket), 0)
}
func LogicEffectCommonVisualExcelAddParticleApplyPath(builder *flatbuffers.Builder, particleApplyPath flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(9, flatbuffers.UOffsetT(particleApplyPath), 0)
}
func LogicEffectCommonVisualExcelAddParticleApplySocket(builder *flatbuffers.Builder, particleApplySocket EffectBone) {
	builder.PrependInt32Slot(10, int32(particleApplySocket), 0)
}
func LogicEffectCommonVisualExcelAddParticleRemovedPath(builder *flatbuffers.Builder, particleRemovedPath flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(11, flatbuffers.UOffsetT(particleRemovedPath), 0)
}
func LogicEffectCommonVisualExcelAddParticleRemovedSocket(builder *flatbuffers.Builder, particleRemovedSocket EffectBone) {
	builder.PrependInt32Slot(12, int32(particleRemovedSocket), 0)
}
func LogicEffectCommonVisualExcelEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
