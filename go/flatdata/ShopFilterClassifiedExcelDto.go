// Code generated by fbsgen. DO NOT EDIT.
// Package flatdata contains generated code for FlatBuffers schema
package flatdata

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// ShopFilterClassifiedExcelDto represents a FlatBuffers table
type ShopFilterClassifiedExcelDto struct {
	fbsutils.FlatBuffer
	Id                int64            `json:"id"`
	CategoryType      ShopCategoryType `json:"category_type"`
	ConsumeParcelType ParcelType       `json:"consume_parcel_type"`
	ConsumeParcelId   int64            `json:"consume_parcel_id"`
	ShopFilterType    ShopFilterType   `json:"shop_filter_type"`
	GoodsId           int64            `json:"goods_id"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *ShopFilterClassifiedExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	if t.FlatBuffer.TableKey == nil {
		t.FlatBuffer.InitKey(fbsutils.CreateTableKey("ShopFilterClassified"))
	}
	ShopFilterClassifiedExcelStart(b)
	ShopFilterClassifiedExcelAddId(b, fbsutils.Convert(t.Id, t.FlatBuffer.TableKey))
	ShopFilterClassifiedExcelAddCategoryType(b, fbsutils.Convert(t.CategoryType, t.FlatBuffer.TableKey))
	ShopFilterClassifiedExcelAddConsumeParcelType(b, fbsutils.Convert(t.ConsumeParcelType, t.FlatBuffer.TableKey))
	ShopFilterClassifiedExcelAddConsumeParcelId(b, fbsutils.Convert(t.ConsumeParcelId, t.FlatBuffer.TableKey))
	ShopFilterClassifiedExcelAddShopFilterType(b, fbsutils.Convert(t.ShopFilterType, t.FlatBuffer.TableKey))
	ShopFilterClassifiedExcelAddGoodsId(b, fbsutils.Convert(t.GoodsId, t.FlatBuffer.TableKey))
	return ShopFilterClassifiedExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *ShopFilterClassifiedExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *ShopFilterClassifiedExcelDto) UnmarshalMessage(e *ShopFilterClassifiedExcel) error {
	if t.FlatBuffer.TableKey == nil {
		t.FlatBuffer.InitKey(fbsutils.CreateTableKey("ShopFilterClassified"))
	}
	t.Id = fbsutils.Convert(e.Id(), t.FlatBuffer.TableKey)
	t.CategoryType = ShopCategoryType(fbsutils.Convert(int32(e.CategoryType()), t.FlatBuffer.TableKey))
	t.ConsumeParcelType = ParcelType(fbsutils.Convert(int32(e.ConsumeParcelType()), t.FlatBuffer.TableKey))
	t.ConsumeParcelId = fbsutils.Convert(e.ConsumeParcelId(), t.FlatBuffer.TableKey)
	t.ShopFilterType = ShopFilterType(fbsutils.Convert(int32(e.ShopFilterType()), t.FlatBuffer.TableKey))
	t.GoodsId = fbsutils.Convert(e.GoodsId(), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *ShopFilterClassifiedExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsShopFilterClassifiedExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (ShopFilterClassifiedExcelDto) FlatDataName() string {
	return "ShopFilterClassifiedExcel"
}
