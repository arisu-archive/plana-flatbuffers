// Code generated by fbsgen. DO NOT EDIT.
// Package flatdata contains generated code for FlatBuffers schema
package flatdata

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// MoveEndDto represents a FlatBuffers table
type MoveEndDto struct {
	fbsutils.FlatBuffer
	Kneel  MotionDto `json:"kneel"`
	Stand  MotionDto `json:"stand"`
	Normal MotionDto `json:"normal"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *MoveEndDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	if t.FlatBuffer.TableKey == nil {
		t.FlatBuffer.InitKey(fbsutils.CreateTableKey("MoveEnd"))
	}
	MoveEndStart(b)
	MoveEndAddKneel(b, t.Kneel.MarshalModel(b))
	MoveEndAddStand(b, t.Stand.MarshalModel(b))
	MoveEndAddNormal(b, t.Normal.MarshalModel(b))
	return MoveEndEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *MoveEndDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *MoveEndDto) UnmarshalMessage(e *MoveEnd) error {
	if t.FlatBuffer.TableKey == nil {
		t.FlatBuffer.InitKey(fbsutils.CreateTableKey("MoveEnd"))
	}
	t.Kneel.UnmarshalMessage(e.Kneel(nil))
	t.Stand.UnmarshalMessage(e.Stand(nil))
	t.Normal.UnmarshalMessage(e.Normal(nil))
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *MoveEndDto) Unmarshal(data []byte) error {
	root := GetRootAsMoveEnd(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (MoveEndDto) FlatDataName() string {
	return "MoveEnd"
}
