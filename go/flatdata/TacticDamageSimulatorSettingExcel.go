// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package flatdata

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type TacticDamageSimulatorSettingExcel struct {
	_tab flatbuffers.Table
}

func GetRootAsTacticDamageSimulatorSettingExcel(buf []byte, offset flatbuffers.UOffsetT) *TacticDamageSimulatorSettingExcel {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &TacticDamageSimulatorSettingExcel{}
	x.Init(buf, n+offset)
	return x
}

func GetSizePrefixedRootAsTacticDamageSimulatorSettingExcel(buf []byte, offset flatbuffers.UOffsetT) *TacticDamageSimulatorSettingExcel {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &TacticDamageSimulatorSettingExcel{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func (rcv *TacticDamageSimulatorSettingExcel) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *TacticDamageSimulatorSettingExcel) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *TacticDamageSimulatorSettingExcel) ApplyOverrideAdaptation() bool {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.GetBool(o + rcv._tab.Pos)
	}
	return false
}

func (rcv *TacticDamageSimulatorSettingExcel) MutateApplyOverrideAdaptation(n bool) bool {
	return rcv._tab.MutateBoolSlot(4, n)
}

func (rcv *TacticDamageSimulatorSettingExcel) ApplyOverrideFavorLevel() bool {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.GetBool(o + rcv._tab.Pos)
	}
	return false
}

func (rcv *TacticDamageSimulatorSettingExcel) MutateApplyOverrideFavorLevel(n bool) bool {
	return rcv._tab.MutateBoolSlot(6, n)
}

func (rcv *TacticDamageSimulatorSettingExcel) FixedCharacter(j int) int64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		a := rcv._tab.Vector(o)
		return rcv._tab.GetInt64(a + flatbuffers.UOffsetT(j*8))
	}
	return 0
}

func (rcv *TacticDamageSimulatorSettingExcel) FixedCharacterLength() int {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.VectorLen(o)
	}
	return 0
}

func (rcv *TacticDamageSimulatorSettingExcel) MutateFixedCharacter(j int, n int64) bool {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		a := rcv._tab.Vector(o)
		return rcv._tab.MutateInt64(a+flatbuffers.UOffsetT(j*8), n)
	}
	return false
}

func (rcv *TacticDamageSimulatorSettingExcel) GroundId() int64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		return rcv._tab.GetInt64(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *TacticDamageSimulatorSettingExcel) MutateGroundId(n int64) bool {
	return rcv._tab.MutateInt64Slot(10, n)
}

func (rcv *TacticDamageSimulatorSettingExcel) Order() int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(12))
	if o != 0 {
		return rcv._tab.GetInt32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *TacticDamageSimulatorSettingExcel) MutateOrder(n int32) bool {
	return rcv._tab.MutateInt32Slot(12, n)
}

func (rcv *TacticDamageSimulatorSettingExcel) OverrideFavorLevel() int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(14))
	if o != 0 {
		return rcv._tab.GetInt32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *TacticDamageSimulatorSettingExcel) MutateOverrideFavorLevel(n int32) bool {
	return rcv._tab.MutateInt32Slot(14, n)
}

func (rcv *TacticDamageSimulatorSettingExcel) OverrideIndoorAdaptation() TerrainAdaptationStat {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(16))
	if o != 0 {
		return TerrainAdaptationStat(rcv._tab.GetInt32(o + rcv._tab.Pos))
	}
	return 0
}

func (rcv *TacticDamageSimulatorSettingExcel) MutateOverrideIndoorAdaptation(n TerrainAdaptationStat) bool {
	return rcv._tab.MutateInt32Slot(16, int32(n))
}

func (rcv *TacticDamageSimulatorSettingExcel) OverrideOutdoorAdaptation() TerrainAdaptationStat {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(18))
	if o != 0 {
		return TerrainAdaptationStat(rcv._tab.GetInt32(o + rcv._tab.Pos))
	}
	return 0
}

func (rcv *TacticDamageSimulatorSettingExcel) MutateOverrideOutdoorAdaptation(n TerrainAdaptationStat) bool {
	return rcv._tab.MutateInt32Slot(18, int32(n))
}

func (rcv *TacticDamageSimulatorSettingExcel) OverrideStreetAdaptation() TerrainAdaptationStat {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(20))
	if o != 0 {
		return TerrainAdaptationStat(rcv._tab.GetInt32(o + rcv._tab.Pos))
	}
	return 0
}

func (rcv *TacticDamageSimulatorSettingExcel) MutateOverrideStreetAdaptation(n TerrainAdaptationStat) bool {
	return rcv._tab.MutateInt32Slot(20, int32(n))
}

func (rcv *TacticDamageSimulatorSettingExcel) Repeat() int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(22))
	if o != 0 {
		return rcv._tab.GetInt32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *TacticDamageSimulatorSettingExcel) MutateRepeat(n int32) bool {
	return rcv._tab.MutateInt32Slot(22, n)
}

func (rcv *TacticDamageSimulatorSettingExcel) ReplaceCharacterCostRegen() bool {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(24))
	if o != 0 {
		return rcv._tab.GetBool(o + rcv._tab.Pos)
	}
	return false
}

func (rcv *TacticDamageSimulatorSettingExcel) MutateReplaceCharacterCostRegen(n bool) bool {
	return rcv._tab.MutateBoolSlot(24, n)
}

func (rcv *TacticDamageSimulatorSettingExcel) ReplaceCostRegenValue() int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(26))
	if o != 0 {
		return rcv._tab.GetInt32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *TacticDamageSimulatorSettingExcel) MutateReplaceCostRegenValue(n int32) bool {
	return rcv._tab.MutateInt32Slot(26, n)
}

func (rcv *TacticDamageSimulatorSettingExcel) SpecialSquard() int64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(28))
	if o != 0 {
		return rcv._tab.GetInt64(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *TacticDamageSimulatorSettingExcel) MutateSpecialSquard(n int64) bool {
	return rcv._tab.MutateInt64Slot(28, n)
}

func (rcv *TacticDamageSimulatorSettingExcel) StrikerSquard() int64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(30))
	if o != 0 {
		return rcv._tab.GetInt64(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *TacticDamageSimulatorSettingExcel) MutateStrikerSquard(n int64) bool {
	return rcv._tab.MutateInt64Slot(30, n)
}

func (rcv *TacticDamageSimulatorSettingExcel) TestBattleTime() int64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(32))
	if o != 0 {
		return rcv._tab.GetInt64(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *TacticDamageSimulatorSettingExcel) MutateTestBattleTime(n int64) bool {
	return rcv._tab.MutateInt64Slot(32, n)
}

func (rcv *TacticDamageSimulatorSettingExcel) TestPreset() int64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(34))
	if o != 0 {
		return rcv._tab.GetInt64(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *TacticDamageSimulatorSettingExcel) MutateTestPreset(n int64) bool {
	return rcv._tab.MutateInt64Slot(34, n)
}

func (rcv *TacticDamageSimulatorSettingExcel) UseAutoSkill() bool {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(36))
	if o != 0 {
		return rcv._tab.GetBool(o + rcv._tab.Pos)
	}
	return false
}

func (rcv *TacticDamageSimulatorSettingExcel) MutateUseAutoSkill(n bool) bool {
	return rcv._tab.MutateBoolSlot(36, n)
}

func TacticDamageSimulatorSettingExcelStart(builder *flatbuffers.Builder) {
	builder.StartObject(17)
}
func TacticDamageSimulatorSettingExcelAddApplyOverrideAdaptation(builder *flatbuffers.Builder, applyOverrideAdaptation bool) {
	builder.PrependBoolSlot(0, applyOverrideAdaptation, false)
}
func TacticDamageSimulatorSettingExcelAddApplyOverrideFavorLevel(builder *flatbuffers.Builder, applyOverrideFavorLevel bool) {
	builder.PrependBoolSlot(1, applyOverrideFavorLevel, false)
}
func TacticDamageSimulatorSettingExcelAddFixedCharacter(builder *flatbuffers.Builder, fixedCharacter flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(2, flatbuffers.UOffsetT(fixedCharacter), 0)
}
func TacticDamageSimulatorSettingExcelStartFixedCharacterVector(builder *flatbuffers.Builder, numElems int) flatbuffers.UOffsetT {
	return builder.StartVector(8, numElems, 8)
}
func TacticDamageSimulatorSettingExcelAddGroundId(builder *flatbuffers.Builder, groundId int64) {
	builder.PrependInt64Slot(3, groundId, 0)
}
func TacticDamageSimulatorSettingExcelAddOrder(builder *flatbuffers.Builder, order int32) {
	builder.PrependInt32Slot(4, order, 0)
}
func TacticDamageSimulatorSettingExcelAddOverrideFavorLevel(builder *flatbuffers.Builder, overrideFavorLevel int32) {
	builder.PrependInt32Slot(5, overrideFavorLevel, 0)
}
func TacticDamageSimulatorSettingExcelAddOverrideIndoorAdaptation(builder *flatbuffers.Builder, overrideIndoorAdaptation TerrainAdaptationStat) {
	builder.PrependInt32Slot(6, int32(overrideIndoorAdaptation), 0)
}
func TacticDamageSimulatorSettingExcelAddOverrideOutdoorAdaptation(builder *flatbuffers.Builder, overrideOutdoorAdaptation TerrainAdaptationStat) {
	builder.PrependInt32Slot(7, int32(overrideOutdoorAdaptation), 0)
}
func TacticDamageSimulatorSettingExcelAddOverrideStreetAdaptation(builder *flatbuffers.Builder, overrideStreetAdaptation TerrainAdaptationStat) {
	builder.PrependInt32Slot(8, int32(overrideStreetAdaptation), 0)
}
func TacticDamageSimulatorSettingExcelAddRepeat(builder *flatbuffers.Builder, repeat int32) {
	builder.PrependInt32Slot(9, repeat, 0)
}
func TacticDamageSimulatorSettingExcelAddReplaceCharacterCostRegen(builder *flatbuffers.Builder, replaceCharacterCostRegen bool) {
	builder.PrependBoolSlot(10, replaceCharacterCostRegen, false)
}
func TacticDamageSimulatorSettingExcelAddReplaceCostRegenValue(builder *flatbuffers.Builder, replaceCostRegenValue int32) {
	builder.PrependInt32Slot(11, replaceCostRegenValue, 0)
}
func TacticDamageSimulatorSettingExcelAddSpecialSquard(builder *flatbuffers.Builder, specialSquard int64) {
	builder.PrependInt64Slot(12, specialSquard, 0)
}
func TacticDamageSimulatorSettingExcelAddStrikerSquard(builder *flatbuffers.Builder, strikerSquard int64) {
	builder.PrependInt64Slot(13, strikerSquard, 0)
}
func TacticDamageSimulatorSettingExcelAddTestBattleTime(builder *flatbuffers.Builder, testBattleTime int64) {
	builder.PrependInt64Slot(14, testBattleTime, 0)
}
func TacticDamageSimulatorSettingExcelAddTestPreset(builder *flatbuffers.Builder, testPreset int64) {
	builder.PrependInt64Slot(15, testPreset, 0)
}
func TacticDamageSimulatorSettingExcelAddUseAutoSkill(builder *flatbuffers.Builder, useAutoSkill bool) {
	builder.PrependBoolSlot(16, useAutoSkill, false)
}
func TacticDamageSimulatorSettingExcelEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
