// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package flatdata

import "strconv"

type StickerGetConditionType int32

const (
	StickerGetConditionTypeNone                StickerGetConditionType = 0
	StickerGetConditionTypeStickerCheckPass    StickerGetConditionType = 1
	StickerGetConditionTypeGetStickerCondition StickerGetConditionType = 2
)

var EnumNamesStickerGetConditionType = map[StickerGetConditionType]string{
	StickerGetConditionTypeNone:                "None",
	StickerGetConditionTypeStickerCheckPass:    "StickerCheckPass",
	StickerGetConditionTypeGetStickerCondition: "GetStickerCondition",
}

var EnumValuesStickerGetConditionType = map[string]StickerGetConditionType{
	"None":                StickerGetConditionTypeNone,
	"StickerCheckPass":    StickerGetConditionTypeStickerCheckPass,
	"GetStickerCondition": StickerGetConditionTypeGetStickerCondition,
}

func (v StickerGetConditionType) String() string {
	if s, ok := EnumNamesStickerGetConditionType[v]; ok {
		return s
	}
	return "StickerGetConditionType(" + strconv.FormatInt(int64(v), 10) + ")"
}
