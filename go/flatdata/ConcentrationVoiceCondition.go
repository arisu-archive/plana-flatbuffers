// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package flatdata

import "strconv"

type ConcentrationVoiceCondition int32

const (
	ConcentrationVoiceConditionNone             ConcentrationVoiceCondition = 0
	ConcentrationVoiceConditionPairMatchFail    ConcentrationVoiceCondition = 1
	ConcentrationVoiceConditionPairMatchSuccess ConcentrationVoiceCondition = 2
	ConcentrationVoiceConditionRoundRenewal     ConcentrationVoiceCondition = 3
)

var EnumNamesConcentrationVoiceCondition = map[ConcentrationVoiceCondition]string{
	ConcentrationVoiceConditionNone:             "None",
	ConcentrationVoiceConditionPairMatchFail:    "PairMatchFail",
	ConcentrationVoiceConditionPairMatchSuccess: "PairMatchSuccess",
	ConcentrationVoiceConditionRoundRenewal:     "RoundRenewal",
}

var EnumValuesConcentrationVoiceCondition = map[string]ConcentrationVoiceCondition{
	"None":             ConcentrationVoiceConditionNone,
	"PairMatchFail":    ConcentrationVoiceConditionPairMatchFail,
	"PairMatchSuccess": ConcentrationVoiceConditionPairMatchSuccess,
	"RoundRenewal":     ConcentrationVoiceConditionRoundRenewal,
}

func (v ConcentrationVoiceCondition) String() string {
	if s, ok := EnumNamesConcentrationVoiceCondition[v]; ok {
		return s
	}
	return "ConcentrationVoiceCondition(" + strconv.FormatInt(int64(v), 10) + ")"
}
