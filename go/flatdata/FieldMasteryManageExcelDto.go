// Code generated by fbsgen. DO NOT EDIT.
// Package flatdata contains generated code for FlatBuffers schema
package flatdata

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// FieldMasteryManageExcelDto represents a FlatBuffers table
type FieldMasteryManageExcelDto struct {
	fbsutils.FlatBuffer
	FieldSeason int64  `json:"field_season"`
	LocalizeEtc uint32 `json:"localize_etc"`
	ImagePath   string `json:"image_path"`
	LevelId     int64  `json:"level_id"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *FieldMasteryManageExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	if t.FlatBuffer.TableKey == nil {
		t.FlatBuffer.InitKey(fbsutils.CreateTableKey("FieldMasteryManage"))
	}
	FieldMasteryManageExcelStart(b)
	FieldMasteryManageExcelAddFieldSeason(b, fbsutils.Convert(t.FieldSeason, t.FlatBuffer.TableKey))
	FieldMasteryManageExcelAddLocalizeEtc(b, fbsutils.Convert(t.LocalizeEtc, t.FlatBuffer.TableKey))
	FieldMasteryManageExcelAddImagePath(b, b.CreateString(fbsutils.Convert(t.ImagePath, t.FlatBuffer.TableKey)))
	FieldMasteryManageExcelAddLevelId(b, fbsutils.Convert(t.LevelId, t.FlatBuffer.TableKey))
	return FieldMasteryManageExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *FieldMasteryManageExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *FieldMasteryManageExcelDto) UnmarshalMessage(e *FieldMasteryManageExcel) error {
	if t.FlatBuffer.TableKey == nil {
		t.FlatBuffer.InitKey(fbsutils.CreateTableKey("FieldMasteryManage"))
	}
	t.FieldSeason = fbsutils.Convert(e.FieldSeason(), t.FlatBuffer.TableKey)
	t.LocalizeEtc = fbsutils.Convert(e.LocalizeEtc(), t.FlatBuffer.TableKey)
	t.ImagePath = fbsutils.Convert(string(e.ImagePath()), t.FlatBuffer.TableKey)
	t.LevelId = fbsutils.Convert(e.LevelId(), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *FieldMasteryManageExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsFieldMasteryManageExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (FieldMasteryManageExcelDto) FlatDataName() string {
	return "FieldMasteryManageExcel"
}
