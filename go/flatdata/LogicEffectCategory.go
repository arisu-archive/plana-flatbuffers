// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package flatdata

import "strconv"

type LogicEffectCategory int32

const (
	LogicEffectCategoryNone         LogicEffectCategory = 0
	LogicEffectCategoryAttack       LogicEffectCategory = 1
	LogicEffectCategoryHeal         LogicEffectCategory = 2
	LogicEffectCategoryBuff         LogicEffectCategory = 3
	LogicEffectCategoryDebuff       LogicEffectCategory = 4
	LogicEffectCategoryCrowdControl LogicEffectCategory = 5
	LogicEffectCategoryBoss         LogicEffectCategory = 6
	LogicEffectCategoryDummy        LogicEffectCategory = 7
)

var EnumNamesLogicEffectCategory = map[LogicEffectCategory]string{
	LogicEffectCategoryNone:         "None",
	LogicEffectCategoryAttack:       "Attack",
	LogicEffectCategoryHeal:         "Heal",
	LogicEffectCategoryBuff:         "Buff",
	LogicEffectCategoryDebuff:       "Debuff",
	LogicEffectCategoryCrowdControl: "CrowdControl",
	LogicEffectCategoryBoss:         "Boss",
	LogicEffectCategoryDummy:        "Dummy",
}

var EnumValuesLogicEffectCategory = map[string]LogicEffectCategory{
	"None":         LogicEffectCategoryNone,
	"Attack":       LogicEffectCategoryAttack,
	"Heal":         LogicEffectCategoryHeal,
	"Buff":         LogicEffectCategoryBuff,
	"Debuff":       LogicEffectCategoryDebuff,
	"CrowdControl": LogicEffectCategoryCrowdControl,
	"Boss":         LogicEffectCategoryBoss,
	"Dummy":        LogicEffectCategoryDummy,
}

func (v LogicEffectCategory) String() string {
	if s, ok := EnumNamesLogicEffectCategory[v]; ok {
		return s
	}
	return "LogicEffectCategory(" + strconv.FormatInt(int64(v), 10) + ")"
}
