// Code generated by fbsgen. DO NOT EDIT.
// Package flatdata contains generated code for FlatBuffers schema
package flatdata

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// ConquestEventExcelDto represents a FlatBuffers table
type ConquestEventExcelDto struct {
	fbsutils.FlatBuffer
	EventContentId              int64             `json:"event_content_id"`
	MainStoryEventContentId     int64             `json:"main_story_event_content_id"`
	ConquestEventType           ConquestEventType `json:"conquest_event_type"`
	UseErosion                  bool              `json:"use_erosion"`
	UseUnexpectedEvent          bool              `json:"use_unexpected_event"`
	UseCalculate                bool              `json:"use_calculate"`
	UseConquestObject           bool              `json:"use_conquest_object"`
	EvnetMapGoalLocalize        string            `json:"evnet_map_goal_localize"`
	EvnetMapNameLocalize        string            `json:"evnet_map_name_localize"`
	MapEnterScenarioGroupId     int64             `json:"map_enter_scenario_group_id"`
	EvnetScenarioBg             string            `json:"evnet_scenario_bg"`
	ManageUnitChange            int32             `json:"manage_unit_change"`
	AssistCount                 int32             `json:"assist_count"`
	PlayTimeLimitInSeconds      int32             `json:"play_time_limit_in_seconds"`
	AnimationUnitAmountMin      int32             `json:"animation_unit_amount_min"`
	AnimationUnitAmountMax      int32             `json:"animation_unit_amount_max"`
	AnimationUnitDelay          float32           `json:"animation_unit_delay"`
	LocalizeUnexpected          string            `json:"localize_unexpected"`
	LocalizeErosions            string            `json:"localize_erosions"`
	LocalizeStep                string            `json:"localize_step"`
	LocalizeTile                string            `json:"localize_tile"`
	LocalizeMapInfo             string            `json:"localize_map_info"`
	LocalizeManage              string            `json:"localize_manage"`
	LocalizeUpgrade             string            `json:"localize_upgrade"`
	LocalizeTreasureBox         string            `json:"localize_treasure_box"`
	IndividualErosionDailyCount int64             `json:"individual_erosion_daily_count"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *ConquestEventExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	if t.FlatBuffer.TableKey == nil {
		t.FlatBuffer.InitKey(fbsutils.CreateTableKey("ConquestEvent"))
	}
	__offset_evnet_map_goal_localize := b.CreateString(fbsutils.Convert(t.EvnetMapGoalLocalize, t.FlatBuffer.TableKey))
	__offset_evnet_map_name_localize := b.CreateString(fbsutils.Convert(t.EvnetMapNameLocalize, t.FlatBuffer.TableKey))
	__offset_evnet_scenario_bg := b.CreateString(fbsutils.Convert(t.EvnetScenarioBg, t.FlatBuffer.TableKey))
	__offset_localize_unexpected := b.CreateString(fbsutils.Convert(t.LocalizeUnexpected, t.FlatBuffer.TableKey))
	__offset_localize_erosions := b.CreateString(fbsutils.Convert(t.LocalizeErosions, t.FlatBuffer.TableKey))
	__offset_localize_step := b.CreateString(fbsutils.Convert(t.LocalizeStep, t.FlatBuffer.TableKey))
	__offset_localize_tile := b.CreateString(fbsutils.Convert(t.LocalizeTile, t.FlatBuffer.TableKey))
	__offset_localize_map_info := b.CreateString(fbsutils.Convert(t.LocalizeMapInfo, t.FlatBuffer.TableKey))
	__offset_localize_manage := b.CreateString(fbsutils.Convert(t.LocalizeManage, t.FlatBuffer.TableKey))
	__offset_localize_upgrade := b.CreateString(fbsutils.Convert(t.LocalizeUpgrade, t.FlatBuffer.TableKey))
	__offset_localize_treasure_box := b.CreateString(fbsutils.Convert(t.LocalizeTreasureBox, t.FlatBuffer.TableKey))
	ConquestEventExcelStart(b)
	ConquestEventExcelAddEventContentId(b, fbsutils.Convert(t.EventContentId, t.FlatBuffer.TableKey))
	ConquestEventExcelAddMainStoryEventContentId(b, fbsutils.Convert(t.MainStoryEventContentId, t.FlatBuffer.TableKey))
	ConquestEventExcelAddConquestEventType(b, fbsutils.Convert(t.ConquestEventType, t.FlatBuffer.TableKey))
	ConquestEventExcelAddUseErosion(b, t.UseErosion)
	ConquestEventExcelAddUseUnexpectedEvent(b, t.UseUnexpectedEvent)
	ConquestEventExcelAddUseCalculate(b, t.UseCalculate)
	ConquestEventExcelAddUseConquestObject(b, t.UseConquestObject)
	ConquestEventExcelAddEvnetMapGoalLocalize(b, __offset_evnet_map_goal_localize)
	ConquestEventExcelAddEvnetMapNameLocalize(b, __offset_evnet_map_name_localize)
	ConquestEventExcelAddMapEnterScenarioGroupId(b, fbsutils.Convert(t.MapEnterScenarioGroupId, t.FlatBuffer.TableKey))
	ConquestEventExcelAddEvnetScenarioBg(b, __offset_evnet_scenario_bg)
	ConquestEventExcelAddManageUnitChange(b, fbsutils.Convert(t.ManageUnitChange, t.FlatBuffer.TableKey))
	ConquestEventExcelAddAssistCount(b, fbsutils.Convert(t.AssistCount, t.FlatBuffer.TableKey))
	ConquestEventExcelAddPlayTimeLimitInSeconds(b, fbsutils.Convert(t.PlayTimeLimitInSeconds, t.FlatBuffer.TableKey))
	ConquestEventExcelAddAnimationUnitAmountMin(b, fbsutils.Convert(t.AnimationUnitAmountMin, t.FlatBuffer.TableKey))
	ConquestEventExcelAddAnimationUnitAmountMax(b, fbsutils.Convert(t.AnimationUnitAmountMax, t.FlatBuffer.TableKey))
	ConquestEventExcelAddAnimationUnitDelay(b, fbsutils.Convert(t.AnimationUnitDelay, t.FlatBuffer.TableKey))
	ConquestEventExcelAddLocalizeUnexpected(b, __offset_localize_unexpected)
	ConquestEventExcelAddLocalizeErosions(b, __offset_localize_erosions)
	ConquestEventExcelAddLocalizeStep(b, __offset_localize_step)
	ConquestEventExcelAddLocalizeTile(b, __offset_localize_tile)
	ConquestEventExcelAddLocalizeMapInfo(b, __offset_localize_map_info)
	ConquestEventExcelAddLocalizeManage(b, __offset_localize_manage)
	ConquestEventExcelAddLocalizeUpgrade(b, __offset_localize_upgrade)
	ConquestEventExcelAddLocalizeTreasureBox(b, __offset_localize_treasure_box)
	ConquestEventExcelAddIndividualErosionDailyCount(b, fbsutils.Convert(t.IndividualErosionDailyCount, t.FlatBuffer.TableKey))
	return ConquestEventExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *ConquestEventExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *ConquestEventExcelDto) UnmarshalMessage(e *ConquestEventExcel) error {
	if t.FlatBuffer.TableKey == nil {
		t.FlatBuffer.InitKey(fbsutils.CreateTableKey("ConquestEvent"))
	}
	t.EventContentId = fbsutils.Convert(e.EventContentId(), t.FlatBuffer.TableKey)
	t.MainStoryEventContentId = fbsutils.Convert(e.MainStoryEventContentId(), t.FlatBuffer.TableKey)
	t.ConquestEventType = ConquestEventType(fbsutils.Convert(int32(e.ConquestEventType()), t.FlatBuffer.TableKey))
	t.UseErosion = e.UseErosion()
	t.UseUnexpectedEvent = e.UseUnexpectedEvent()
	t.UseCalculate = e.UseCalculate()
	t.UseConquestObject = e.UseConquestObject()
	t.EvnetMapGoalLocalize = fbsutils.Convert(string(e.EvnetMapGoalLocalize()), t.FlatBuffer.TableKey)
	t.EvnetMapNameLocalize = fbsutils.Convert(string(e.EvnetMapNameLocalize()), t.FlatBuffer.TableKey)
	t.MapEnterScenarioGroupId = fbsutils.Convert(e.MapEnterScenarioGroupId(), t.FlatBuffer.TableKey)
	t.EvnetScenarioBg = fbsutils.Convert(string(e.EvnetScenarioBg()), t.FlatBuffer.TableKey)
	t.ManageUnitChange = fbsutils.Convert(e.ManageUnitChange(), t.FlatBuffer.TableKey)
	t.AssistCount = fbsutils.Convert(e.AssistCount(), t.FlatBuffer.TableKey)
	t.PlayTimeLimitInSeconds = fbsutils.Convert(e.PlayTimeLimitInSeconds(), t.FlatBuffer.TableKey)
	t.AnimationUnitAmountMin = fbsutils.Convert(e.AnimationUnitAmountMin(), t.FlatBuffer.TableKey)
	t.AnimationUnitAmountMax = fbsutils.Convert(e.AnimationUnitAmountMax(), t.FlatBuffer.TableKey)
	t.AnimationUnitDelay = fbsutils.Convert(e.AnimationUnitDelay(), t.FlatBuffer.TableKey)
	t.LocalizeUnexpected = fbsutils.Convert(string(e.LocalizeUnexpected()), t.FlatBuffer.TableKey)
	t.LocalizeErosions = fbsutils.Convert(string(e.LocalizeErosions()), t.FlatBuffer.TableKey)
	t.LocalizeStep = fbsutils.Convert(string(e.LocalizeStep()), t.FlatBuffer.TableKey)
	t.LocalizeTile = fbsutils.Convert(string(e.LocalizeTile()), t.FlatBuffer.TableKey)
	t.LocalizeMapInfo = fbsutils.Convert(string(e.LocalizeMapInfo()), t.FlatBuffer.TableKey)
	t.LocalizeManage = fbsutils.Convert(string(e.LocalizeManage()), t.FlatBuffer.TableKey)
	t.LocalizeUpgrade = fbsutils.Convert(string(e.LocalizeUpgrade()), t.FlatBuffer.TableKey)
	t.LocalizeTreasureBox = fbsutils.Convert(string(e.LocalizeTreasureBox()), t.FlatBuffer.TableKey)
	t.IndividualErosionDailyCount = fbsutils.Convert(e.IndividualErosionDailyCount(), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *ConquestEventExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsConquestEventExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (ConquestEventExcelDto) FlatDataName() string {
	return "ConquestEventExcel"
}
