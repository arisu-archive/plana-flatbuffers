// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package flatdata

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type ConstAudioExcel struct {
	_tab flatbuffers.Table
}

func GetRootAsConstAudioExcel(buf []byte, offset flatbuffers.UOffsetT) *ConstAudioExcel {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &ConstAudioExcel{}
	x.Init(buf, n+offset)
	return x
}

func GetSizePrefixedRootAsConstAudioExcel(buf []byte, offset flatbuffers.UOffsetT) *ConstAudioExcel {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &ConstAudioExcel{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func (rcv *ConstAudioExcel) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *ConstAudioExcel) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *ConstAudioExcel) DefaultSnapShotName() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *ConstAudioExcel) BattleSnapShotName() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *ConstAudioExcel) RaidSnapShotName() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *ConstAudioExcel) ExSkillCutInSnapShotName() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func ConstAudioExcelStart(builder *flatbuffers.Builder) {
	builder.StartObject(4)
}
func ConstAudioExcelAddDefaultSnapShotName(builder *flatbuffers.Builder, defaultSnapShotName flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(defaultSnapShotName), 0)
}
func ConstAudioExcelAddBattleSnapShotName(builder *flatbuffers.Builder, battleSnapShotName flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(battleSnapShotName), 0)
}
func ConstAudioExcelAddRaidSnapShotName(builder *flatbuffers.Builder, raidSnapShotName flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(2, flatbuffers.UOffsetT(raidSnapShotName), 0)
}
func ConstAudioExcelAddExSkillCutInSnapShotName(builder *flatbuffers.Builder, exSkillCutInSnapShotName flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(3, flatbuffers.UOffsetT(exSkillCutInSnapShotName), 0)
}
func ConstAudioExcelEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
