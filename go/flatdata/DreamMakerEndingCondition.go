// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package flatdata

import "strconv"

type DreamMakerEndingCondition int32

const (
	DreamMakerEndingConditionNone            DreamMakerEndingCondition = 0
	DreamMakerEndingConditionParam01         DreamMakerEndingCondition = 1
	DreamMakerEndingConditionParam02         DreamMakerEndingCondition = 2
	DreamMakerEndingConditionParam03         DreamMakerEndingCondition = 3
	DreamMakerEndingConditionParam04         DreamMakerEndingCondition = 4
	DreamMakerEndingConditionRound           DreamMakerEndingCondition = 5
	DreamMakerEndingConditionCollectionCount DreamMakerEndingCondition = 6
)

var EnumNamesDreamMakerEndingCondition = map[DreamMakerEndingCondition]string{
	DreamMakerEndingConditionNone:            "None",
	DreamMakerEndingConditionParam01:         "Param01",
	DreamMakerEndingConditionParam02:         "Param02",
	DreamMakerEndingConditionParam03:         "Param03",
	DreamMakerEndingConditionParam04:         "Param04",
	DreamMakerEndingConditionRound:           "Round",
	DreamMakerEndingConditionCollectionCount: "CollectionCount",
}

var EnumValuesDreamMakerEndingCondition = map[string]DreamMakerEndingCondition{
	"None":            DreamMakerEndingConditionNone,
	"Param01":         DreamMakerEndingConditionParam01,
	"Param02":         DreamMakerEndingConditionParam02,
	"Param03":         DreamMakerEndingConditionParam03,
	"Param04":         DreamMakerEndingConditionParam04,
	"Round":           DreamMakerEndingConditionRound,
	"CollectionCount": DreamMakerEndingConditionCollectionCount,
}

func (v DreamMakerEndingCondition) String() string {
	if s, ok := EnumNamesDreamMakerEndingCondition[v]; ok {
		return s
	}
	return "DreamMakerEndingCondition(" + strconv.FormatInt(int64(v), 10) + ")"
}
