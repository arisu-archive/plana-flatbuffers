// Code generated by fbsgen. DO NOT EDIT.
// Package flatdata contains generated code for FlatBuffers schema
package flatdata

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// LocalizeCCGExcelDto represents a FlatBuffers table
type LocalizeCCGExcelDto struct {
	fbsutils.FlatBuffer
	Key uint32 `json:"key"`
	Kr  string `json:"kr"`
	Jp  string `json:"jp"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *LocalizeCCGExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	if t.FlatBuffer.TableKey == nil {
		t.FlatBuffer.InitKey(fbsutils.CreateTableKey("LocalizeCCG"))
	}
	__offset_kr := b.CreateString(fbsutils.Convert(t.Kr, t.FlatBuffer.TableKey))
	__offset_jp := b.CreateString(fbsutils.Convert(t.Jp, t.FlatBuffer.TableKey))
	LocalizeCCGExcelStart(b)
	LocalizeCCGExcelAddKey(b, fbsutils.Convert(t.Key, t.FlatBuffer.TableKey))
	LocalizeCCGExcelAddKr(b, __offset_kr)
	LocalizeCCGExcelAddJp(b, __offset_jp)
	return LocalizeCCGExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *LocalizeCCGExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *LocalizeCCGExcelDto) UnmarshalMessage(e *LocalizeCCGExcel) error {
	if t.FlatBuffer.TableKey == nil {
		t.FlatBuffer.InitKey(fbsutils.CreateTableKey("LocalizeCCG"))
	}
	t.Key = fbsutils.Convert(e.Key(), t.FlatBuffer.TableKey)
	t.Kr = fbsutils.Convert(string(e.Kr()), t.FlatBuffer.TableKey)
	t.Jp = fbsutils.Convert(string(e.Jp()), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *LocalizeCCGExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsLocalizeCCGExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (LocalizeCCGExcelDto) FlatDataName() string {
	return "LocalizeCCGExcel"
}
