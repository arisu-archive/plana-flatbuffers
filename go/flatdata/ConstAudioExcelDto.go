// Code generated by fbsgen. DO NOT EDIT.
// Package flatdata contains generated code for FlatBuffers schema
package flatdata

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// ConstAudioExcelDto represents a FlatBuffers table
type ConstAudioExcelDto struct {
	fbsutils.FlatBuffer
	DefaultSnapShotName      string `json:"default_snap_shot_name"`
	BattleSnapShotName       string `json:"battle_snap_shot_name"`
	RaidSnapShotName         string `json:"raid_snap_shot_name"`
	ExSkillCutInSnapShotName string `json:"ex_skill_cut_in_snap_shot_name"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *ConstAudioExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	if t.FlatBuffer.TableKey == nil {
		t.FlatBuffer.InitKey(fbsutils.CreateTableKey("ConstAudio"))
	}
	ConstAudioExcelStart(b)
	ConstAudioExcelAddDefaultSnapShotName(b, b.CreateString(fbsutils.Convert(t.DefaultSnapShotName, t.FlatBuffer.TableKey)))
	ConstAudioExcelAddBattleSnapShotName(b, b.CreateString(fbsutils.Convert(t.BattleSnapShotName, t.FlatBuffer.TableKey)))
	ConstAudioExcelAddRaidSnapShotName(b, b.CreateString(fbsutils.Convert(t.RaidSnapShotName, t.FlatBuffer.TableKey)))
	ConstAudioExcelAddExSkillCutInSnapShotName(b, b.CreateString(fbsutils.Convert(t.ExSkillCutInSnapShotName, t.FlatBuffer.TableKey)))
	return ConstAudioExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *ConstAudioExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	FinishConstAudioExcelBuffer(b, t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *ConstAudioExcelDto) UnmarshalMessage(e *ConstAudioExcel) error {
	if t.FlatBuffer.TableKey == nil {
		t.FlatBuffer.InitKey(fbsutils.CreateTableKey("ConstAudio"))
	}
	t.DefaultSnapShotName = fbsutils.Convert(string(e.DefaultSnapShotName()), t.FlatBuffer.TableKey)
	t.BattleSnapShotName = fbsutils.Convert(string(e.BattleSnapShotName()), t.FlatBuffer.TableKey)
	t.RaidSnapShotName = fbsutils.Convert(string(e.RaidSnapShotName()), t.FlatBuffer.TableKey)
	t.ExSkillCutInSnapShotName = fbsutils.Convert(string(e.ExSkillCutInSnapShotName()), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *ConstAudioExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsConstAudioExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (ConstAudioExcelDto) FlatDataName() string {
	return "ConstAudioExcel"
}
