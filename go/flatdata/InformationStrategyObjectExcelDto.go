// Code generated by fbsgen. DO NOT EDIT.
// Package flatdata contains generated code for FlatBuffers schema
package flatdata

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// InformationStrategyObjectExcelDto represents a FlatBuffers table
type InformationStrategyObjectExcelDto struct {
	fbsutils.FlatBuffer
	Id             int64  `json:"id"`
	StageId        int64  `json:"stage_id"`
	PageName       string `json:"page_name"`
	LocalizeCodeId string `json:"localize_code_id"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *InformationStrategyObjectExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	if t.FlatBuffer.TableKey == nil {
		t.FlatBuffer.InitKey(fbsutils.CreateTableKey("InformationStrategyObject"))
	}
	__offset_page_name := b.CreateString(fbsutils.Convert(t.PageName, t.FlatBuffer.TableKey))
	__offset_localize_code_id := b.CreateString(fbsutils.Convert(t.LocalizeCodeId, t.FlatBuffer.TableKey))
	InformationStrategyObjectExcelStart(b)
	InformationStrategyObjectExcelAddId(b, fbsutils.Convert(t.Id, t.FlatBuffer.TableKey))
	InformationStrategyObjectExcelAddStageId(b, fbsutils.Convert(t.StageId, t.FlatBuffer.TableKey))
	InformationStrategyObjectExcelAddPageName(b, __offset_page_name)
	InformationStrategyObjectExcelAddLocalizeCodeId(b, __offset_localize_code_id)
	return InformationStrategyObjectExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *InformationStrategyObjectExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *InformationStrategyObjectExcelDto) UnmarshalMessage(e *InformationStrategyObjectExcel) error {
	if t.FlatBuffer.TableKey == nil {
		t.FlatBuffer.InitKey(fbsutils.CreateTableKey("InformationStrategyObject"))
	}
	t.Id = fbsutils.Convert(e.Id(), t.FlatBuffer.TableKey)
	t.StageId = fbsutils.Convert(e.StageId(), t.FlatBuffer.TableKey)
	t.PageName = fbsutils.Convert(string(e.PageName()), t.FlatBuffer.TableKey)
	t.LocalizeCodeId = fbsutils.Convert(string(e.LocalizeCodeId()), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *InformationStrategyObjectExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsInformationStrategyObjectExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (InformationStrategyObjectExcelDto) FlatDataName() string {
	return "InformationStrategyObjectExcel"
}
