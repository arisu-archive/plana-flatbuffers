// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package flatdata

import "strconv"

type EmblemDisplayType int32

const (
	EmblemDisplayTypeAlways    EmblemDisplayType = 0
	EmblemDisplayTypeTime      EmblemDisplayType = 1
	EmblemDisplayTypeFavor     EmblemDisplayType = 2
	EmblemDisplayTypePotential EmblemDisplayType = 3
)

var EnumNamesEmblemDisplayType = map[EmblemDisplayType]string{
	EmblemDisplayTypeAlways:    "Always",
	EmblemDisplayTypeTime:      "Time",
	EmblemDisplayTypeFavor:     "Favor",
	EmblemDisplayTypePotential: "Potential",
}

var EnumValuesEmblemDisplayType = map[string]EmblemDisplayType{
	"Always":    EmblemDisplayTypeAlways,
	"Time":      EmblemDisplayTypeTime,
	"Favor":     EmblemDisplayTypeFavor,
	"Potential": EmblemDisplayTypePotential,
}

func (v EmblemDisplayType) String() string {
	if s, ok := EnumNamesEmblemDisplayType[v]; ok {
		return s
	}
	return "EmblemDisplayType(" + strconv.FormatInt(int64(v), 10) + ")"
}
