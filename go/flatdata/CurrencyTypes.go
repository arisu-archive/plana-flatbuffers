// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package flatdata

import "strconv"

type CurrencyTypes int32

const (
	CurrencyTypesInvalid                   CurrencyTypes = 0
	CurrencyTypesGold                      CurrencyTypes = 1
	CurrencyTypesGemPaid                   CurrencyTypes = 2
	CurrencyTypesGemBonus                  CurrencyTypes = 3
	CurrencyTypesGem                       CurrencyTypes = 4
	CurrencyTypesActionPoint               CurrencyTypes = 5
	CurrencyTypesAcademyTicket             CurrencyTypes = 6
	CurrencyTypesArenaTicket               CurrencyTypes = 7
	CurrencyTypesRaidTicket                CurrencyTypes = 8
	CurrencyTypesWeekDungeonChaserATicket  CurrencyTypes = 9
	CurrencyTypesWeekDungeonFindGiftTicket CurrencyTypes = 10
	CurrencyTypesWeekDungeonBloodTicket    CurrencyTypes = 11
	CurrencyTypesWeekDungeonChaserBTicket  CurrencyTypes = 12
	CurrencyTypesWeekDungeonChaserCTicket  CurrencyTypes = 13
	CurrencyTypesSchoolDungeonATicket      CurrencyTypes = 14
	CurrencyTypesSchoolDungeonBTicket      CurrencyTypes = 15
	CurrencyTypesSchoolDungeonCTicket      CurrencyTypes = 16
	CurrencyTypesTimeAttackDungeonTicket   CurrencyTypes = 17
	CurrencyTypesMasterCoin                CurrencyTypes = 18
	CurrencyTypesWorldRaidTicketA          CurrencyTypes = 19
	CurrencyTypesWorldRaidTicketB          CurrencyTypes = 20
	CurrencyTypesWorldRaidTicketC          CurrencyTypes = 21
	CurrencyTypesChaserTotalTicket         CurrencyTypes = 22
	CurrencyTypesSchoolDungeonTotalTicket  CurrencyTypes = 23
	CurrencyTypesEliminateTicketA          CurrencyTypes = 24
	CurrencyTypesEliminateTicketB          CurrencyTypes = 25
	CurrencyTypesEliminateTicketC          CurrencyTypes = 26
	CurrencyTypesEliminateTicketD          CurrencyTypes = 27
	CurrencyTypesCafeSummonTicket1         CurrencyTypes = 28
	CurrencyTypesCafeSummonTicket2         CurrencyTypes = 29
	CurrencyTypesMax                       CurrencyTypes = 30
)

var EnumNamesCurrencyTypes = map[CurrencyTypes]string{
	CurrencyTypesInvalid:                   "Invalid",
	CurrencyTypesGold:                      "Gold",
	CurrencyTypesGemPaid:                   "GemPaid",
	CurrencyTypesGemBonus:                  "GemBonus",
	CurrencyTypesGem:                       "Gem",
	CurrencyTypesActionPoint:               "ActionPoint",
	CurrencyTypesAcademyTicket:             "AcademyTicket",
	CurrencyTypesArenaTicket:               "ArenaTicket",
	CurrencyTypesRaidTicket:                "RaidTicket",
	CurrencyTypesWeekDungeonChaserATicket:  "WeekDungeonChaserATicket",
	CurrencyTypesWeekDungeonFindGiftTicket: "WeekDungeonFindGiftTicket",
	CurrencyTypesWeekDungeonBloodTicket:    "WeekDungeonBloodTicket",
	CurrencyTypesWeekDungeonChaserBTicket:  "WeekDungeonChaserBTicket",
	CurrencyTypesWeekDungeonChaserCTicket:  "WeekDungeonChaserCTicket",
	CurrencyTypesSchoolDungeonATicket:      "SchoolDungeonATicket",
	CurrencyTypesSchoolDungeonBTicket:      "SchoolDungeonBTicket",
	CurrencyTypesSchoolDungeonCTicket:      "SchoolDungeonCTicket",
	CurrencyTypesTimeAttackDungeonTicket:   "TimeAttackDungeonTicket",
	CurrencyTypesMasterCoin:                "MasterCoin",
	CurrencyTypesWorldRaidTicketA:          "WorldRaidTicketA",
	CurrencyTypesWorldRaidTicketB:          "WorldRaidTicketB",
	CurrencyTypesWorldRaidTicketC:          "WorldRaidTicketC",
	CurrencyTypesChaserTotalTicket:         "ChaserTotalTicket",
	CurrencyTypesSchoolDungeonTotalTicket:  "SchoolDungeonTotalTicket",
	CurrencyTypesEliminateTicketA:          "EliminateTicketA",
	CurrencyTypesEliminateTicketB:          "EliminateTicketB",
	CurrencyTypesEliminateTicketC:          "EliminateTicketC",
	CurrencyTypesEliminateTicketD:          "EliminateTicketD",
	CurrencyTypesCafeSummonTicket1:         "CafeSummonTicket1",
	CurrencyTypesCafeSummonTicket2:         "CafeSummonTicket2",
	CurrencyTypesMax:                       "Max",
}

var EnumValuesCurrencyTypes = map[string]CurrencyTypes{
	"Invalid":                   CurrencyTypesInvalid,
	"Gold":                      CurrencyTypesGold,
	"GemPaid":                   CurrencyTypesGemPaid,
	"GemBonus":                  CurrencyTypesGemBonus,
	"Gem":                       CurrencyTypesGem,
	"ActionPoint":               CurrencyTypesActionPoint,
	"AcademyTicket":             CurrencyTypesAcademyTicket,
	"ArenaTicket":               CurrencyTypesArenaTicket,
	"RaidTicket":                CurrencyTypesRaidTicket,
	"WeekDungeonChaserATicket":  CurrencyTypesWeekDungeonChaserATicket,
	"WeekDungeonFindGiftTicket": CurrencyTypesWeekDungeonFindGiftTicket,
	"WeekDungeonBloodTicket":    CurrencyTypesWeekDungeonBloodTicket,
	"WeekDungeonChaserBTicket":  CurrencyTypesWeekDungeonChaserBTicket,
	"WeekDungeonChaserCTicket":  CurrencyTypesWeekDungeonChaserCTicket,
	"SchoolDungeonATicket":      CurrencyTypesSchoolDungeonATicket,
	"SchoolDungeonBTicket":      CurrencyTypesSchoolDungeonBTicket,
	"SchoolDungeonCTicket":      CurrencyTypesSchoolDungeonCTicket,
	"TimeAttackDungeonTicket":   CurrencyTypesTimeAttackDungeonTicket,
	"MasterCoin":                CurrencyTypesMasterCoin,
	"WorldRaidTicketA":          CurrencyTypesWorldRaidTicketA,
	"WorldRaidTicketB":          CurrencyTypesWorldRaidTicketB,
	"WorldRaidTicketC":          CurrencyTypesWorldRaidTicketC,
	"ChaserTotalTicket":         CurrencyTypesChaserTotalTicket,
	"SchoolDungeonTotalTicket":  CurrencyTypesSchoolDungeonTotalTicket,
	"EliminateTicketA":          CurrencyTypesEliminateTicketA,
	"EliminateTicketB":          CurrencyTypesEliminateTicketB,
	"EliminateTicketC":          CurrencyTypesEliminateTicketC,
	"EliminateTicketD":          CurrencyTypesEliminateTicketD,
	"CafeSummonTicket1":         CurrencyTypesCafeSummonTicket1,
	"CafeSummonTicket2":         CurrencyTypesCafeSummonTicket2,
	"Max":                       CurrencyTypesMax,
}

func (v CurrencyTypes) String() string {
	if s, ok := EnumNamesCurrencyTypes[v]; ok {
		return s
	}
	return "CurrencyTypes(" + strconv.FormatInt(int64(v), 10) + ")"
}
