package flatdata

import (
	"reflect"

	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
)

var fbs = map[string]reflect.Type{
	"anieventdata": reflect.TypeOf((*AniEventDataDto)(nil)).Elem(),
	"animationblendtable": reflect.TypeOf((*AnimationBlendTableDto)(nil)).Elem(),
	"animatordata": reflect.TypeOf((*AnimatorDataDto)(nil)).Elem(),
	"animatordatatable": reflect.TypeOf((*AnimatorDataTableDto)(nil)).Elem(),
	"anistatedata": reflect.TypeOf((*AniStateDataDto)(nil)).Elem(),
	"battleexcel": reflect.TypeOf((*BattleExcelDto)(nil)).Elem(),
	"battleexceltable": reflect.TypeOf((*BattleExcelTableDto)(nil)).Elem(),
	"blenddata": reflect.TypeOf((*BlendDataDto)(nil)).Elem(),
	"blendinfo": reflect.TypeOf((*BlendInfoDto)(nil)).Elem(),
	"bossphaseexcel": reflect.TypeOf((*BossPhaseExcelDto)(nil)).Elem(),
	"bossphaseexceltable": reflect.TypeOf((*BossPhaseExcelTableDto)(nil)).Elem(),
	"buffparticleexcel": reflect.TypeOf((*BuffParticleExcelDto)(nil)).Elem(),
	"buffparticleexceltable": reflect.TypeOf((*BuffParticleExcelTableDto)(nil)).Elem(),
	"characterdialogemojiexcel": reflect.TypeOf((*CharacterDialogEmojiExcelDto)(nil)).Elem(),
	"characterdialogemojiexceltable": reflect.TypeOf((*CharacterDialogEmojiExcelTableDto)(nil)).Elem(),
	"characterdialogfieldexcel": reflect.TypeOf((*CharacterDialogFieldExcelDto)(nil)).Elem(),
	"characterdialogfieldexceltable": reflect.TypeOf((*CharacterDialogFieldExcelTableDto)(nil)).Elem(),
	"cleardeckruleexcel": reflect.TypeOf((*ClearDeckRuleExcelDto)(nil)).Elem(),
	"cleardeckruleexceltable": reflect.TypeOf((*ClearDeckRuleExcelTableDto)(nil)).Elem(),
	"conqueststepexcel": reflect.TypeOf((*ConquestStepExcelDto)(nil)).Elem(),
	"conqueststepexceltable": reflect.TypeOf((*ConquestStepExcelTableDto)(nil)).Elem(),
	"constarenaexcel": reflect.TypeOf((*ConstArenaExcelDto)(nil)).Elem(),
	"constarenaexceltable": reflect.TypeOf((*ConstArenaExcelTableDto)(nil)).Elem(),
	"constaudioexcel": reflect.TypeOf((*ConstAudioExcelDto)(nil)).Elem(),
	"constaudioexceltable": reflect.TypeOf((*ConstAudioExcelTableDto)(nil)).Elem(),
	"constcombatexcel": reflect.TypeOf((*ConstCombatExcelDto)(nil)).Elem(),
	"constcombatexceltable": reflect.TypeOf((*ConstCombatExcelTableDto)(nil)).Elem(),
	"constcommonexcel": reflect.TypeOf((*ConstCommonExcelDto)(nil)).Elem(),
	"constcommonexceltable": reflect.TypeOf((*ConstCommonExcelTableDto)(nil)).Elem(),
	"constconquestexcel": reflect.TypeOf((*ConstConquestExcelDto)(nil)).Elem(),
	"constconquestexceltable": reflect.TypeOf((*ConstConquestExcelTableDto)(nil)).Elem(),
	"consteventcommonexcel": reflect.TypeOf((*ConstEventCommonExcelDto)(nil)).Elem(),
	"consteventcommonexceltable": reflect.TypeOf((*ConstEventCommonExcelTableDto)(nil)).Elem(),
	"constfieldexcel": reflect.TypeOf((*ConstFieldExcelDto)(nil)).Elem(),
	"constfieldexceltable": reflect.TypeOf((*ConstFieldExcelTableDto)(nil)).Elem(),
	"constminigameccgexcel": reflect.TypeOf((*ConstMinigameCCGExcelDto)(nil)).Elem(),
	"constminigameccgexceltable": reflect.TypeOf((*ConstMinigameCCGExcelTableDto)(nil)).Elem(),
	"constminigameroadpuzzleexcel": reflect.TypeOf((*ConstMinigameRoadPuzzleExcelDto)(nil)).Elem(),
	"constminigameroadpuzzleexceltable": reflect.TypeOf((*ConstMinigameRoadPuzzleExcelTableDto)(nil)).Elem(),
	"constminigameshootingexcel": reflect.TypeOf((*ConstMiniGameShootingExcelDto)(nil)).Elem(),
	"constminigameshootingexceltable": reflect.TypeOf((*ConstMiniGameShootingExcelTableDto)(nil)).Elem(),
	"constminigametbgexcel": reflect.TypeOf((*ConstMinigameTBGExcelDto)(nil)).Elem(),
	"constminigametbgexceltable": reflect.TypeOf((*ConstMinigameTBGExcelTableDto)(nil)).Elem(),
	"constnewbiecontentexcel": reflect.TypeOf((*ConstNewbieContentExcelDto)(nil)).Elem(),
	"constnewbiecontentexceltable": reflect.TypeOf((*ConstNewbieContentExcelTableDto)(nil)).Elem(),
	"conststrategyexcel": reflect.TypeOf((*ConstStrategyExcelDto)(nil)).Elem(),
	"conststrategyexceltable": reflect.TypeOf((*ConstStrategyExcelTableDto)(nil)).Elem(),
	"couponstuffexcel": reflect.TypeOf((*CouponStuffExcelDto)(nil)).Elem(),
	"couponstuffexceltable": reflect.TypeOf((*CouponStuffExcelTableDto)(nil)).Elem(),
	"defaultcharacterexcel": reflect.TypeOf((*DefaultCharacterExcelDto)(nil)).Elem(),
	"defaultcharacterexceltable": reflect.TypeOf((*DefaultCharacterExcelTableDto)(nil)).Elem(),
	"defaultechelonexcel": reflect.TypeOf((*DefaultEchelonExcelDto)(nil)).Elem(),
	"defaultechelonexceltable": reflect.TypeOf((*DefaultEchelonExcelTableDto)(nil)).Elem(),
	"defaultfurnitureexcel": reflect.TypeOf((*DefaultFurnitureExcelDto)(nil)).Elem(),
	"defaultfurnitureexceltable": reflect.TypeOf((*DefaultFurnitureExcelTableDto)(nil)).Elem(),
	"defaultmailexcel": reflect.TypeOf((*DefaultMailExcelDto)(nil)).Elem(),
	"defaultmailexceltable": reflect.TypeOf((*DefaultMailExcelTableDto)(nil)).Elem(),
	"defaultparcelexcel": reflect.TypeOf((*DefaultParcelExcelDto)(nil)).Elem(),
	"defaultparcelexceltable": reflect.TypeOf((*DefaultParcelExcelTableDto)(nil)).Elem(),
	"emoticonspecialexcel": reflect.TypeOf((*EmoticonSpecialExcelDto)(nil)).Elem(),
	"emoticonspecialexceltable": reflect.TypeOf((*EmoticonSpecialExcelTableDto)(nil)).Elem(),
	"eventcontentboxgachaelementexcel": reflect.TypeOf((*EventContentBoxGachaElementExcelDto)(nil)).Elem(),
	"eventcontentboxgachaelementexceltable": reflect.TypeOf((*EventContentBoxGachaElementExcelTableDto)(nil)).Elem(),
	"eventcontentexcel": reflect.TypeOf((*EventContentExcelDto)(nil)).Elem(),
	"eventcontentexceltable": reflect.TypeOf((*EventContentExcelTableDto)(nil)).Elem(),
	"fieldcontentstageexcel": reflect.TypeOf((*FieldContentStageExcelDto)(nil)).Elem(),
	"fieldcontentstageexceltable": reflect.TypeOf((*FieldContentStageExcelTableDto)(nil)).Elem(),
	"fieldcontentstagerewardexcel": reflect.TypeOf((*FieldContentStageRewardExcelDto)(nil)).Elem(),
	"fieldcontentstagerewardexceltable": reflect.TypeOf((*FieldContentStageRewardExcelTableDto)(nil)).Elem(),
	"fieldcurtaincallfreemodeexcel": reflect.TypeOf((*FieldCurtainCallFreeModeExcelDto)(nil)).Elem(),
	"fieldcurtaincallfreemodeexceltable": reflect.TypeOf((*FieldCurtainCallFreeModeExcelTableDto)(nil)).Elem(),
	"fielddateexcel": reflect.TypeOf((*FieldDateExcelDto)(nil)).Elem(),
	"fielddateexceltable": reflect.TypeOf((*FieldDateExcelTableDto)(nil)).Elem(),
	"fieldevidenceexcel": reflect.TypeOf((*FieldEvidenceExcelDto)(nil)).Elem(),
	"fieldevidenceexceltable": reflect.TypeOf((*FieldEvidenceExcelTableDto)(nil)).Elem(),
	"fieldinteractionexcel": reflect.TypeOf((*FieldInteractionExcelDto)(nil)).Elem(),
	"fieldinteractionexceltable": reflect.TypeOf((*FieldInteractionExcelTableDto)(nil)).Elem(),
	"fieldkeywordexcel": reflect.TypeOf((*FieldKeywordExcelDto)(nil)).Elem(),
	"fieldkeywordexceltable": reflect.TypeOf((*FieldKeywordExcelTableDto)(nil)).Elem(),
	"fieldmasteryexcel": reflect.TypeOf((*FieldMasteryExcelDto)(nil)).Elem(),
	"fieldmasteryexceltable": reflect.TypeOf((*FieldMasteryExcelTableDto)(nil)).Elem(),
	"fieldmasterylevelexcel": reflect.TypeOf((*FieldMasteryLevelExcelDto)(nil)).Elem(),
	"fieldmasterylevelexceltable": reflect.TypeOf((*FieldMasteryLevelExcelTableDto)(nil)).Elem(),
	"fieldmasterymanageexcel": reflect.TypeOf((*FieldMasteryManageExcelDto)(nil)).Elem(),
	"fieldmasterymanageexceltable": reflect.TypeOf((*FieldMasteryManageExcelTableDto)(nil)).Elem(),
	"fieldquestexcel": reflect.TypeOf((*FieldQuestExcelDto)(nil)).Elem(),
	"fieldquestexceltable": reflect.TypeOf((*FieldQuestExcelTableDto)(nil)).Elem(),
	"fieldrewardexcel": reflect.TypeOf((*FieldRewardExcelDto)(nil)).Elem(),
	"fieldrewardexceltable": reflect.TypeOf((*FieldRewardExcelTableDto)(nil)).Elem(),
	"fieldsceneexcel": reflect.TypeOf((*FieldSceneExcelDto)(nil)).Elem(),
	"fieldsceneexceltable": reflect.TypeOf((*FieldSceneExcelTableDto)(nil)).Elem(),
	"fieldseasonexcel": reflect.TypeOf((*FieldSeasonExcelDto)(nil)).Elem(),
	"fieldseasonexceltable": reflect.TypeOf((*FieldSeasonExcelTableDto)(nil)).Elem(),
	"fieldstorystageexcel": reflect.TypeOf((*FieldStoryStageExcelDto)(nil)).Elem(),
	"fieldstorystageexceltable": reflect.TypeOf((*FieldStoryStageExcelTableDto)(nil)).Elem(),
	"fieldtutorialexcel": reflect.TypeOf((*FieldTutorialExcelDto)(nil)).Elem(),
	"fieldtutorialexceltable": reflect.TypeOf((*FieldTutorialExcelTableDto)(nil)).Elem(),
	"fieldworldmapzoneexcel": reflect.TypeOf((*FieldWorldMapZoneExcelDto)(nil)).Elem(),
	"fieldworldmapzoneexceltable": reflect.TypeOf((*FieldWorldMapZoneExcelTableDto)(nil)).Elem(),
	"form": reflect.TypeOf((*FormDto)(nil)).Elem(),
	"gachaselectpickupgroupexcel": reflect.TypeOf((*GachaSelectPickupGroupExcelDto)(nil)).Elem(),
	"gachaselectpickupgroupexceltable": reflect.TypeOf((*GachaSelectPickupGroupExcelTableDto)(nil)).Elem(),
	"groundgridflat": reflect.TypeOf((*GroundGridFlatDto)(nil)).Elem(),
	"groundnodeflat": reflect.TypeOf((*GroundNodeFlatDto)(nil)).Elem(),
	"groundnodelayerflat": reflect.TypeOf((*GroundNodeLayerFlatDto)(nil)).Elem(),
	"groundvector3": reflect.TypeOf((*GroundVector3Dto)(nil)).Elem(),
	"knockbackexcel": reflect.TypeOf((*KnockBackExcelDto)(nil)).Elem(),
	"knockbackexceltable": reflect.TypeOf((*KnockBackExcelTableDto)(nil)).Elem(),
	"limitedstageexcel": reflect.TypeOf((*LimitedStageExcelDto)(nil)).Elem(),
	"limitedstageexceltable": reflect.TypeOf((*LimitedStageExcelTableDto)(nil)).Elem(),
	"limitedstagerewardexcel": reflect.TypeOf((*LimitedStageRewardExcelDto)(nil)).Elem(),
	"limitedstagerewardexceltable": reflect.TypeOf((*LimitedStageRewardExcelTableDto)(nil)).Elem(),
	"limitedstageseasonexcel": reflect.TypeOf((*LimitedStageSeasonExcelDto)(nil)).Elem(),
	"limitedstageseasonexceltable": reflect.TypeOf((*LimitedStageSeasonExcelTableDto)(nil)).Elem(),
	"localizeccgexcel": reflect.TypeOf((*LocalizeCCGExcelDto)(nil)).Elem(),
	"localizeccgexceltable": reflect.TypeOf((*LocalizeCCGExcelTableDto)(nil)).Elem(),
	"localizefieldexcel": reflect.TypeOf((*LocalizeFieldExcelDto)(nil)).Elem(),
	"localizefieldexceltable": reflect.TypeOf((*LocalizeFieldExcelTableDto)(nil)).Elem(),
	"minigamecardexcel": reflect.TypeOf((*MinigameCardExcelDto)(nil)).Elem(),
	"minigamecardexceltable": reflect.TypeOf((*MinigameCardExcelTableDto)(nil)).Elem(),
	"minigameroadexcel": reflect.TypeOf((*MinigameRoadExcelDto)(nil)).Elem(),
	"minigameroadexceltable": reflect.TypeOf((*MinigameRoadExcelTableDto)(nil)).Elem(),
	"motion": reflect.TypeOf((*MotionDto)(nil)).Elem(),
	"moveend": reflect.TypeOf((*MoveEndDto)(nil)).Elem(),
	"normalskilltemplateexcel": reflect.TypeOf((*NormalSkillTemplateExcelDto)(nil)).Elem(),
	"normalskilltemplateexceltable": reflect.TypeOf((*NormalSkillTemplateExcelTableDto)(nil)).Elem(),
	"obstacleexcel": reflect.TypeOf((*ObstacleExcelDto)(nil)).Elem(),
	"obstacleexceltable": reflect.TypeOf((*ObstacleExcelTableDto)(nil)).Elem(),
	"position": reflect.TypeOf((*PositionDto)(nil)).Elem(),
	"propmotion": reflect.TypeOf((*PropMotionDto)(nil)).Elem(),
	"proprootmotionflat": reflect.TypeOf((*PropRootMotionFlatDto)(nil)).Elem(),
	"propvector3": reflect.TypeOf((*PropVector3Dto)(nil)).Elem(),
	"protocolsettingexcel": reflect.TypeOf((*ProtocolSettingExcelDto)(nil)).Elem(),
	"protocolsettingexceltable": reflect.TypeOf((*ProtocolSettingExcelTableDto)(nil)).Elem(),
	"recipecraftexcel": reflect.TypeOf((*RecipeCraftExcelDto)(nil)).Elem(),
	"recipecraftexceltable": reflect.TypeOf((*RecipeCraftExcelTableDto)(nil)).Elem(),
	"rootmotionflat": reflect.TypeOf((*RootMotionFlatDto)(nil)).Elem(),
	"scenarioexcel": reflect.TypeOf((*ScenarioExcelDto)(nil)).Elem(),
	"scenarioexceltable": reflect.TypeOf((*ScenarioExcelTableDto)(nil)).Elem(),
	"scenarioreplayexcel": reflect.TypeOf((*ScenarioReplayExcelDto)(nil)).Elem(),
	"scenarioreplayexceltable": reflect.TypeOf((*ScenarioReplayExcelTableDto)(nil)).Elem(),
	"scenarioscriptfield1excel": reflect.TypeOf((*ScenarioScriptField1ExcelDto)(nil)).Elem(),
	"scenarioscriptfield1exceltable": reflect.TypeOf((*ScenarioScriptField1ExcelTableDto)(nil)).Elem(),
	"speciallobbyillustexcel": reflect.TypeOf((*SpecialLobbyIllustExcelDto)(nil)).Elem(),
	"speciallobbyillustexceltable": reflect.TypeOf((*SpecialLobbyIllustExcelTableDto)(nil)).Elem(),
	"stringtestexcel": reflect.TypeOf((*StringTestExcelDto)(nil)).Elem(),
	"stringtestexceltable": reflect.TypeOf((*StringTestExcelTableDto)(nil)).Elem(),
	"systemmailexcel": reflect.TypeOf((*SystemMailExcelDto)(nil)).Elem(),
	"systemmailexceltable": reflect.TypeOf((*SystemMailExcelTableDto)(nil)).Elem(),
	"tacticarenasimulatorsettingexcel": reflect.TypeOf((*TacticArenaSimulatorSettingExcelDto)(nil)).Elem(),
	"tacticarenasimulatorsettingexceltable": reflect.TypeOf((*TacticArenaSimulatorSettingExcelTableDto)(nil)).Elem(),
	"tacticdamagesimulatorsettingexcel": reflect.TypeOf((*TacticDamageSimulatorSettingExcelDto)(nil)).Elem(),
	"tacticdamagesimulatorsettingexceltable": reflect.TypeOf((*TacticDamageSimulatorSettingExcelTableDto)(nil)).Elem(),
	"tacticsimulatorsettingexcel": reflect.TypeOf((*TacticSimulatorSettingExcelDto)(nil)).Elem(),
	"tacticsimulatorsettingexceltable": reflect.TypeOf((*TacticSimulatorSettingExcelTableDto)(nil)).Elem(),
	"tactictimeattacksimulatorconfigexcel": reflect.TypeOf((*TacticTimeAttackSimulatorConfigExcelDto)(nil)).Elem(),
	"tactictimeattacksimulatorconfigexceltable": reflect.TypeOf((*TacticTimeAttackSimulatorConfigExcelTableDto)(nil)).Elem(),
	"tagexcel": reflect.TypeOf((*TagExcelDto)(nil)).Elem(),
	"tagexceltable": reflect.TypeOf((*TagExcelTableDto)(nil)).Elem(),
	"transcendencerecipeexcel": reflect.TypeOf((*TranscendenceRecipeExcelDto)(nil)).Elem(),
	"transcendencerecipeexceltable": reflect.TypeOf((*TranscendenceRecipeExcelTableDto)(nil)).Elem(),
	"weekdungeonfindgiftrewardexcel": reflect.TypeOf((*WeekDungeonFindGiftRewardExcelDto)(nil)).Elem(),
	"weekdungeonfindgiftrewardexceltable": reflect.TypeOf((*WeekDungeonFindGiftRewardExcelTableDto)(nil)).Elem(),
}

func GetFlatDataByName(name string) fbsutils.FlatData {
	if data, ok := fbs[name]; ok {
		return reflect.New(data).Interface().(fbsutils.FlatData)
	}
	return nil
}
