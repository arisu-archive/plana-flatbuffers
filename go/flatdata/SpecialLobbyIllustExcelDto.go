// Code generated by fbsgen. DO NOT EDIT.
// Package flatdata contains generated code for FlatBuffers schema
package flatdata

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// SpecialLobbyIllustExcelDto represents a FlatBuffers table
type SpecialLobbyIllustExcelDto struct {
	fbsutils.FlatBuffer
	UniqueId                 int64  `json:"unique_id"`
	DevName                  string `json:"dev_name"`
	CharacterCostumeUniqueId int64  `json:"character_costume_unique_id"`
	PrefabName               string `json:"prefab_name"`
	SlotTextureName          string `json:"slot_texture_name"`
	RewardTextureName        string `json:"reward_texture_name"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *SpecialLobbyIllustExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	if t.FlatBuffer.TableKey == nil {
		t.FlatBuffer.InitKey(fbsutils.CreateTableKey("SpecialLobbyIllust"))
	}
	__offset_dev_name := b.CreateString(fbsutils.Convert(t.DevName, t.FlatBuffer.TableKey))
	__offset_prefab_name := b.CreateString(fbsutils.Convert(t.PrefabName, t.FlatBuffer.TableKey))
	__offset_slot_texture_name := b.CreateString(fbsutils.Convert(t.SlotTextureName, t.FlatBuffer.TableKey))
	__offset_reward_texture_name := b.CreateString(fbsutils.Convert(t.RewardTextureName, t.FlatBuffer.TableKey))
	SpecialLobbyIllustExcelStart(b)
	SpecialLobbyIllustExcelAddUniqueId(b, fbsutils.Convert(t.UniqueId, t.FlatBuffer.TableKey))
	SpecialLobbyIllustExcelAddDevName(b, __offset_dev_name)
	SpecialLobbyIllustExcelAddCharacterCostumeUniqueId(b, fbsutils.Convert(t.CharacterCostumeUniqueId, t.FlatBuffer.TableKey))
	SpecialLobbyIllustExcelAddPrefabName(b, __offset_prefab_name)
	SpecialLobbyIllustExcelAddSlotTextureName(b, __offset_slot_texture_name)
	SpecialLobbyIllustExcelAddRewardTextureName(b, __offset_reward_texture_name)
	return SpecialLobbyIllustExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *SpecialLobbyIllustExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *SpecialLobbyIllustExcelDto) UnmarshalMessage(e *SpecialLobbyIllustExcel) error {
	if t.FlatBuffer.TableKey == nil {
		t.FlatBuffer.InitKey(fbsutils.CreateTableKey("SpecialLobbyIllust"))
	}
	t.UniqueId = fbsutils.Convert(e.UniqueId(), t.FlatBuffer.TableKey)
	t.DevName = fbsutils.Convert(string(e.DevName()), t.FlatBuffer.TableKey)
	t.CharacterCostumeUniqueId = fbsutils.Convert(e.CharacterCostumeUniqueId(), t.FlatBuffer.TableKey)
	t.PrefabName = fbsutils.Convert(string(e.PrefabName()), t.FlatBuffer.TableKey)
	t.SlotTextureName = fbsutils.Convert(string(e.SlotTextureName()), t.FlatBuffer.TableKey)
	t.RewardTextureName = fbsutils.Convert(string(e.RewardTextureName()), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *SpecialLobbyIllustExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsSpecialLobbyIllustExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (SpecialLobbyIllustExcelDto) FlatDataName() string {
	return "SpecialLobbyIllustExcel"
}
