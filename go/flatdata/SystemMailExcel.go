// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package flatdata

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type SystemMailExcel struct {
	_tab flatbuffers.Table
}

func GetRootAsSystemMailExcel(buf []byte, offset flatbuffers.UOffsetT) *SystemMailExcel {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &SystemMailExcel{}
	x.Init(buf, n+offset)
	return x
}

func GetSizePrefixedRootAsSystemMailExcel(buf []byte, offset flatbuffers.UOffsetT) *SystemMailExcel {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &SystemMailExcel{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func (rcv *SystemMailExcel) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *SystemMailExcel) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *SystemMailExcel) Comment() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *SystemMailExcel) ExpiredDay() int64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.GetInt64(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *SystemMailExcel) MutateExpiredDay(n int64) bool {
	return rcv._tab.MutateInt64Slot(6, n)
}

func (rcv *SystemMailExcel) MailType() MailType {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return MailType(rcv._tab.GetInt32(o + rcv._tab.Pos))
	}
	return 0
}

func (rcv *SystemMailExcel) MutateMailType(n MailType) bool {
	return rcv._tab.MutateInt32Slot(8, int32(n))
}

func (rcv *SystemMailExcel) Sender() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func SystemMailExcelStart(builder *flatbuffers.Builder) {
	builder.StartObject(4)
}
func SystemMailExcelAddComment(builder *flatbuffers.Builder, comment flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(comment), 0)
}
func SystemMailExcelAddExpiredDay(builder *flatbuffers.Builder, expiredDay int64) {
	builder.PrependInt64Slot(1, expiredDay, 0)
}
func SystemMailExcelAddMailType(builder *flatbuffers.Builder, mailType MailType) {
	builder.PrependInt32Slot(2, int32(mailType), 0)
}
func SystemMailExcelAddSender(builder *flatbuffers.Builder, sender flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(3, flatbuffers.UOffsetT(sender), 0)
}
func SystemMailExcelEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
