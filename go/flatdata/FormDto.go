// Code generated by fbsgen. DO NOT EDIT.
// Package flatdata contains generated code for FlatBuffers schema
package flatdata

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// FormDto represents a FlatBuffers table
type FormDto struct {
	fbsutils.FlatBuffer
	PublicSkill MotionDto  `json:"public_skill"`
	MoveEnd     MoveEndDto `json:"move_end"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *FormDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	if t.FlatBuffer.TableKey == nil {
		t.FlatBuffer.InitKey(fbsutils.CreateTableKey("Form"))
	}
	FormStart(b)
	FormAddPublicSkill(b, t.PublicSkill.MarshalModel(b))
	FormAddMoveEnd(b, t.MoveEnd.MarshalModel(b))
	return FormEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *FormDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *FormDto) UnmarshalMessage(e *Form) error {
	if t.FlatBuffer.TableKey == nil {
		t.FlatBuffer.InitKey(fbsutils.CreateTableKey("Form"))
	}
	t.PublicSkill.UnmarshalMessage(e.PublicSkill(nil))
	t.MoveEnd.UnmarshalMessage(e.MoveEnd(nil))
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *FormDto) Unmarshal(data []byte) error {
	root := GetRootAsForm(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (FormDto) FlatDataName() string {
	return "Form"
}
