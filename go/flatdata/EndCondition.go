// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package flatdata

import "strconv"

type EndCondition int32

const (
	EndConditionDuration                  EndCondition = 0
	EndConditionReloadCount               EndCondition = 1
	EndConditionAmmoCount                 EndCondition = 2
	EndConditionAmmoHit                   EndCondition = 3
	EndConditionHitCount                  EndCondition = 4
	EndConditionNone                      EndCondition = 5
	EndConditionUseExSkillCount           EndCondition = 6
	EndConditionUseTargetSlotExSkillCount EndCondition = 7
	EndConditionUseExSkillOverloadedCount EndCondition = 8
)

var EnumNamesEndCondition = map[EndCondition]string{
	EndConditionDuration:                  "Duration",
	EndConditionReloadCount:               "ReloadCount",
	EndConditionAmmoCount:                 "AmmoCount",
	EndConditionAmmoHit:                   "AmmoHit",
	EndConditionHitCount:                  "HitCount",
	EndConditionNone:                      "None",
	EndConditionUseExSkillCount:           "UseExSkillCount",
	EndConditionUseTargetSlotExSkillCount: "UseTargetSlotExSkillCount",
	EndConditionUseExSkillOverloadedCount: "UseExSkillOverloadedCount",
}

var EnumValuesEndCondition = map[string]EndCondition{
	"Duration":                  EndConditionDuration,
	"ReloadCount":               EndConditionReloadCount,
	"AmmoCount":                 EndConditionAmmoCount,
	"AmmoHit":                   EndConditionAmmoHit,
	"HitCount":                  EndConditionHitCount,
	"None":                      EndConditionNone,
	"UseExSkillCount":           EndConditionUseExSkillCount,
	"UseTargetSlotExSkillCount": EndConditionUseTargetSlotExSkillCount,
	"UseExSkillOverloadedCount": EndConditionUseExSkillOverloadedCount,
}

func (v EndCondition) String() string {
	if s, ok := EnumNamesEndCondition[v]; ok {
		return s
	}
	return "EndCondition(" + strconv.FormatInt(int64(v), 10) + ")"
}
