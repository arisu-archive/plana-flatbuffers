// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package flatdata

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type LocalizeFieldExcel struct {
	_tab flatbuffers.Table
}

func GetRootAsLocalizeFieldExcel(buf []byte, offset flatbuffers.UOffsetT) *LocalizeFieldExcel {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &LocalizeFieldExcel{}
	x.Init(buf, n+offset)
	return x
}

func FinishLocalizeFieldExcelBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	builder.Finish(offset)
}

func GetSizePrefixedRootAsLocalizeFieldExcel(buf []byte, offset flatbuffers.UOffsetT) *LocalizeFieldExcel {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &LocalizeFieldExcel{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func FinishSizePrefixedLocalizeFieldExcelBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	builder.FinishSizePrefixed(offset)
}

func (rcv *LocalizeFieldExcel) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *LocalizeFieldExcel) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *LocalizeFieldExcel) Key() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *LocalizeFieldExcel) MutateKey(n uint32) bool {
	return rcv._tab.MutateUint32Slot(4, n)
}

func (rcv *LocalizeFieldExcel) Kr() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LocalizeFieldExcel) Jp() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func LocalizeFieldExcelStart(builder *flatbuffers.Builder) {
	builder.StartObject(3)
}
func LocalizeFieldExcelAddKey(builder *flatbuffers.Builder, key uint32) {
	builder.PrependUint32Slot(0, key, 0)
}
func LocalizeFieldExcelAddKr(builder *flatbuffers.Builder, kr flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(kr), 0)
}
func LocalizeFieldExcelAddJp(builder *flatbuffers.Builder, jp flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(2, flatbuffers.UOffsetT(jp), 0)
}
func LocalizeFieldExcelEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
