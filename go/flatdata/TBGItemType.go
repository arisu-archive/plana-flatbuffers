// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package flatdata

import "strconv"

type TBGItemType int32

const (
	TBGItemTypeNone              TBGItemType = 0
	TBGItemTypeDice              TBGItemType = 1
	TBGItemTypeHeal              TBGItemType = 2
	TBGItemTypeHealExpansion     TBGItemType = 3
	TBGItemTypeDefence           TBGItemType = 4
	TBGItemTypeGuide             TBGItemType = 5
	TBGItemTypeDiceResultValue   TBGItemType = 6
	TBGItemTypeDefenceCritical   TBGItemType = 7
	TBGItemTypeDiceResultConfirm TBGItemType = 8
)

var EnumNamesTBGItemType = map[TBGItemType]string{
	TBGItemTypeNone:              "None",
	TBGItemTypeDice:              "Dice",
	TBGItemTypeHeal:              "Heal",
	TBGItemTypeHealExpansion:     "HealExpansion",
	TBGItemTypeDefence:           "Defence",
	TBGItemTypeGuide:             "Guide",
	TBGItemTypeDiceResultValue:   "DiceResultValue",
	TBGItemTypeDefenceCritical:   "DefenceCritical",
	TBGItemTypeDiceResultConfirm: "DiceResultConfirm",
}

var EnumValuesTBGItemType = map[string]TBGItemType{
	"None":              TBGItemTypeNone,
	"Dice":              TBGItemTypeDice,
	"Heal":              TBGItemTypeHeal,
	"HealExpansion":     TBGItemTypeHealExpansion,
	"Defence":           TBGItemTypeDefence,
	"Guide":             TBGItemTypeGuide,
	"DiceResultValue":   TBGItemTypeDiceResultValue,
	"DefenceCritical":   TBGItemTypeDefenceCritical,
	"DiceResultConfirm": TBGItemTypeDiceResultConfirm,
}

func (v TBGItemType) String() string {
	if s, ok := EnumNamesTBGItemType[v]; ok {
		return s
	}
	return "TBGItemType(" + strconv.FormatInt(int64(v), 10) + ")"
}
