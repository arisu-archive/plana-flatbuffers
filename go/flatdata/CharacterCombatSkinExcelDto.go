// Code generated by fbsgen. DO NOT EDIT.
// Package flatdata contains generated code for FlatBuffers schema
package flatdata

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// CharacterCombatSkinExcelDto represents a FlatBuffers table
type CharacterCombatSkinExcelDto struct {
	fbsutils.FlatBuffer
	GroupId      string `json:"group_id"`
	UniqueId     int64  `json:"unique_id"`
	ResourcePath string `json:"resource_path"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *CharacterCombatSkinExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	if t.FlatBuffer.TableKey == nil {
		t.FlatBuffer.InitKey(fbsutils.CreateTableKey("CharacterCombatSkin"))
	}
	CharacterCombatSkinExcelStart(b)
	CharacterCombatSkinExcelAddGroupId(b, b.CreateString(fbsutils.Convert(t.GroupId, t.FlatBuffer.TableKey)))
	CharacterCombatSkinExcelAddUniqueId(b, fbsutils.Convert(t.UniqueId, t.FlatBuffer.TableKey))
	CharacterCombatSkinExcelAddResourcePath(b, b.CreateString(fbsutils.Convert(t.ResourcePath, t.FlatBuffer.TableKey)))
	return CharacterCombatSkinExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *CharacterCombatSkinExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *CharacterCombatSkinExcelDto) UnmarshalMessage(e *CharacterCombatSkinExcel) error {
	if t.FlatBuffer.TableKey == nil {
		t.FlatBuffer.InitKey(fbsutils.CreateTableKey("CharacterCombatSkin"))
	}
	t.GroupId = fbsutils.Convert(string(e.GroupId()), t.FlatBuffer.TableKey)
	t.UniqueId = fbsutils.Convert(e.UniqueId(), t.FlatBuffer.TableKey)
	t.ResourcePath = fbsutils.Convert(string(e.ResourcePath()), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *CharacterCombatSkinExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsCharacterCombatSkinExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (CharacterCombatSkinExcelDto) FlatDataName() string {
	return "CharacterCombatSkinExcel"
}
