// Code generated by fbsgen. DO NOT EDIT.
// Package flatdata contains generated code for FlatBuffers schema
package flatdata

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// AcademyTicketExcelDto represents a FlatBuffers table
type AcademyTicketExcelDto struct {
	fbsutils.FlatBuffer
	LocationRankSum    int64 `json:"location_rank_sum"`
	ScheduleTicktetMax int64 `json:"schedule_ticktet_max"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *AcademyTicketExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	if t.FlatBuffer.TableKey == nil {
		t.FlatBuffer.InitKey(fbsutils.CreateTableKey("AcademyTicket"))
	}
	AcademyTicketExcelStart(b)
	AcademyTicketExcelAddLocationRankSum(b, fbsutils.Convert(t.LocationRankSum, t.FlatBuffer.TableKey))
	AcademyTicketExcelAddScheduleTicktetMax(b, fbsutils.Convert(t.ScheduleTicktetMax, t.FlatBuffer.TableKey))
	return AcademyTicketExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *AcademyTicketExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	FinishAcademyTicketExcelBuffer(b, t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *AcademyTicketExcelDto) UnmarshalMessage(e *AcademyTicketExcel) error {
	if t.FlatBuffer.TableKey == nil {
		t.FlatBuffer.InitKey(fbsutils.CreateTableKey("AcademyTicket"))
	}
	t.LocationRankSum = fbsutils.Convert(e.LocationRankSum(), t.FlatBuffer.TableKey)
	t.ScheduleTicktetMax = fbsutils.Convert(e.ScheduleTicktetMax(), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *AcademyTicketExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsAcademyTicketExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (AcademyTicketExcelDto) FlatDataName() string {
	return "AcademyTicketExcel"
}
