// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package flatdata

import "strconv"

type FieldConditionClass int32

const (
	FieldConditionClassAndOr FieldConditionClass = 0
	FieldConditionClassOrAnd FieldConditionClass = 1
	FieldConditionClassMulti FieldConditionClass = 2
)

var EnumNamesFieldConditionClass = map[FieldConditionClass]string{
	FieldConditionClassAndOr: "AndOr",
	FieldConditionClassOrAnd: "OrAnd",
	FieldConditionClassMulti: "Multi",
}

var EnumValuesFieldConditionClass = map[string]FieldConditionClass{
	"AndOr": FieldConditionClassAndOr,
	"OrAnd": FieldConditionClassOrAnd,
	"Multi": FieldConditionClassMulti,
}

func (v FieldConditionClass) String() string {
	if s, ok := EnumNamesFieldConditionClass[v]; ok {
		return s
	}
	return "FieldConditionClass(" + strconv.FormatInt(int64(v), 10) + ")"
}
