// Code generated by fbsgen. DO NOT EDIT.
// Package flatdata contains generated code for FlatBuffers schema
package flatdata

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// DefaultFurnitureExcelDto represents a FlatBuffers table
type DefaultFurnitureExcelDto struct {
	fbsutils.FlatBuffer
	Rotation  float32           `json:"rotation"`
	PositionY float32           `json:"position_y"`
	PositionX float32           `json:"position_x"`
	Location  FurnitureLocation `json:"location"`
	Id        int64             `json:"id"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *DefaultFurnitureExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	if t.FlatBuffer.TableKey == nil {
		t.FlatBuffer.InitKey(fbsutils.CreateTableKey("DefaultFurniture"))
	}
	DefaultFurnitureExcelStart(b)
	DefaultFurnitureExcelAddRotation(b, fbsutils.Convert(t.Rotation, t.FlatBuffer.TableKey))
	DefaultFurnitureExcelAddPositionY(b, fbsutils.Convert(t.PositionY, t.FlatBuffer.TableKey))
	DefaultFurnitureExcelAddPositionX(b, fbsutils.Convert(t.PositionX, t.FlatBuffer.TableKey))
	DefaultFurnitureExcelAddLocation(b, fbsutils.Convert(t.Location, t.FlatBuffer.TableKey))
	DefaultFurnitureExcelAddId(b, fbsutils.Convert(t.Id, t.FlatBuffer.TableKey))
	return DefaultFurnitureExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *DefaultFurnitureExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *DefaultFurnitureExcelDto) UnmarshalMessage(e *DefaultFurnitureExcel) error {
	if t.FlatBuffer.TableKey == nil {
		t.FlatBuffer.InitKey(fbsutils.CreateTableKey("DefaultFurniture"))
	}
	t.Rotation = fbsutils.Convert(e.Rotation(), t.FlatBuffer.TableKey)
	t.PositionY = fbsutils.Convert(e.PositionY(), t.FlatBuffer.TableKey)
	t.PositionX = fbsutils.Convert(e.PositionX(), t.FlatBuffer.TableKey)
	t.Location = FurnitureLocation(fbsutils.Convert(int32(e.Location()), t.FlatBuffer.TableKey))
	t.Id = fbsutils.Convert(e.Id(), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *DefaultFurnitureExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsDefaultFurnitureExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (DefaultFurnitureExcelDto) FlatDataName() string {
	return "DefaultFurnitureExcel"
}
