// Code generated by fbsgen. DO NOT EDIT.
// Package flatdata contains generated code for FlatBuffers schema
package flatdata

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// EventContentBoxGachaElementExcelDto represents a FlatBuffers table
type EventContentBoxGachaElementExcelDto struct {
	fbsutils.FlatBuffer
	EventContentId int64 `json:"event_content_id"`
	Id             int64 `json:"id"`
	Round          int64 `json:"round"`
	GroupId        int64 `json:"group_id"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *EventContentBoxGachaElementExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	if t.FlatBuffer.TableKey == nil {
		t.FlatBuffer.InitKey(fbsutils.CreateTableKey("EventContentBoxGachaElement"))
	}
	EventContentBoxGachaElementExcelStart(b)
	EventContentBoxGachaElementExcelAddEventContentId(b, fbsutils.Convert(t.EventContentId, t.FlatBuffer.TableKey))
	EventContentBoxGachaElementExcelAddId(b, fbsutils.Convert(t.Id, t.FlatBuffer.TableKey))
	EventContentBoxGachaElementExcelAddRound(b, fbsutils.Convert(t.Round, t.FlatBuffer.TableKey))
	EventContentBoxGachaElementExcelAddGroupId(b, fbsutils.Convert(t.GroupId, t.FlatBuffer.TableKey))
	return EventContentBoxGachaElementExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *EventContentBoxGachaElementExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	FinishEventContentBoxGachaElementExcelBuffer(b, t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *EventContentBoxGachaElementExcelDto) UnmarshalMessage(e *EventContentBoxGachaElementExcel) error {
	if t.FlatBuffer.TableKey == nil {
		t.FlatBuffer.InitKey(fbsutils.CreateTableKey("EventContentBoxGachaElement"))
	}
	t.EventContentId = fbsutils.Convert(e.EventContentId(), t.FlatBuffer.TableKey)
	t.Id = fbsutils.Convert(e.Id(), t.FlatBuffer.TableKey)
	t.Round = fbsutils.Convert(e.Round(), t.FlatBuffer.TableKey)
	t.GroupId = fbsutils.Convert(e.GroupId(), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *EventContentBoxGachaElementExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsEventContentBoxGachaElementExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (EventContentBoxGachaElementExcelDto) FlatDataName() string {
	return "EventContentBoxGachaElementExcel"
}
