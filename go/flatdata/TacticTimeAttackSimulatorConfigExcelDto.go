// Code generated by fbsgen. DO NOT EDIT.
// Package flatdata contains generated code for FlatBuffers schema
package flatdata

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// TacticTimeAttackSimulatorConfigExcelDto represents a FlatBuffers table
type TacticTimeAttackSimulatorConfigExcelDto struct {
	fbsutils.FlatBuffer
	Order            int64 `json:"order"`
	Repeat           int64 `json:"repeat"`
	PresetGroupId    int64 `json:"preset_group_id"`
	AttackStrikerNum int64 `json:"attack_striker_num"`
	AttackSpecialNum int64 `json:"attack_special_num"`
	GeasId           int64 `json:"geas_id"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *TacticTimeAttackSimulatorConfigExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	if t.FlatBuffer.TableKey == nil {
		t.FlatBuffer.InitKey(fbsutils.CreateTableKey("TacticTimeAttackSimulatorConfig"))
	}
	TacticTimeAttackSimulatorConfigExcelStart(b)
	TacticTimeAttackSimulatorConfigExcelAddOrder(b, fbsutils.Convert(t.Order, t.FlatBuffer.TableKey))
	TacticTimeAttackSimulatorConfigExcelAddRepeat(b, fbsutils.Convert(t.Repeat, t.FlatBuffer.TableKey))
	TacticTimeAttackSimulatorConfigExcelAddPresetGroupId(b, fbsutils.Convert(t.PresetGroupId, t.FlatBuffer.TableKey))
	TacticTimeAttackSimulatorConfigExcelAddAttackStrikerNum(b, fbsutils.Convert(t.AttackStrikerNum, t.FlatBuffer.TableKey))
	TacticTimeAttackSimulatorConfigExcelAddAttackSpecialNum(b, fbsutils.Convert(t.AttackSpecialNum, t.FlatBuffer.TableKey))
	TacticTimeAttackSimulatorConfigExcelAddGeasId(b, fbsutils.Convert(t.GeasId, t.FlatBuffer.TableKey))
	return TacticTimeAttackSimulatorConfigExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *TacticTimeAttackSimulatorConfigExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *TacticTimeAttackSimulatorConfigExcelDto) UnmarshalMessage(e *TacticTimeAttackSimulatorConfigExcel) error {
	if t.FlatBuffer.TableKey == nil {
		t.FlatBuffer.InitKey(fbsutils.CreateTableKey("TacticTimeAttackSimulatorConfig"))
	}
	t.Order = fbsutils.Convert(e.Order(), t.FlatBuffer.TableKey)
	t.Repeat = fbsutils.Convert(e.Repeat(), t.FlatBuffer.TableKey)
	t.PresetGroupId = fbsutils.Convert(e.PresetGroupId(), t.FlatBuffer.TableKey)
	t.AttackStrikerNum = fbsutils.Convert(e.AttackStrikerNum(), t.FlatBuffer.TableKey)
	t.AttackSpecialNum = fbsutils.Convert(e.AttackSpecialNum(), t.FlatBuffer.TableKey)
	t.GeasId = fbsutils.Convert(e.GeasId(), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *TacticTimeAttackSimulatorConfigExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsTacticTimeAttackSimulatorConfigExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (TacticTimeAttackSimulatorConfigExcelDto) FlatDataName() string {
	return "TacticTimeAttackSimulatorConfigExcel"
}
