// Code generated by fbsgen. DO NOT EDIT.
// Package flatdata contains generated code for FlatBuffers schema
package flatdata

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// EventContentSpineDialogOffsetExcelDto represents a FlatBuffers table
type EventContentSpineDialogOffsetExcelDto struct {
	fbsutils.FlatBuffer
	EventContentId   int64            `json:"event_content_id"`
	EventContentType EventContentType `json:"event_content_type"`
	CostumeUniqueId  int64            `json:"costume_unique_id"`
	SpineOffsetX     float32          `json:"spine_offset_x"`
	SpineOffsetY     float32          `json:"spine_offset_y"`
	DialogOffsetX    float32          `json:"dialog_offset_x"`
	DialogOffsetY    float32          `json:"dialog_offset_y"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *EventContentSpineDialogOffsetExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	if t.FlatBuffer.TableKey == nil {
		t.FlatBuffer.InitKey(fbsutils.CreateTableKey("EventContentSpineDialogOffset"))
	}
	EventContentSpineDialogOffsetExcelStart(b)
	EventContentSpineDialogOffsetExcelAddEventContentId(b, fbsutils.Convert(t.EventContentId, t.FlatBuffer.TableKey))
	EventContentSpineDialogOffsetExcelAddEventContentType(b, fbsutils.Convert(t.EventContentType, t.FlatBuffer.TableKey))
	EventContentSpineDialogOffsetExcelAddCostumeUniqueId(b, fbsutils.Convert(t.CostumeUniqueId, t.FlatBuffer.TableKey))
	EventContentSpineDialogOffsetExcelAddSpineOffsetX(b, fbsutils.Convert(t.SpineOffsetX, t.FlatBuffer.TableKey))
	EventContentSpineDialogOffsetExcelAddSpineOffsetY(b, fbsutils.Convert(t.SpineOffsetY, t.FlatBuffer.TableKey))
	EventContentSpineDialogOffsetExcelAddDialogOffsetX(b, fbsutils.Convert(t.DialogOffsetX, t.FlatBuffer.TableKey))
	EventContentSpineDialogOffsetExcelAddDialogOffsetY(b, fbsutils.Convert(t.DialogOffsetY, t.FlatBuffer.TableKey))
	return EventContentSpineDialogOffsetExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *EventContentSpineDialogOffsetExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	FinishEventContentSpineDialogOffsetExcelBuffer(b, t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *EventContentSpineDialogOffsetExcelDto) UnmarshalMessage(e *EventContentSpineDialogOffsetExcel) error {
	if t.FlatBuffer.TableKey == nil {
		t.FlatBuffer.InitKey(fbsutils.CreateTableKey("EventContentSpineDialogOffset"))
	}
	t.EventContentId = fbsutils.Convert(e.EventContentId(), t.FlatBuffer.TableKey)
	t.EventContentType = EventContentType(fbsutils.Convert(int32(e.EventContentType()), t.FlatBuffer.TableKey))
	t.CostumeUniqueId = fbsutils.Convert(e.CostumeUniqueId(), t.FlatBuffer.TableKey)
	t.SpineOffsetX = fbsutils.Convert(e.SpineOffsetX(), t.FlatBuffer.TableKey)
	t.SpineOffsetY = fbsutils.Convert(e.SpineOffsetY(), t.FlatBuffer.TableKey)
	t.DialogOffsetX = fbsutils.Convert(e.DialogOffsetX(), t.FlatBuffer.TableKey)
	t.DialogOffsetY = fbsutils.Convert(e.DialogOffsetY(), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *EventContentSpineDialogOffsetExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsEventContentSpineDialogOffsetExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (EventContentSpineDialogOffsetExcelDto) FlatDataName() string {
	return "EventContentSpineDialogOffsetExcel"
}
