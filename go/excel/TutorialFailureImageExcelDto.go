// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// TutorialFailureImageExcelDto represents a FlatBuffers table
type TutorialFailureImageExcelDto struct {
	fbsutils.FlatBuffer
	Id          int64                      `json:"id"`
	Contents    TutorialFailureContentType `json:"contents"`
	Type        string                     `json:"type"`
	ImagePathKr string                     `json:"image_path_kr"`
	ImagePathJp string                     `json:"image_path_jp"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *TutorialFailureImageExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	TutorialFailureImageExcelStart(b)
	TutorialFailureImageExcelAddId(b, fbsutils.Convert(t.Id, t.FlatBuffer.TableKey))
	TutorialFailureImageExcelAddContents(b, fbsutils.Convert(t.Contents, t.FlatBuffer.TableKey))
	TutorialFailureImageExcelAddType(b, b.CreateString(fbsutils.Convert(t.Type, t.FlatBuffer.TableKey)))
	TutorialFailureImageExcelAddImagePathKr(b, b.CreateString(fbsutils.Convert(t.ImagePathKr, t.FlatBuffer.TableKey)))
	TutorialFailureImageExcelAddImagePathJp(b, b.CreateString(fbsutils.Convert(t.ImagePathJp, t.FlatBuffer.TableKey)))
	return TutorialFailureImageExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *TutorialFailureImageExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *TutorialFailureImageExcelDto) UnmarshalMessage(e *TutorialFailureImageExcel) error {
	t.Id = fbsutils.Convert(e.Id(), t.FlatBuffer.TableKey)
	t.Contents = TutorialFailureContentType(fbsutils.Convert(int32(e.Contents()), t.FlatBuffer.TableKey))
	t.Type = fbsutils.Convert(string(e.Type()), t.FlatBuffer.TableKey)
	t.ImagePathKr = fbsutils.Convert(string(e.ImagePathKr()), t.FlatBuffer.TableKey)
	t.ImagePathJp = fbsutils.Convert(string(e.ImagePathJp()), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *TutorialFailureImageExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsTutorialFailureImageExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (TutorialFailureImageExcelDto) FlatDataName() string {
	return "TutorialFailureImageExcel"
}
