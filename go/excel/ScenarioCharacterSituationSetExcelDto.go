// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// ScenarioCharacterSituationSetExcelDto represents a FlatBuffers table
type ScenarioCharacterSituationSetExcelDto struct {
	fbsutils.FlatBuffer
	Emotion  uint32 `json:"emotion"`
	Effect   uint32 `json:"effect"`
	Shape    string `json:"shape"`
	Action   string `json:"action"`
	Behavior string `json:"behavior"`
	Face     string `json:"face"`
	Name     uint32 `json:"name"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *ScenarioCharacterSituationSetExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	ScenarioCharacterSituationSetExcelStart(b)
	ScenarioCharacterSituationSetExcelAddEmotion(b, fbsutils.Convert(t.Emotion, t.FlatBuffer.TableKey))
	ScenarioCharacterSituationSetExcelAddEffect(b, fbsutils.Convert(t.Effect, t.FlatBuffer.TableKey))
	ScenarioCharacterSituationSetExcelAddShape(b, b.CreateString(fbsutils.Convert(t.Shape, t.FlatBuffer.TableKey)))
	ScenarioCharacterSituationSetExcelAddAction(b, b.CreateString(fbsutils.Convert(t.Action, t.FlatBuffer.TableKey)))
	ScenarioCharacterSituationSetExcelAddBehavior(b, b.CreateString(fbsutils.Convert(t.Behavior, t.FlatBuffer.TableKey)))
	ScenarioCharacterSituationSetExcelAddFace(b, b.CreateString(fbsutils.Convert(t.Face, t.FlatBuffer.TableKey)))
	ScenarioCharacterSituationSetExcelAddName(b, fbsutils.Convert(t.Name, t.FlatBuffer.TableKey))
	return ScenarioCharacterSituationSetExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *ScenarioCharacterSituationSetExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *ScenarioCharacterSituationSetExcelDto) UnmarshalMessage(e *ScenarioCharacterSituationSetExcel) error {
	t.Emotion = fbsutils.Convert(e.Emotion(), t.FlatBuffer.TableKey)
	t.Effect = fbsutils.Convert(e.Effect(), t.FlatBuffer.TableKey)
	t.Shape = fbsutils.Convert(string(e.Shape()), t.FlatBuffer.TableKey)
	t.Action = fbsutils.Convert(string(e.Action()), t.FlatBuffer.TableKey)
	t.Behavior = fbsutils.Convert(string(e.Behavior()), t.FlatBuffer.TableKey)
	t.Face = fbsutils.Convert(string(e.Face()), t.FlatBuffer.TableKey)
	t.Name = fbsutils.Convert(e.Name(), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *ScenarioCharacterSituationSetExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsScenarioCharacterSituationSetExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (ScenarioCharacterSituationSetExcelDto) FlatDataName() string {
	return "ScenarioCharacterSituationSetExcel"
}
