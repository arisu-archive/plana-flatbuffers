// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package excel

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type IdCardBackgroundExcel struct {
	_tab flatbuffers.Table
}

func GetRootAsIdCardBackgroundExcel(buf []byte, offset flatbuffers.UOffsetT) *IdCardBackgroundExcel {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &IdCardBackgroundExcel{}
	x.Init(buf, n+offset)
	return x
}

func GetSizePrefixedRootAsIdCardBackgroundExcel(buf []byte, offset flatbuffers.UOffsetT) *IdCardBackgroundExcel {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &IdCardBackgroundExcel{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func (rcv *IdCardBackgroundExcel) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *IdCardBackgroundExcel) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *IdCardBackgroundExcel) Icon() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *IdCardBackgroundExcel) LocalizeEtcId() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *IdCardBackgroundExcel) MutateLocalizeEtcId(n uint32) bool {
	return rcv._tab.MutateUint32Slot(6, n)
}

func (rcv *IdCardBackgroundExcel) BgPath() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *IdCardBackgroundExcel) IsDefault() bool {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		return rcv._tab.GetBool(o + rcv._tab.Pos)
	}
	return false
}

func (rcv *IdCardBackgroundExcel) MutateIsDefault(n bool) bool {
	return rcv._tab.MutateBoolSlot(10, n)
}

func (rcv *IdCardBackgroundExcel) CollectionVisible() bool {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(12))
	if o != 0 {
		return rcv._tab.GetBool(o + rcv._tab.Pos)
	}
	return false
}

func (rcv *IdCardBackgroundExcel) MutateCollectionVisible(n bool) bool {
	return rcv._tab.MutateBoolSlot(12, n)
}

func (rcv *IdCardBackgroundExcel) DisplayOrder() int64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(14))
	if o != 0 {
		return rcv._tab.GetInt64(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *IdCardBackgroundExcel) MutateDisplayOrder(n int64) bool {
	return rcv._tab.MutateInt64Slot(14, n)
}

func (rcv *IdCardBackgroundExcel) Rarity() Rarity {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(16))
	if o != 0 {
		return Rarity(rcv._tab.GetInt32(o + rcv._tab.Pos))
	}
	return 0
}

func (rcv *IdCardBackgroundExcel) MutateRarity(n Rarity) bool {
	return rcv._tab.MutateInt32Slot(16, int32(n))
}

func (rcv *IdCardBackgroundExcel) Id() int64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(18))
	if o != 0 {
		return rcv._tab.GetInt64(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *IdCardBackgroundExcel) MutateId(n int64) bool {
	return rcv._tab.MutateInt64Slot(18, n)
}

func IdCardBackgroundExcelStart(builder *flatbuffers.Builder) {
	builder.StartObject(8)
}
func IdCardBackgroundExcelAddIcon(builder *flatbuffers.Builder, icon flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(icon), 0)
}
func IdCardBackgroundExcelAddLocalizeEtcId(builder *flatbuffers.Builder, localizeEtcId uint32) {
	builder.PrependUint32Slot(1, localizeEtcId, 0)
}
func IdCardBackgroundExcelAddBgPath(builder *flatbuffers.Builder, bgPath flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(2, flatbuffers.UOffsetT(bgPath), 0)
}
func IdCardBackgroundExcelAddIsDefault(builder *flatbuffers.Builder, isDefault bool) {
	builder.PrependBoolSlot(3, isDefault, false)
}
func IdCardBackgroundExcelAddCollectionVisible(builder *flatbuffers.Builder, collectionVisible bool) {
	builder.PrependBoolSlot(4, collectionVisible, false)
}
func IdCardBackgroundExcelAddDisplayOrder(builder *flatbuffers.Builder, displayOrder int64) {
	builder.PrependInt64Slot(5, displayOrder, 0)
}
func IdCardBackgroundExcelAddRarity(builder *flatbuffers.Builder, rarity Rarity) {
	builder.PrependInt32Slot(6, int32(rarity), 0)
}
func IdCardBackgroundExcelAddId(builder *flatbuffers.Builder, id int64) {
	builder.PrependInt64Slot(7, id, 0)
}
func IdCardBackgroundExcelEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
