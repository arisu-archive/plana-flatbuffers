// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// EventContentConcentrationExcelDto represents a FlatBuffers table
type EventContentConcentrationExcelDto struct {
	fbsutils.FlatBuffer
	CardBoardPrefabs  string `json:"card_board_prefabs"`
	CostGoodsId       int64  `json:"cost_goods_id"`
	EventContentId    int64  `json:"event_content_id"`
	InstantClearRound int32  `json:"instant_clear_round"`
	MaxCardOpenCount  int32  `json:"max_card_open_count"`
	MaxCardPairCount  int32  `json:"max_card_pair_count"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *EventContentConcentrationExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	EventContentConcentrationExcelStart(b)
	EventContentConcentrationExcelAddCardBoardPrefabs(b, b.CreateString(fbsutils.Convert(t.CardBoardPrefabs, t.FlatBuffer.TableKey)))
	EventContentConcentrationExcelAddCostGoodsId(b, fbsutils.Convert(t.CostGoodsId, t.FlatBuffer.TableKey))
	EventContentConcentrationExcelAddEventContentId(b, fbsutils.Convert(t.EventContentId, t.FlatBuffer.TableKey))
	EventContentConcentrationExcelAddInstantClearRound(b, fbsutils.Convert(t.InstantClearRound, t.FlatBuffer.TableKey))
	EventContentConcentrationExcelAddMaxCardOpenCount(b, fbsutils.Convert(t.MaxCardOpenCount, t.FlatBuffer.TableKey))
	EventContentConcentrationExcelAddMaxCardPairCount(b, fbsutils.Convert(t.MaxCardPairCount, t.FlatBuffer.TableKey))
	return EventContentConcentrationExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *EventContentConcentrationExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *EventContentConcentrationExcelDto) UnmarshalMessage(e *EventContentConcentrationExcel) error {
	t.CardBoardPrefabs = fbsutils.Convert(string(e.CardBoardPrefabs()), t.FlatBuffer.TableKey)
	t.CostGoodsId = fbsutils.Convert(e.CostGoodsId(), t.FlatBuffer.TableKey)
	t.EventContentId = fbsutils.Convert(e.EventContentId(), t.FlatBuffer.TableKey)
	t.InstantClearRound = fbsutils.Convert(e.InstantClearRound(), t.FlatBuffer.TableKey)
	t.MaxCardOpenCount = fbsutils.Convert(e.MaxCardOpenCount(), t.FlatBuffer.TableKey)
	t.MaxCardPairCount = fbsutils.Convert(e.MaxCardPairCount(), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *EventContentConcentrationExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsEventContentConcentrationExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (EventContentConcentrationExcelDto) FlatDataName() string {
	return "EventContentConcentrationExcel"
}
