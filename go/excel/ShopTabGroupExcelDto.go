// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// ShopTabGroupExcelDto represents a FlatBuffers table
type ShopTabGroupExcelDto struct {
	fbsutils.FlatBuffer
	ShopCategoryTypes []ShopCategoryType `json:"shop_category_types"`
	DisplayOrder      int32              `json:"display_order"`
	ShopGroupType     ShopGroupType      `json:"shop_group_type"`
	Id                int64              `json:"id"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *ShopTabGroupExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	ShopTabGroupExcelStart(b)
	ShopTabGroupExcelStartShopCategoryTypesVector(b, len(t.ShopCategoryTypes))
	for i := range len(t.ShopCategoryTypes) {
		b.PrependInt32(fbsutils.Convert(int32(t.ShopCategoryTypes[len(t.ShopCategoryTypes)-i-1]), t.FlatBuffer.TableKey))
	}
	ShopTabGroupExcelAddShopCategoryTypes(b, b.EndVector(len(t.ShopCategoryTypes)))
	ShopTabGroupExcelAddDisplayOrder(b, fbsutils.Convert(t.DisplayOrder, t.FlatBuffer.TableKey))
	ShopTabGroupExcelAddShopGroupType(b, fbsutils.Convert(t.ShopGroupType, t.FlatBuffer.TableKey))
	ShopTabGroupExcelAddId(b, fbsutils.Convert(t.Id, t.FlatBuffer.TableKey))
	return ShopTabGroupExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *ShopTabGroupExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *ShopTabGroupExcelDto) UnmarshalMessage(e *ShopTabGroupExcel) error {
	t.ShopCategoryTypes = make([]ShopCategoryType, e.ShopCategoryTypesLength())
	for i := range e.ShopCategoryTypesLength() {
		t.ShopCategoryTypes[i] = ShopCategoryType(fbsutils.Convert(int32(e.ShopCategoryTypes(i)), t.FlatBuffer.TableKey))
	}
	t.DisplayOrder = fbsutils.Convert(e.DisplayOrder(), t.FlatBuffer.TableKey)
	t.ShopGroupType = ShopGroupType(fbsutils.Convert(int32(e.ShopGroupType()), t.FlatBuffer.TableKey))
	t.Id = fbsutils.Convert(e.Id(), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *ShopTabGroupExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsShopTabGroupExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (ShopTabGroupExcelDto) FlatDataName() string {
	return "ShopTabGroupExcel"
}
