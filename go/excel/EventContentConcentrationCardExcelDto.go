// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// EventContentConcentrationCardExcelDto represents a FlatBuffers table
type EventContentConcentrationCardExcelDto struct {
	fbsutils.FlatBuffer
	BackImagePath  string `json:"back_image_path"`
	ImagePath      string `json:"image_path"`
	Rarity         Rarity `json:"rarity"`
	CardId         int64  `json:"card_id"`
	EventContentId int64  `json:"event_content_id"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *EventContentConcentrationCardExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	EventContentConcentrationCardExcelStart(b)
	EventContentConcentrationCardExcelAddBackImagePath(b, b.CreateString(fbsutils.Convert(t.BackImagePath, t.FlatBuffer.TableKey)))
	EventContentConcentrationCardExcelAddImagePath(b, b.CreateString(fbsutils.Convert(t.ImagePath, t.FlatBuffer.TableKey)))
	EventContentConcentrationCardExcelAddRarity(b, fbsutils.Convert(t.Rarity, t.FlatBuffer.TableKey))
	EventContentConcentrationCardExcelAddCardId(b, fbsutils.Convert(t.CardId, t.FlatBuffer.TableKey))
	EventContentConcentrationCardExcelAddEventContentId(b, fbsutils.Convert(t.EventContentId, t.FlatBuffer.TableKey))
	return EventContentConcentrationCardExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *EventContentConcentrationCardExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *EventContentConcentrationCardExcelDto) UnmarshalMessage(e *EventContentConcentrationCardExcel) error {
	t.BackImagePath = fbsutils.Convert(string(e.BackImagePath()), t.FlatBuffer.TableKey)
	t.ImagePath = fbsutils.Convert(string(e.ImagePath()), t.FlatBuffer.TableKey)
	t.Rarity = Rarity(fbsutils.Convert(int32(e.Rarity()), t.FlatBuffer.TableKey))
	t.CardId = fbsutils.Convert(e.CardId(), t.FlatBuffer.TableKey)
	t.EventContentId = fbsutils.Convert(e.EventContentId(), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *EventContentConcentrationCardExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsEventContentConcentrationCardExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (EventContentConcentrationCardExcelDto) FlatDataName() string {
	return "EventContentConcentrationCardExcel"
}
