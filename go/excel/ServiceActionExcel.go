// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package excel

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type ServiceActionExcel struct {
	_tab flatbuffers.Table
}

func GetRootAsServiceActionExcel(buf []byte, offset flatbuffers.UOffsetT) *ServiceActionExcel {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &ServiceActionExcel{}
	x.Init(buf, n+offset)
	return x
}

func FinishServiceActionExcelBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	builder.Finish(offset)
}

func GetSizePrefixedRootAsServiceActionExcel(buf []byte, offset flatbuffers.UOffsetT) *ServiceActionExcel {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &ServiceActionExcel{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func FinishSizePrefixedServiceActionExcelBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	builder.FinishSizePrefixed(offset)
}

func (rcv *ServiceActionExcel) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *ServiceActionExcel) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *ServiceActionExcel) ServiceActionType() ServiceActionType {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return ServiceActionType(rcv._tab.GetInt32(o + rcv._tab.Pos))
	}
	return 0
}

func (rcv *ServiceActionExcel) MutateServiceActionType(n ServiceActionType) bool {
	return rcv._tab.MutateInt32Slot(4, int32(n))
}

func (rcv *ServiceActionExcel) IsLegacy() bool {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.GetBool(o + rcv._tab.Pos)
	}
	return false
}

func (rcv *ServiceActionExcel) MutateIsLegacy(n bool) bool {
	return rcv._tab.MutateBoolSlot(6, n)
}

func (rcv *ServiceActionExcel) GoodsId() int64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.GetInt64(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *ServiceActionExcel) MutateGoodsId(n int64) bool {
	return rcv._tab.MutateInt64Slot(8, n)
}

func ServiceActionExcelStart(builder *flatbuffers.Builder) {
	builder.StartObject(3)
}
func ServiceActionExcelAddServiceActionType(builder *flatbuffers.Builder, serviceActionType ServiceActionType) {
	builder.PrependInt32Slot(0, int32(serviceActionType), 0)
}
func ServiceActionExcelAddIsLegacy(builder *flatbuffers.Builder, isLegacy bool) {
	builder.PrependBoolSlot(1, isLegacy, false)
}
func ServiceActionExcelAddGoodsId(builder *flatbuffers.Builder, goodsId int64) {
	builder.PrependInt64Slot(2, goodsId, 0)
}
func ServiceActionExcelEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
