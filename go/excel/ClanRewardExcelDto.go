// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// ClanRewardExcelDto represents a FlatBuffers table
type ClanRewardExcelDto struct {
	fbsutils.FlatBuffer
	RewardParcelAmount int64          `json:"reward_parcel_amount"`
	RewardParcelId     int64          `json:"reward_parcel_id"`
	RewardParcelType   ParcelType     `json:"reward_parcel_type"`
	EchelonType        EchelonType    `json:"echelon_type"`
	ClanRewardType     ClanRewardType `json:"clan_reward_type"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *ClanRewardExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	ClanRewardExcelStart(b)
	ClanRewardExcelAddRewardParcelAmount(b, fbsutils.Convert(t.RewardParcelAmount, t.FlatBuffer.TableKey))
	ClanRewardExcelAddRewardParcelId(b, fbsutils.Convert(t.RewardParcelId, t.FlatBuffer.TableKey))
	ClanRewardExcelAddRewardParcelType(b, fbsutils.Convert(t.RewardParcelType, t.FlatBuffer.TableKey))
	ClanRewardExcelAddEchelonType(b, fbsutils.Convert(t.EchelonType, t.FlatBuffer.TableKey))
	ClanRewardExcelAddClanRewardType(b, fbsutils.Convert(t.ClanRewardType, t.FlatBuffer.TableKey))
	return ClanRewardExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *ClanRewardExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *ClanRewardExcelDto) UnmarshalMessage(e *ClanRewardExcel) error {
	t.RewardParcelAmount = fbsutils.Convert(e.RewardParcelAmount(), t.FlatBuffer.TableKey)
	t.RewardParcelId = fbsutils.Convert(e.RewardParcelId(), t.FlatBuffer.TableKey)
	t.RewardParcelType = ParcelType(fbsutils.Convert(int32(e.RewardParcelType()), t.FlatBuffer.TableKey))
	t.EchelonType = EchelonType(fbsutils.Convert(int32(e.EchelonType()), t.FlatBuffer.TableKey))
	t.ClanRewardType = ClanRewardType(fbsutils.Convert(int32(e.ClanRewardType()), t.FlatBuffer.TableKey))
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *ClanRewardExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsClanRewardExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (ClanRewardExcelDto) FlatDataName() string {
	return "ClanRewardExcel"
}
