// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// EventContentDiceRaceEffectExcelDto represents a FlatBuffers table
type EventContentDiceRaceEffectExcelDto struct {
	fbsutils.FlatBuffer
	AniClip                        string                         `json:"ani_clip"`
	EventContentDiceRaceResultType EventContentDiceRaceResultType `json:"event_content_dice_race_result_type"`
	EventContentId                 int64                          `json:"event_content_id"`
	IsDiceResult                   bool                           `json:"is_dice_result"`
	VoiceId                        []uint32                       `json:"voice_id"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *EventContentDiceRaceEffectExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	EventContentDiceRaceEffectExcelStart(b)
	EventContentDiceRaceEffectExcelAddAniClip(b, b.CreateString(fbsutils.Convert(t.AniClip, t.FlatBuffer.TableKey)))
	EventContentDiceRaceEffectExcelAddEventContentDiceRaceResultType(b, fbsutils.Convert(t.EventContentDiceRaceResultType, t.FlatBuffer.TableKey))
	EventContentDiceRaceEffectExcelAddEventContentId(b, fbsutils.Convert(t.EventContentId, t.FlatBuffer.TableKey))
	EventContentDiceRaceEffectExcelAddIsDiceResult(b, t.IsDiceResult)
	EventContentDiceRaceEffectExcelStartVoiceIdVector(b, len(t.VoiceId))
	for i := range len(t.VoiceId) {
		b.PrependUint32(fbsutils.Convert(t.VoiceId[len(t.VoiceId)-i-1], t.FlatBuffer.TableKey))
	}
	EventContentDiceRaceEffectExcelAddVoiceId(b, b.EndVector(len(t.VoiceId)))
	return EventContentDiceRaceEffectExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *EventContentDiceRaceEffectExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *EventContentDiceRaceEffectExcelDto) UnmarshalMessage(e *EventContentDiceRaceEffectExcel) error {
	t.AniClip = fbsutils.Convert(string(e.AniClip()), t.FlatBuffer.TableKey)
	t.EventContentDiceRaceResultType = EventContentDiceRaceResultType(fbsutils.Convert(int32(e.EventContentDiceRaceResultType()), t.FlatBuffer.TableKey))
	t.EventContentId = fbsutils.Convert(e.EventContentId(), t.FlatBuffer.TableKey)
	t.IsDiceResult = e.IsDiceResult()
	t.VoiceId = make([]uint32, e.VoiceIdLength())
	for i := range e.VoiceIdLength() {
		t.VoiceId[i] = fbsutils.Convert(e.VoiceId(i), t.FlatBuffer.TableKey)
	}
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *EventContentDiceRaceEffectExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsEventContentDiceRaceEffectExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (EventContentDiceRaceEffectExcelDto) FlatDataName() string {
	return "EventContentDiceRaceEffectExcel"
}
