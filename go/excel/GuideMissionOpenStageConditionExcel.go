// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package excel

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type GuideMissionOpenStageConditionExcel struct {
	_tab flatbuffers.Table
}

func GetRootAsGuideMissionOpenStageConditionExcel(buf []byte, offset flatbuffers.UOffsetT) *GuideMissionOpenStageConditionExcel {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &GuideMissionOpenStageConditionExcel{}
	x.Init(buf, n+offset)
	return x
}

func GetSizePrefixedRootAsGuideMissionOpenStageConditionExcel(buf []byte, offset flatbuffers.UOffsetT) *GuideMissionOpenStageConditionExcel {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &GuideMissionOpenStageConditionExcel{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func (rcv *GuideMissionOpenStageConditionExcel) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *GuideMissionOpenStageConditionExcel) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *GuideMissionOpenStageConditionExcel) ShortcutStageUi() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *GuideMissionOpenStageConditionExcel) LockStageTextLocailzeCode() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *GuideMissionOpenStageConditionExcel) ClearStageId() int64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.GetInt64(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *GuideMissionOpenStageConditionExcel) MutateClearStageId(n int64) bool {
	return rcv._tab.MutateInt64Slot(8, n)
}

func (rcv *GuideMissionOpenStageConditionExcel) ShortcutScenarioUi() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *GuideMissionOpenStageConditionExcel) LockScenarioTextLocailzeCode() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(12))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *GuideMissionOpenStageConditionExcel) ClearScenarioModeId() int64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(14))
	if o != 0 {
		return rcv._tab.GetInt64(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *GuideMissionOpenStageConditionExcel) MutateClearScenarioModeId(n int64) bool {
	return rcv._tab.MutateInt64Slot(14, n)
}

func (rcv *GuideMissionOpenStageConditionExcel) TabLocalizeCode() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(16))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *GuideMissionOpenStageConditionExcel) OrderNumber() int64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(18))
	if o != 0 {
		return rcv._tab.GetInt64(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *GuideMissionOpenStageConditionExcel) MutateOrderNumber(n int64) bool {
	return rcv._tab.MutateInt64Slot(18, n)
}

func (rcv *GuideMissionOpenStageConditionExcel) SeasonId() int64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(20))
	if o != 0 {
		return rcv._tab.GetInt64(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *GuideMissionOpenStageConditionExcel) MutateSeasonId(n int64) bool {
	return rcv._tab.MutateInt64Slot(20, n)
}

func GuideMissionOpenStageConditionExcelStart(builder *flatbuffers.Builder) {
	builder.StartObject(9)
}
func GuideMissionOpenStageConditionExcelAddShortcutStageUi(builder *flatbuffers.Builder, shortcutStageUi flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(shortcutStageUi), 0)
}
func GuideMissionOpenStageConditionExcelAddLockStageTextLocailzeCode(builder *flatbuffers.Builder, lockStageTextLocailzeCode flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(lockStageTextLocailzeCode), 0)
}
func GuideMissionOpenStageConditionExcelAddClearStageId(builder *flatbuffers.Builder, clearStageId int64) {
	builder.PrependInt64Slot(2, clearStageId, 0)
}
func GuideMissionOpenStageConditionExcelAddShortcutScenarioUi(builder *flatbuffers.Builder, shortcutScenarioUi flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(3, flatbuffers.UOffsetT(shortcutScenarioUi), 0)
}
func GuideMissionOpenStageConditionExcelAddLockScenarioTextLocailzeCode(builder *flatbuffers.Builder, lockScenarioTextLocailzeCode flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(4, flatbuffers.UOffsetT(lockScenarioTextLocailzeCode), 0)
}
func GuideMissionOpenStageConditionExcelAddClearScenarioModeId(builder *flatbuffers.Builder, clearScenarioModeId int64) {
	builder.PrependInt64Slot(5, clearScenarioModeId, 0)
}
func GuideMissionOpenStageConditionExcelAddTabLocalizeCode(builder *flatbuffers.Builder, tabLocalizeCode flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(6, flatbuffers.UOffsetT(tabLocalizeCode), 0)
}
func GuideMissionOpenStageConditionExcelAddOrderNumber(builder *flatbuffers.Builder, orderNumber int64) {
	builder.PrependInt64Slot(7, orderNumber, 0)
}
func GuideMissionOpenStageConditionExcelAddSeasonId(builder *flatbuffers.Builder, seasonId int64) {
	builder.PrependInt64Slot(8, seasonId, 0)
}
func GuideMissionOpenStageConditionExcelEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
