// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// EventContentMiniEventShortCutExcelDto represents a FlatBuffers table
type EventContentMiniEventShortCutExcelDto struct {
	fbsutils.FlatBuffer
	ShortcutUi         string          `json:"shortcut_ui"`
	ShorcutContentType EventTargetType `json:"shorcut_content_type"`
	LocalizeEtcId      uint32          `json:"localize_etc_id"`
	Id                 int32           `json:"id"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *EventContentMiniEventShortCutExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	EventContentMiniEventShortCutExcelStart(b)
	EventContentMiniEventShortCutExcelAddShortcutUi(b, b.CreateString(fbsutils.Convert(t.ShortcutUi, t.FlatBuffer.TableKey)))
	EventContentMiniEventShortCutExcelAddShorcutContentType(b, fbsutils.Convert(t.ShorcutContentType, t.FlatBuffer.TableKey))
	EventContentMiniEventShortCutExcelAddLocalizeEtcId(b, fbsutils.Convert(t.LocalizeEtcId, t.FlatBuffer.TableKey))
	EventContentMiniEventShortCutExcelAddId(b, fbsutils.Convert(t.Id, t.FlatBuffer.TableKey))
	return EventContentMiniEventShortCutExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *EventContentMiniEventShortCutExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *EventContentMiniEventShortCutExcelDto) UnmarshalMessage(e *EventContentMiniEventShortCutExcel) error {
	t.ShortcutUi = fbsutils.Convert(string(e.ShortcutUi()), t.FlatBuffer.TableKey)
	t.ShorcutContentType = EventTargetType(fbsutils.Convert(int32(e.ShorcutContentType()), t.FlatBuffer.TableKey))
	t.LocalizeEtcId = fbsutils.Convert(e.LocalizeEtcId(), t.FlatBuffer.TableKey)
	t.Id = fbsutils.Convert(e.Id(), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *EventContentMiniEventShortCutExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsEventContentMiniEventShortCutExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (EventContentMiniEventShortCutExcelDto) FlatDataName() string {
	return "EventContentMiniEventShortCutExcel"
}
