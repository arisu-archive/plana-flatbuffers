// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// TacticalSupportSystemExcelDto represents a FlatBuffers table
type TacticalSupportSystemExcelDto struct {
	fbsutils.FlatBuffer
	DestroyFrame                     int32   `json:"destroy_frame"`
	RetreatFrame                     int32   `json:"retreat_frame"`
	InteractionSkillSpine            string  `json:"interaction_skill_spine"`
	InteractionSkillCardTexture      string  `json:"interaction_skill_card_texture"`
	InteractionStudentExSkillGroupId string  `json:"interaction_student_ex_skill_group_id"`
	TsaInteractionAddDuration        int64   `json:"tsa_interaction_add_duration"`
	InteractionFrame                 int32   `json:"interaction_frame"`
	SummonerCharacterId              int64   `json:"summoner_character_id"`
	GetOnEndEffectPath               string  `json:"get_on_end_effect_path"`
	GetOnStartEffectPath             string  `json:"get_on_start_effect_path"`
	CharacterInteractionStartDelay   int64   `json:"character_interaction_start_delay"`
	InteractionChar                  int64   `json:"interaction_char"`
	InventoryOffsetZ                 float32 `json:"inventory_offset_z"`
	InventoryOffsetY                 float32 `json:"inventory_offset_y"`
	InventoryOffsetX                 float32 `json:"inventory_offset_x"`
	NumberOfUses                     int32   `json:"number_of_uses"`
	IsTssBlockedNodeCheck            bool    `json:"is_tss_blocked_node_check"`
	CrashObstacleObbHeight           int64   `json:"crash_obstacle_obb_height"`
	CrashObstacleObbWidth            int64   `json:"crash_obstacle_obb_width"`
	SummonSkilllGroupId              string  `json:"summon_skilll_group_id"`
	ObstacleCoverRange               int64   `json:"obstacle_cover_range"`
	ObstacleUniqueName               string  `json:"obstacle_unique_name"`
	CanCover                         bool    `json:"can_cover"`
	CanTargeting                     bool    `json:"can_targeting"`
	DefaultPersonalityId             int64   `json:"default_personality_id"`
	SummonedTime                     int64   `json:"summoned_time"`
	Id                               int64   `json:"id"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *TacticalSupportSystemExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	TacticalSupportSystemExcelStart(b)
	TacticalSupportSystemExcelAddDestroyFrame(b, fbsutils.Convert(t.DestroyFrame, t.FlatBuffer.TableKey))
	TacticalSupportSystemExcelAddRetreatFrame(b, fbsutils.Convert(t.RetreatFrame, t.FlatBuffer.TableKey))
	TacticalSupportSystemExcelAddInteractionSkillSpine(b, b.CreateString(fbsutils.Convert(t.InteractionSkillSpine, t.FlatBuffer.TableKey)))
	TacticalSupportSystemExcelAddInteractionSkillCardTexture(b, b.CreateString(fbsutils.Convert(t.InteractionSkillCardTexture, t.FlatBuffer.TableKey)))
	TacticalSupportSystemExcelAddInteractionStudentExSkillGroupId(b, b.CreateString(fbsutils.Convert(t.InteractionStudentExSkillGroupId, t.FlatBuffer.TableKey)))
	TacticalSupportSystemExcelAddTsaInteractionAddDuration(b, fbsutils.Convert(t.TsaInteractionAddDuration, t.FlatBuffer.TableKey))
	TacticalSupportSystemExcelAddInteractionFrame(b, fbsutils.Convert(t.InteractionFrame, t.FlatBuffer.TableKey))
	TacticalSupportSystemExcelAddSummonerCharacterId(b, fbsutils.Convert(t.SummonerCharacterId, t.FlatBuffer.TableKey))
	TacticalSupportSystemExcelAddGetOnEndEffectPath(b, b.CreateString(fbsutils.Convert(t.GetOnEndEffectPath, t.FlatBuffer.TableKey)))
	TacticalSupportSystemExcelAddGetOnStartEffectPath(b, b.CreateString(fbsutils.Convert(t.GetOnStartEffectPath, t.FlatBuffer.TableKey)))
	TacticalSupportSystemExcelAddCharacterInteractionStartDelay(b, fbsutils.Convert(t.CharacterInteractionStartDelay, t.FlatBuffer.TableKey))
	TacticalSupportSystemExcelAddInteractionChar(b, fbsutils.Convert(t.InteractionChar, t.FlatBuffer.TableKey))
	TacticalSupportSystemExcelAddInventoryOffsetZ(b, fbsutils.Convert(t.InventoryOffsetZ, t.FlatBuffer.TableKey))
	TacticalSupportSystemExcelAddInventoryOffsetY(b, fbsutils.Convert(t.InventoryOffsetY, t.FlatBuffer.TableKey))
	TacticalSupportSystemExcelAddInventoryOffsetX(b, fbsutils.Convert(t.InventoryOffsetX, t.FlatBuffer.TableKey))
	TacticalSupportSystemExcelAddNumberOfUses(b, fbsutils.Convert(t.NumberOfUses, t.FlatBuffer.TableKey))
	TacticalSupportSystemExcelAddIsTssBlockedNodeCheck(b, t.IsTssBlockedNodeCheck)
	TacticalSupportSystemExcelAddCrashObstacleObbHeight(b, fbsutils.Convert(t.CrashObstacleObbHeight, t.FlatBuffer.TableKey))
	TacticalSupportSystemExcelAddCrashObstacleObbWidth(b, fbsutils.Convert(t.CrashObstacleObbWidth, t.FlatBuffer.TableKey))
	TacticalSupportSystemExcelAddSummonSkilllGroupId(b, b.CreateString(fbsutils.Convert(t.SummonSkilllGroupId, t.FlatBuffer.TableKey)))
	TacticalSupportSystemExcelAddObstacleCoverRange(b, fbsutils.Convert(t.ObstacleCoverRange, t.FlatBuffer.TableKey))
	TacticalSupportSystemExcelAddObstacleUniqueName(b, b.CreateString(fbsutils.Convert(t.ObstacleUniqueName, t.FlatBuffer.TableKey)))
	TacticalSupportSystemExcelAddCanCover(b, t.CanCover)
	TacticalSupportSystemExcelAddCanTargeting(b, t.CanTargeting)
	TacticalSupportSystemExcelAddDefaultPersonalityId(b, fbsutils.Convert(t.DefaultPersonalityId, t.FlatBuffer.TableKey))
	TacticalSupportSystemExcelAddSummonedTime(b, fbsutils.Convert(t.SummonedTime, t.FlatBuffer.TableKey))
	TacticalSupportSystemExcelAddId(b, fbsutils.Convert(t.Id, t.FlatBuffer.TableKey))
	return TacticalSupportSystemExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *TacticalSupportSystemExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *TacticalSupportSystemExcelDto) UnmarshalMessage(e *TacticalSupportSystemExcel) error {
	t.DestroyFrame = fbsutils.Convert(e.DestroyFrame(), t.FlatBuffer.TableKey)
	t.RetreatFrame = fbsutils.Convert(e.RetreatFrame(), t.FlatBuffer.TableKey)
	t.InteractionSkillSpine = fbsutils.Convert(string(e.InteractionSkillSpine()), t.FlatBuffer.TableKey)
	t.InteractionSkillCardTexture = fbsutils.Convert(string(e.InteractionSkillCardTexture()), t.FlatBuffer.TableKey)
	t.InteractionStudentExSkillGroupId = fbsutils.Convert(string(e.InteractionStudentExSkillGroupId()), t.FlatBuffer.TableKey)
	t.TsaInteractionAddDuration = fbsutils.Convert(e.TsaInteractionAddDuration(), t.FlatBuffer.TableKey)
	t.InteractionFrame = fbsutils.Convert(e.InteractionFrame(), t.FlatBuffer.TableKey)
	t.SummonerCharacterId = fbsutils.Convert(e.SummonerCharacterId(), t.FlatBuffer.TableKey)
	t.GetOnEndEffectPath = fbsutils.Convert(string(e.GetOnEndEffectPath()), t.FlatBuffer.TableKey)
	t.GetOnStartEffectPath = fbsutils.Convert(string(e.GetOnStartEffectPath()), t.FlatBuffer.TableKey)
	t.CharacterInteractionStartDelay = fbsutils.Convert(e.CharacterInteractionStartDelay(), t.FlatBuffer.TableKey)
	t.InteractionChar = fbsutils.Convert(e.InteractionChar(), t.FlatBuffer.TableKey)
	t.InventoryOffsetZ = fbsutils.Convert(e.InventoryOffsetZ(), t.FlatBuffer.TableKey)
	t.InventoryOffsetY = fbsutils.Convert(e.InventoryOffsetY(), t.FlatBuffer.TableKey)
	t.InventoryOffsetX = fbsutils.Convert(e.InventoryOffsetX(), t.FlatBuffer.TableKey)
	t.NumberOfUses = fbsutils.Convert(e.NumberOfUses(), t.FlatBuffer.TableKey)
	t.IsTssBlockedNodeCheck = e.IsTssBlockedNodeCheck()
	t.CrashObstacleObbHeight = fbsutils.Convert(e.CrashObstacleObbHeight(), t.FlatBuffer.TableKey)
	t.CrashObstacleObbWidth = fbsutils.Convert(e.CrashObstacleObbWidth(), t.FlatBuffer.TableKey)
	t.SummonSkilllGroupId = fbsutils.Convert(string(e.SummonSkilllGroupId()), t.FlatBuffer.TableKey)
	t.ObstacleCoverRange = fbsutils.Convert(e.ObstacleCoverRange(), t.FlatBuffer.TableKey)
	t.ObstacleUniqueName = fbsutils.Convert(string(e.ObstacleUniqueName()), t.FlatBuffer.TableKey)
	t.CanCover = e.CanCover()
	t.CanTargeting = e.CanTargeting()
	t.DefaultPersonalityId = fbsutils.Convert(e.DefaultPersonalityId(), t.FlatBuffer.TableKey)
	t.SummonedTime = fbsutils.Convert(e.SummonedTime(), t.FlatBuffer.TableKey)
	t.Id = fbsutils.Convert(e.Id(), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *TacticalSupportSystemExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsTacticalSupportSystemExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (TacticalSupportSystemExcelDto) FlatDataName() string {
	return "TacticalSupportSystemExcel"
}
