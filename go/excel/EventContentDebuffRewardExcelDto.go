// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// EventContentDebuffRewardExcelDto represents a FlatBuffers table
type EventContentDebuffRewardExcelDto struct {
	fbsutils.FlatBuffer
	EventContentId       int64                `json:"event_content_id"`
	EventContentItemType EventContentItemType `json:"event_content_item_type"`
	EventStageId         int64                `json:"event_stage_id"`
	RewardPercentage     int64                `json:"reward_percentage"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *EventContentDebuffRewardExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	EventContentDebuffRewardExcelStart(b)
	EventContentDebuffRewardExcelAddEventContentId(b, fbsutils.Convert(t.EventContentId, t.FlatBuffer.TableKey))
	EventContentDebuffRewardExcelAddEventContentItemType(b, fbsutils.Convert(t.EventContentItemType, t.FlatBuffer.TableKey))
	EventContentDebuffRewardExcelAddEventStageId(b, fbsutils.Convert(t.EventStageId, t.FlatBuffer.TableKey))
	EventContentDebuffRewardExcelAddRewardPercentage(b, fbsutils.Convert(t.RewardPercentage, t.FlatBuffer.TableKey))
	return EventContentDebuffRewardExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *EventContentDebuffRewardExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *EventContentDebuffRewardExcelDto) UnmarshalMessage(e *EventContentDebuffRewardExcel) error {
	t.EventContentId = fbsutils.Convert(e.EventContentId(), t.FlatBuffer.TableKey)
	t.EventContentItemType = EventContentItemType(fbsutils.Convert(int32(e.EventContentItemType()), t.FlatBuffer.TableKey))
	t.EventStageId = fbsutils.Convert(e.EventStageId(), t.FlatBuffer.TableKey)
	t.RewardPercentage = fbsutils.Convert(e.RewardPercentage(), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *EventContentDebuffRewardExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsEventContentDebuffRewardExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (EventContentDebuffRewardExcelDto) FlatDataName() string {
	return "EventContentDebuffRewardExcel"
}
