// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// IdCardBackgroundExcelDto represents a FlatBuffers table
type IdCardBackgroundExcelDto struct {
	fbsutils.FlatBuffer
	Icon              string `json:"icon"`
	LocalizeEtcId     uint32 `json:"localize_etc_id"`
	BgPath            string `json:"bg_path"`
	IsDefault         bool   `json:"is_default"`
	CollectionVisible bool   `json:"collection_visible"`
	DisplayOrder      int64  `json:"display_order"`
	Rarity            Rarity `json:"rarity"`
	Id                int64  `json:"id"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *IdCardBackgroundExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	IdCardBackgroundExcelStart(b)
	IdCardBackgroundExcelAddIcon(b, b.CreateString(fbsutils.Convert(t.Icon, t.FlatBuffer.TableKey)))
	IdCardBackgroundExcelAddLocalizeEtcId(b, fbsutils.Convert(t.LocalizeEtcId, t.FlatBuffer.TableKey))
	IdCardBackgroundExcelAddBgPath(b, b.CreateString(fbsutils.Convert(t.BgPath, t.FlatBuffer.TableKey)))
	IdCardBackgroundExcelAddIsDefault(b, t.IsDefault)
	IdCardBackgroundExcelAddCollectionVisible(b, t.CollectionVisible)
	IdCardBackgroundExcelAddDisplayOrder(b, fbsutils.Convert(t.DisplayOrder, t.FlatBuffer.TableKey))
	IdCardBackgroundExcelAddRarity(b, fbsutils.Convert(t.Rarity, t.FlatBuffer.TableKey))
	IdCardBackgroundExcelAddId(b, fbsutils.Convert(t.Id, t.FlatBuffer.TableKey))
	return IdCardBackgroundExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *IdCardBackgroundExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *IdCardBackgroundExcelDto) UnmarshalMessage(e *IdCardBackgroundExcel) error {
	t.Icon = fbsutils.Convert(string(e.Icon()), t.FlatBuffer.TableKey)
	t.LocalizeEtcId = fbsutils.Convert(e.LocalizeEtcId(), t.FlatBuffer.TableKey)
	t.BgPath = fbsutils.Convert(string(e.BgPath()), t.FlatBuffer.TableKey)
	t.IsDefault = e.IsDefault()
	t.CollectionVisible = e.CollectionVisible()
	t.DisplayOrder = fbsutils.Convert(e.DisplayOrder(), t.FlatBuffer.TableKey)
	t.Rarity = Rarity(fbsutils.Convert(int32(e.Rarity()), t.FlatBuffer.TableKey))
	t.Id = fbsutils.Convert(e.Id(), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *IdCardBackgroundExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsIdCardBackgroundExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (IdCardBackgroundExcelDto) FlatDataName() string {
	return "IdCardBackgroundExcel"
}
