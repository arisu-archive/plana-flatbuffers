// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package excel

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type MinigameCCGLogicEffectExcel struct {
	_tab flatbuffers.Table
}

func GetRootAsMinigameCCGLogicEffectExcel(buf []byte, offset flatbuffers.UOffsetT) *MinigameCCGLogicEffectExcel {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &MinigameCCGLogicEffectExcel{}
	x.Init(buf, n+offset)
	return x
}

func FinishMinigameCCGLogicEffectExcelBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	builder.Finish(offset)
}

func GetSizePrefixedRootAsMinigameCCGLogicEffectExcel(buf []byte, offset flatbuffers.UOffsetT) *MinigameCCGLogicEffectExcel {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &MinigameCCGLogicEffectExcel{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func FinishSizePrefixedMinigameCCGLogicEffectExcelBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	builder.FinishSizePrefixed(offset)
}

func (rcv *MinigameCCGLogicEffectExcel) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *MinigameCCGLogicEffectExcel) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *MinigameCCGLogicEffectExcel) Id() int64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.GetInt64(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *MinigameCCGLogicEffectExcel) MutateId(n int64) bool {
	return rcv._tab.MutateInt64Slot(4, n)
}

func (rcv *MinigameCCGLogicEffectExcel) DataLoadPath() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *MinigameCCGLogicEffectExcel) Icon() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func MinigameCCGLogicEffectExcelStart(builder *flatbuffers.Builder) {
	builder.StartObject(3)
}
func MinigameCCGLogicEffectExcelAddId(builder *flatbuffers.Builder, id int64) {
	builder.PrependInt64Slot(0, id, 0)
}
func MinigameCCGLogicEffectExcelAddDataLoadPath(builder *flatbuffers.Builder, dataLoadPath flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(dataLoadPath), 0)
}
func MinigameCCGLogicEffectExcelAddIcon(builder *flatbuffers.Builder, icon flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(2, flatbuffers.UOffsetT(icon), 0)
}
func MinigameCCGLogicEffectExcelEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
