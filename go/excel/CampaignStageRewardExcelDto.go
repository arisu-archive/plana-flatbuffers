// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// CampaignStageRewardExcelDto represents a FlatBuffers table
type CampaignStageRewardExcelDto struct {
	fbsutils.FlatBuffer
	GroupId               int64      `json:"group_id"`
	RewardTag             RewardTag  `json:"reward_tag"`
	StageRewardProb       int32      `json:"stage_reward_prob"`
	StageRewardParcelType ParcelType `json:"stage_reward_parcel_type"`
	StageRewardId         int64      `json:"stage_reward_id"`
	StageRewardAmount     int32      `json:"stage_reward_amount"`
	IsDisplayed           bool       `json:"is_displayed"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *CampaignStageRewardExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	CampaignStageRewardExcelStart(b)
	CampaignStageRewardExcelAddGroupId(b, fbsutils.Convert(t.GroupId, t.FlatBuffer.TableKey))
	CampaignStageRewardExcelAddRewardTag(b, fbsutils.Convert(t.RewardTag, t.FlatBuffer.TableKey))
	CampaignStageRewardExcelAddStageRewardProb(b, fbsutils.Convert(t.StageRewardProb, t.FlatBuffer.TableKey))
	CampaignStageRewardExcelAddStageRewardParcelType(b, fbsutils.Convert(t.StageRewardParcelType, t.FlatBuffer.TableKey))
	CampaignStageRewardExcelAddStageRewardId(b, fbsutils.Convert(t.StageRewardId, t.FlatBuffer.TableKey))
	CampaignStageRewardExcelAddStageRewardAmount(b, fbsutils.Convert(t.StageRewardAmount, t.FlatBuffer.TableKey))
	CampaignStageRewardExcelAddIsDisplayed(b, t.IsDisplayed)
	return CampaignStageRewardExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *CampaignStageRewardExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *CampaignStageRewardExcelDto) UnmarshalMessage(e *CampaignStageRewardExcel) error {
	t.GroupId = fbsutils.Convert(e.GroupId(), t.FlatBuffer.TableKey)
	t.RewardTag = RewardTag(fbsutils.Convert(int32(e.RewardTag()), t.FlatBuffer.TableKey))
	t.StageRewardProb = fbsutils.Convert(e.StageRewardProb(), t.FlatBuffer.TableKey)
	t.StageRewardParcelType = ParcelType(fbsutils.Convert(int32(e.StageRewardParcelType()), t.FlatBuffer.TableKey))
	t.StageRewardId = fbsutils.Convert(e.StageRewardId(), t.FlatBuffer.TableKey)
	t.StageRewardAmount = fbsutils.Convert(e.StageRewardAmount(), t.FlatBuffer.TableKey)
	t.IsDisplayed = e.IsDisplayed()
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *CampaignStageRewardExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsCampaignStageRewardExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (CampaignStageRewardExcelDto) FlatDataName() string {
	return "CampaignStageRewardExcel"
}
