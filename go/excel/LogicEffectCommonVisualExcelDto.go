// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// LogicEffectCommonVisualExcelDto represents a FlatBuffers table
type LogicEffectCommonVisualExcelDto struct {
	fbsutils.FlatBuffer
	StringId              uint32     `json:"string_id"`
	IconSpriteName        string     `json:"icon_sprite_name"`
	IconDispelColor       []float32  `json:"icon_dispel_color"`
	ParticleEnterPath     string     `json:"particle_enter_path"`
	ParticleEnterSocket   EffectBone `json:"particle_enter_socket"`
	ParticleLoopPath      string     `json:"particle_loop_path"`
	ParticleLoopSocket    EffectBone `json:"particle_loop_socket"`
	ParticleEndPath       string     `json:"particle_end_path"`
	ParticleEndSocket     EffectBone `json:"particle_end_socket"`
	ParticleApplyPath     string     `json:"particle_apply_path"`
	ParticleApplySocket   EffectBone `json:"particle_apply_socket"`
	ParticleRemovedPath   string     `json:"particle_removed_path"`
	ParticleRemovedSocket EffectBone `json:"particle_removed_socket"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *LogicEffectCommonVisualExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	__offset_icon_sprite_name := b.CreateString(fbsutils.Convert(t.IconSpriteName, t.FlatBuffer.TableKey))
	__offset_particle_enter_path := b.CreateString(fbsutils.Convert(t.ParticleEnterPath, t.FlatBuffer.TableKey))
	__offset_particle_loop_path := b.CreateString(fbsutils.Convert(t.ParticleLoopPath, t.FlatBuffer.TableKey))
	__offset_particle_end_path := b.CreateString(fbsutils.Convert(t.ParticleEndPath, t.FlatBuffer.TableKey))
	__offset_particle_apply_path := b.CreateString(fbsutils.Convert(t.ParticleApplyPath, t.FlatBuffer.TableKey))
	__offset_particle_removed_path := b.CreateString(fbsutils.Convert(t.ParticleRemovedPath, t.FlatBuffer.TableKey))
	LogicEffectCommonVisualExcelStart(b)
	LogicEffectCommonVisualExcelAddStringId(b, fbsutils.Convert(t.StringId, t.FlatBuffer.TableKey))
	LogicEffectCommonVisualExcelAddIconSpriteName(b, __offset_icon_sprite_name)
	LogicEffectCommonVisualExcelStartIconDispelColorVector(b, len(t.IconDispelColor))
	for i := range len(t.IconDispelColor) {
		b.PrependFloat32(fbsutils.Convert(t.IconDispelColor[len(t.IconDispelColor)-i-1], t.FlatBuffer.TableKey))
	}
	LogicEffectCommonVisualExcelAddIconDispelColor(b, b.EndVector(len(t.IconDispelColor)))
	LogicEffectCommonVisualExcelAddParticleEnterPath(b, __offset_particle_enter_path)
	LogicEffectCommonVisualExcelAddParticleEnterSocket(b, fbsutils.Convert(t.ParticleEnterSocket, t.FlatBuffer.TableKey))
	LogicEffectCommonVisualExcelAddParticleLoopPath(b, __offset_particle_loop_path)
	LogicEffectCommonVisualExcelAddParticleLoopSocket(b, fbsutils.Convert(t.ParticleLoopSocket, t.FlatBuffer.TableKey))
	LogicEffectCommonVisualExcelAddParticleEndPath(b, __offset_particle_end_path)
	LogicEffectCommonVisualExcelAddParticleEndSocket(b, fbsutils.Convert(t.ParticleEndSocket, t.FlatBuffer.TableKey))
	LogicEffectCommonVisualExcelAddParticleApplyPath(b, __offset_particle_apply_path)
	LogicEffectCommonVisualExcelAddParticleApplySocket(b, fbsutils.Convert(t.ParticleApplySocket, t.FlatBuffer.TableKey))
	LogicEffectCommonVisualExcelAddParticleRemovedPath(b, __offset_particle_removed_path)
	LogicEffectCommonVisualExcelAddParticleRemovedSocket(b, fbsutils.Convert(t.ParticleRemovedSocket, t.FlatBuffer.TableKey))
	return LogicEffectCommonVisualExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *LogicEffectCommonVisualExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *LogicEffectCommonVisualExcelDto) UnmarshalMessage(e *LogicEffectCommonVisualExcel) error {
	t.StringId = fbsutils.Convert(e.StringId(), t.FlatBuffer.TableKey)
	t.IconSpriteName = fbsutils.Convert(string(e.IconSpriteName()), t.FlatBuffer.TableKey)
	t.IconDispelColor = make([]float32, e.IconDispelColorLength())
	for i := range e.IconDispelColorLength() {
		t.IconDispelColor[i] = fbsutils.Convert(e.IconDispelColor(i), t.FlatBuffer.TableKey)
	}
	t.ParticleEnterPath = fbsutils.Convert(string(e.ParticleEnterPath()), t.FlatBuffer.TableKey)
	t.ParticleEnterSocket = EffectBone(fbsutils.Convert(int32(e.ParticleEnterSocket()), t.FlatBuffer.TableKey))
	t.ParticleLoopPath = fbsutils.Convert(string(e.ParticleLoopPath()), t.FlatBuffer.TableKey)
	t.ParticleLoopSocket = EffectBone(fbsutils.Convert(int32(e.ParticleLoopSocket()), t.FlatBuffer.TableKey))
	t.ParticleEndPath = fbsutils.Convert(string(e.ParticleEndPath()), t.FlatBuffer.TableKey)
	t.ParticleEndSocket = EffectBone(fbsutils.Convert(int32(e.ParticleEndSocket()), t.FlatBuffer.TableKey))
	t.ParticleApplyPath = fbsutils.Convert(string(e.ParticleApplyPath()), t.FlatBuffer.TableKey)
	t.ParticleApplySocket = EffectBone(fbsutils.Convert(int32(e.ParticleApplySocket()), t.FlatBuffer.TableKey))
	t.ParticleRemovedPath = fbsutils.Convert(string(e.ParticleRemovedPath()), t.FlatBuffer.TableKey)
	t.ParticleRemovedSocket = EffectBone(fbsutils.Convert(int32(e.ParticleRemovedSocket()), t.FlatBuffer.TableKey))
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *LogicEffectCommonVisualExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsLogicEffectCommonVisualExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (LogicEffectCommonVisualExcelDto) FlatDataName() string {
	return "LogicEffectCommonVisualExcel"
}
