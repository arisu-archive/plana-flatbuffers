// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// SkillSelectExTooltipExcelDto represents a FlatBuffers table
type SkillSelectExTooltipExcelDto struct {
	fbsutils.FlatBuffer
	SkillUseConditionLocalizeId string `json:"skill_use_condition_localize_id"`
	SelectableExSkillGroupId    string `json:"selectable_ex_skill_group_id"`
	GroupId                     int64  `json:"group_id"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *SkillSelectExTooltipExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	SkillSelectExTooltipExcelStart(b)
	SkillSelectExTooltipExcelAddSkillUseConditionLocalizeId(b, b.CreateString(fbsutils.Convert(t.SkillUseConditionLocalizeId, t.FlatBuffer.TableKey)))
	SkillSelectExTooltipExcelAddSelectableExSkillGroupId(b, b.CreateString(fbsutils.Convert(t.SelectableExSkillGroupId, t.FlatBuffer.TableKey)))
	SkillSelectExTooltipExcelAddGroupId(b, fbsutils.Convert(t.GroupId, t.FlatBuffer.TableKey))
	return SkillSelectExTooltipExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *SkillSelectExTooltipExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *SkillSelectExTooltipExcelDto) UnmarshalMessage(e *SkillSelectExTooltipExcel) error {
	t.SkillUseConditionLocalizeId = fbsutils.Convert(string(e.SkillUseConditionLocalizeId()), t.FlatBuffer.TableKey)
	t.SelectableExSkillGroupId = fbsutils.Convert(string(e.SelectableExSkillGroupId()), t.FlatBuffer.TableKey)
	t.GroupId = fbsutils.Convert(e.GroupId(), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *SkillSelectExTooltipExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsSkillSelectExTooltipExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (SkillSelectExTooltipExcelDto) FlatDataName() string {
	return "SkillSelectExTooltipExcel"
}
