// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// MissionEmergencyCompleteExcelDto represents a FlatBuffers table
type MissionEmergencyCompleteExcelDto struct {
	fbsutils.FlatBuffer
	MissionId         int64 `json:"mission_id"`
	EmergencyComplete bool  `json:"emergency_complete"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *MissionEmergencyCompleteExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	MissionEmergencyCompleteExcelStart(b)
	MissionEmergencyCompleteExcelAddMissionId(b, fbsutils.Convert(t.MissionId, t.FlatBuffer.TableKey))
	MissionEmergencyCompleteExcelAddEmergencyComplete(b, t.EmergencyComplete)
	return MissionEmergencyCompleteExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *MissionEmergencyCompleteExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *MissionEmergencyCompleteExcelDto) UnmarshalMessage(e *MissionEmergencyCompleteExcel) error {
	t.MissionId = fbsutils.Convert(e.MissionId(), t.FlatBuffer.TableKey)
	t.EmergencyComplete = e.EmergencyComplete()
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *MissionEmergencyCompleteExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsMissionEmergencyCompleteExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (MissionEmergencyCompleteExcelDto) FlatDataName() string {
	return "MissionEmergencyCompleteExcel"
}
