// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// CafeInfoExcelDto represents a FlatBuffers table
type CafeInfoExcelDto struct {
	fbsutils.FlatBuffer
	SummonTicketIconPath    string               `json:"summon_ticket_icon_path"`
	CategoryType            ShopCategoryType     `json:"category_type"`
	SummonParcelAmount      int64                `json:"summon_parcel_amount"`
	SummonParcelId          int64                `json:"summon_parcel_id"`
	SummonParcelType        ParcelType           `json:"summon_parcel_type"`
	OpenConditionCafeInvite OpenConditionContent `json:"open_condition_cafe_invite"`
	OpenConditionCafeId     OpenConditionContent `json:"open_condition_cafe_id"`
	IsDefault               bool                 `json:"is_default"`
	CafeId                  int64                `json:"cafe_id"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *CafeInfoExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	CafeInfoExcelStart(b)
	CafeInfoExcelAddSummonTicketIconPath(b, b.CreateString(fbsutils.Convert(t.SummonTicketIconPath, t.FlatBuffer.TableKey)))
	CafeInfoExcelAddCategoryType(b, fbsutils.Convert(t.CategoryType, t.FlatBuffer.TableKey))
	CafeInfoExcelAddSummonParcelAmount(b, fbsutils.Convert(t.SummonParcelAmount, t.FlatBuffer.TableKey))
	CafeInfoExcelAddSummonParcelId(b, fbsutils.Convert(t.SummonParcelId, t.FlatBuffer.TableKey))
	CafeInfoExcelAddSummonParcelType(b, fbsutils.Convert(t.SummonParcelType, t.FlatBuffer.TableKey))
	CafeInfoExcelAddOpenConditionCafeInvite(b, fbsutils.Convert(t.OpenConditionCafeInvite, t.FlatBuffer.TableKey))
	CafeInfoExcelAddOpenConditionCafeId(b, fbsutils.Convert(t.OpenConditionCafeId, t.FlatBuffer.TableKey))
	CafeInfoExcelAddIsDefault(b, t.IsDefault)
	CafeInfoExcelAddCafeId(b, fbsutils.Convert(t.CafeId, t.FlatBuffer.TableKey))
	return CafeInfoExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *CafeInfoExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *CafeInfoExcelDto) UnmarshalMessage(e *CafeInfoExcel) error {
	t.SummonTicketIconPath = fbsutils.Convert(string(e.SummonTicketIconPath()), t.FlatBuffer.TableKey)
	t.CategoryType = ShopCategoryType(fbsutils.Convert(int32(e.CategoryType()), t.FlatBuffer.TableKey))
	t.SummonParcelAmount = fbsutils.Convert(e.SummonParcelAmount(), t.FlatBuffer.TableKey)
	t.SummonParcelId = fbsutils.Convert(e.SummonParcelId(), t.FlatBuffer.TableKey)
	t.SummonParcelType = ParcelType(fbsutils.Convert(int32(e.SummonParcelType()), t.FlatBuffer.TableKey))
	t.OpenConditionCafeInvite = OpenConditionContent(fbsutils.Convert(int32(e.OpenConditionCafeInvite()), t.FlatBuffer.TableKey))
	t.OpenConditionCafeId = OpenConditionContent(fbsutils.Convert(int32(e.OpenConditionCafeId()), t.FlatBuffer.TableKey))
	t.IsDefault = e.IsDefault()
	t.CafeId = fbsutils.Convert(e.CafeId(), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *CafeInfoExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsCafeInfoExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (CafeInfoExcelDto) FlatDataName() string {
	return "CafeInfoExcel"
}
