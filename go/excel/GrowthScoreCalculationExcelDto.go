// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// GrowthScoreCalculationExcelDto represents a FlatBuffers table
type GrowthScoreCalculationExcelDto struct {
	fbsutils.FlatBuffer
	ConversionCoefficient int64        `json:"conversion_coefficient"`
	Id                    int64        `json:"id"`
	IncludeGrowthFactor   GrowthFactor `json:"include_growth_factor"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *GrowthScoreCalculationExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	GrowthScoreCalculationExcelStart(b)
	GrowthScoreCalculationExcelAddConversionCoefficient(b, fbsutils.Convert(t.ConversionCoefficient, t.FlatBuffer.TableKey))
	GrowthScoreCalculationExcelAddId(b, fbsutils.Convert(t.Id, t.FlatBuffer.TableKey))
	GrowthScoreCalculationExcelAddIncludeGrowthFactor(b, fbsutils.Convert(t.IncludeGrowthFactor, t.FlatBuffer.TableKey))
	return GrowthScoreCalculationExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *GrowthScoreCalculationExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *GrowthScoreCalculationExcelDto) UnmarshalMessage(e *GrowthScoreCalculationExcel) error {
	t.ConversionCoefficient = fbsutils.Convert(e.ConversionCoefficient(), t.FlatBuffer.TableKey)
	t.Id = fbsutils.Convert(e.Id(), t.FlatBuffer.TableKey)
	t.IncludeGrowthFactor = GrowthFactor(fbsutils.Convert(int32(e.IncludeGrowthFactor()), t.FlatBuffer.TableKey))
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *GrowthScoreCalculationExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsGrowthScoreCalculationExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (GrowthScoreCalculationExcelDto) FlatDataName() string {
	return "GrowthScoreCalculationExcel"
}
