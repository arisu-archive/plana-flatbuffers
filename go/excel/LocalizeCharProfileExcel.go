// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package excel

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type LocalizeCharProfileExcel struct {
	_tab flatbuffers.Table
}

func GetRootAsLocalizeCharProfileExcel(buf []byte, offset flatbuffers.UOffsetT) *LocalizeCharProfileExcel {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &LocalizeCharProfileExcel{}
	x.Init(buf, n+offset)
	return x
}

func GetSizePrefixedRootAsLocalizeCharProfileExcel(buf []byte, offset flatbuffers.UOffsetT) *LocalizeCharProfileExcel {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &LocalizeCharProfileExcel{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func (rcv *LocalizeCharProfileExcel) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *LocalizeCharProfileExcel) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *LocalizeCharProfileExcel) CharacterSsrNewJp() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LocalizeCharProfileExcel) CharacterSsrNewKr() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LocalizeCharProfileExcel) ProfileIntroductionJp() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LocalizeCharProfileExcel) ProfileIntroductionKr() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LocalizeCharProfileExcel) WeaponDescJp() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(12))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LocalizeCharProfileExcel) WeaponNameJp() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(14))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LocalizeCharProfileExcel) WeaponDescKr() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(16))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LocalizeCharProfileExcel) WeaponNameKr() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(18))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LocalizeCharProfileExcel) HobbyJp() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(20))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LocalizeCharProfileExcel) HobbyKr() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(22))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LocalizeCharProfileExcel) CharacterVoiceJp() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(24))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LocalizeCharProfileExcel) CharacterVoiceKr() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(26))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LocalizeCharProfileExcel) IllustratorNameJp() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(28))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LocalizeCharProfileExcel) IllustratorNameKr() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(30))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LocalizeCharProfileExcel) DesignerNameJp() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(32))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LocalizeCharProfileExcel) DesignerNameKr() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(34))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LocalizeCharProfileExcel) CharHeightJp() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(36))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LocalizeCharProfileExcel) CharHeightKr() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(38))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LocalizeCharProfileExcel) BirthdayJp() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(40))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LocalizeCharProfileExcel) BirthdayKr() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(42))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LocalizeCharProfileExcel) BirthDay() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(44))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LocalizeCharProfileExcel) CharacterAgeJp() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(46))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LocalizeCharProfileExcel) CharacterAgeKr() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(48))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LocalizeCharProfileExcel) SchoolYearJp() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(50))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LocalizeCharProfileExcel) SchoolYearKr() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(52))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LocalizeCharProfileExcel) PersonalNameRubyJp() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(54))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LocalizeCharProfileExcel) PersonalNameJp() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(56))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LocalizeCharProfileExcel) FamilyNameRubyJp() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(58))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LocalizeCharProfileExcel) FamilyNameJp() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(60))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LocalizeCharProfileExcel) PersonalNameRubyKr() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(62))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LocalizeCharProfileExcel) PersonalNameKr() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(64))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LocalizeCharProfileExcel) FamilyNameRubyKr() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(66))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LocalizeCharProfileExcel) FamilyNameKr() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(68))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LocalizeCharProfileExcel) FullNameJp() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(70))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LocalizeCharProfileExcel) FullNameKr() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(72))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LocalizeCharProfileExcel) StatusMessageJp() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(74))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LocalizeCharProfileExcel) StatusMessageKr() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(76))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *LocalizeCharProfileExcel) CharacterId() int64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(78))
	if o != 0 {
		return rcv._tab.GetInt64(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *LocalizeCharProfileExcel) MutateCharacterId(n int64) bool {
	return rcv._tab.MutateInt64Slot(78, n)
}

func LocalizeCharProfileExcelStart(builder *flatbuffers.Builder) {
	builder.StartObject(38)
}
func LocalizeCharProfileExcelAddCharacterSsrNewJp(builder *flatbuffers.Builder, characterSsrNewJp flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(characterSsrNewJp), 0)
}
func LocalizeCharProfileExcelAddCharacterSsrNewKr(builder *flatbuffers.Builder, characterSsrNewKr flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(characterSsrNewKr), 0)
}
func LocalizeCharProfileExcelAddProfileIntroductionJp(builder *flatbuffers.Builder, profileIntroductionJp flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(2, flatbuffers.UOffsetT(profileIntroductionJp), 0)
}
func LocalizeCharProfileExcelAddProfileIntroductionKr(builder *flatbuffers.Builder, profileIntroductionKr flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(3, flatbuffers.UOffsetT(profileIntroductionKr), 0)
}
func LocalizeCharProfileExcelAddWeaponDescJp(builder *flatbuffers.Builder, weaponDescJp flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(4, flatbuffers.UOffsetT(weaponDescJp), 0)
}
func LocalizeCharProfileExcelAddWeaponNameJp(builder *flatbuffers.Builder, weaponNameJp flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(5, flatbuffers.UOffsetT(weaponNameJp), 0)
}
func LocalizeCharProfileExcelAddWeaponDescKr(builder *flatbuffers.Builder, weaponDescKr flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(6, flatbuffers.UOffsetT(weaponDescKr), 0)
}
func LocalizeCharProfileExcelAddWeaponNameKr(builder *flatbuffers.Builder, weaponNameKr flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(7, flatbuffers.UOffsetT(weaponNameKr), 0)
}
func LocalizeCharProfileExcelAddHobbyJp(builder *flatbuffers.Builder, hobbyJp flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(8, flatbuffers.UOffsetT(hobbyJp), 0)
}
func LocalizeCharProfileExcelAddHobbyKr(builder *flatbuffers.Builder, hobbyKr flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(9, flatbuffers.UOffsetT(hobbyKr), 0)
}
func LocalizeCharProfileExcelAddCharacterVoiceJp(builder *flatbuffers.Builder, characterVoiceJp flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(10, flatbuffers.UOffsetT(characterVoiceJp), 0)
}
func LocalizeCharProfileExcelAddCharacterVoiceKr(builder *flatbuffers.Builder, characterVoiceKr flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(11, flatbuffers.UOffsetT(characterVoiceKr), 0)
}
func LocalizeCharProfileExcelAddIllustratorNameJp(builder *flatbuffers.Builder, illustratorNameJp flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(12, flatbuffers.UOffsetT(illustratorNameJp), 0)
}
func LocalizeCharProfileExcelAddIllustratorNameKr(builder *flatbuffers.Builder, illustratorNameKr flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(13, flatbuffers.UOffsetT(illustratorNameKr), 0)
}
func LocalizeCharProfileExcelAddDesignerNameJp(builder *flatbuffers.Builder, designerNameJp flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(14, flatbuffers.UOffsetT(designerNameJp), 0)
}
func LocalizeCharProfileExcelAddDesignerNameKr(builder *flatbuffers.Builder, designerNameKr flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(15, flatbuffers.UOffsetT(designerNameKr), 0)
}
func LocalizeCharProfileExcelAddCharHeightJp(builder *flatbuffers.Builder, charHeightJp flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(16, flatbuffers.UOffsetT(charHeightJp), 0)
}
func LocalizeCharProfileExcelAddCharHeightKr(builder *flatbuffers.Builder, charHeightKr flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(17, flatbuffers.UOffsetT(charHeightKr), 0)
}
func LocalizeCharProfileExcelAddBirthdayJp(builder *flatbuffers.Builder, birthdayJp flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(18, flatbuffers.UOffsetT(birthdayJp), 0)
}
func LocalizeCharProfileExcelAddBirthdayKr(builder *flatbuffers.Builder, birthdayKr flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(19, flatbuffers.UOffsetT(birthdayKr), 0)
}
func LocalizeCharProfileExcelAddBirthDay(builder *flatbuffers.Builder, birthDay flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(20, flatbuffers.UOffsetT(birthDay), 0)
}
func LocalizeCharProfileExcelAddCharacterAgeJp(builder *flatbuffers.Builder, characterAgeJp flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(21, flatbuffers.UOffsetT(characterAgeJp), 0)
}
func LocalizeCharProfileExcelAddCharacterAgeKr(builder *flatbuffers.Builder, characterAgeKr flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(22, flatbuffers.UOffsetT(characterAgeKr), 0)
}
func LocalizeCharProfileExcelAddSchoolYearJp(builder *flatbuffers.Builder, schoolYearJp flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(23, flatbuffers.UOffsetT(schoolYearJp), 0)
}
func LocalizeCharProfileExcelAddSchoolYearKr(builder *flatbuffers.Builder, schoolYearKr flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(24, flatbuffers.UOffsetT(schoolYearKr), 0)
}
func LocalizeCharProfileExcelAddPersonalNameRubyJp(builder *flatbuffers.Builder, personalNameRubyJp flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(25, flatbuffers.UOffsetT(personalNameRubyJp), 0)
}
func LocalizeCharProfileExcelAddPersonalNameJp(builder *flatbuffers.Builder, personalNameJp flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(26, flatbuffers.UOffsetT(personalNameJp), 0)
}
func LocalizeCharProfileExcelAddFamilyNameRubyJp(builder *flatbuffers.Builder, familyNameRubyJp flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(27, flatbuffers.UOffsetT(familyNameRubyJp), 0)
}
func LocalizeCharProfileExcelAddFamilyNameJp(builder *flatbuffers.Builder, familyNameJp flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(28, flatbuffers.UOffsetT(familyNameJp), 0)
}
func LocalizeCharProfileExcelAddPersonalNameRubyKr(builder *flatbuffers.Builder, personalNameRubyKr flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(29, flatbuffers.UOffsetT(personalNameRubyKr), 0)
}
func LocalizeCharProfileExcelAddPersonalNameKr(builder *flatbuffers.Builder, personalNameKr flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(30, flatbuffers.UOffsetT(personalNameKr), 0)
}
func LocalizeCharProfileExcelAddFamilyNameRubyKr(builder *flatbuffers.Builder, familyNameRubyKr flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(31, flatbuffers.UOffsetT(familyNameRubyKr), 0)
}
func LocalizeCharProfileExcelAddFamilyNameKr(builder *flatbuffers.Builder, familyNameKr flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(32, flatbuffers.UOffsetT(familyNameKr), 0)
}
func LocalizeCharProfileExcelAddFullNameJp(builder *flatbuffers.Builder, fullNameJp flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(33, flatbuffers.UOffsetT(fullNameJp), 0)
}
func LocalizeCharProfileExcelAddFullNameKr(builder *flatbuffers.Builder, fullNameKr flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(34, flatbuffers.UOffsetT(fullNameKr), 0)
}
func LocalizeCharProfileExcelAddStatusMessageJp(builder *flatbuffers.Builder, statusMessageJp flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(35, flatbuffers.UOffsetT(statusMessageJp), 0)
}
func LocalizeCharProfileExcelAddStatusMessageKr(builder *flatbuffers.Builder, statusMessageKr flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(36, flatbuffers.UOffsetT(statusMessageKr), 0)
}
func LocalizeCharProfileExcelAddCharacterId(builder *flatbuffers.Builder, characterId int64) {
	builder.PrependInt64Slot(37, characterId, 0)
}
func LocalizeCharProfileExcelEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
