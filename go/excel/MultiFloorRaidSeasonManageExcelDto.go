// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// MultiFloorRaidSeasonManageExcelDto represents a FlatBuffers table
type MultiFloorRaidSeasonManageExcelDto struct {
	fbsutils.FlatBuffer
	EndNoteLabelStartDate string `json:"end_note_label_start_date"`
	EnterScenarioKey      uint32 `json:"enter_scenario_key"`
	LevelImgPath          string `json:"level_img_path"`
	LobbyEnterScenario    uint32 `json:"lobby_enter_scenario"`
	LobbyImgPath          string `json:"lobby_img_path"`
	OpenRaidBossGroupId   string `json:"open_raid_boss_group_id"`
	PlayTip               string `json:"play_tip"`
	SeasonEndDate         string `json:"season_end_date"`
	SeasonId              int64  `json:"season_id"`
	SeasonStartDate       string `json:"season_start_date"`
	SettlementEndDate     string `json:"settlement_end_date"`
	ShowLobbyBanner       bool   `json:"show_lobby_banner"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *MultiFloorRaidSeasonManageExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	MultiFloorRaidSeasonManageExcelStart(b)
	MultiFloorRaidSeasonManageExcelAddEndNoteLabelStartDate(b, b.CreateString(fbsutils.Convert(t.EndNoteLabelStartDate, t.FlatBuffer.TableKey)))
	MultiFloorRaidSeasonManageExcelAddEnterScenarioKey(b, fbsutils.Convert(t.EnterScenarioKey, t.FlatBuffer.TableKey))
	MultiFloorRaidSeasonManageExcelAddLevelImgPath(b, b.CreateString(fbsutils.Convert(t.LevelImgPath, t.FlatBuffer.TableKey)))
	MultiFloorRaidSeasonManageExcelAddLobbyEnterScenario(b, fbsutils.Convert(t.LobbyEnterScenario, t.FlatBuffer.TableKey))
	MultiFloorRaidSeasonManageExcelAddLobbyImgPath(b, b.CreateString(fbsutils.Convert(t.LobbyImgPath, t.FlatBuffer.TableKey)))
	MultiFloorRaidSeasonManageExcelAddOpenRaidBossGroupId(b, b.CreateString(fbsutils.Convert(t.OpenRaidBossGroupId, t.FlatBuffer.TableKey)))
	MultiFloorRaidSeasonManageExcelAddPlayTip(b, b.CreateString(fbsutils.Convert(t.PlayTip, t.FlatBuffer.TableKey)))
	MultiFloorRaidSeasonManageExcelAddSeasonEndDate(b, b.CreateString(fbsutils.Convert(t.SeasonEndDate, t.FlatBuffer.TableKey)))
	MultiFloorRaidSeasonManageExcelAddSeasonId(b, fbsutils.Convert(t.SeasonId, t.FlatBuffer.TableKey))
	MultiFloorRaidSeasonManageExcelAddSeasonStartDate(b, b.CreateString(fbsutils.Convert(t.SeasonStartDate, t.FlatBuffer.TableKey)))
	MultiFloorRaidSeasonManageExcelAddSettlementEndDate(b, b.CreateString(fbsutils.Convert(t.SettlementEndDate, t.FlatBuffer.TableKey)))
	MultiFloorRaidSeasonManageExcelAddShowLobbyBanner(b, t.ShowLobbyBanner)
	return MultiFloorRaidSeasonManageExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *MultiFloorRaidSeasonManageExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *MultiFloorRaidSeasonManageExcelDto) UnmarshalMessage(e *MultiFloorRaidSeasonManageExcel) error {
	t.EndNoteLabelStartDate = fbsutils.Convert(string(e.EndNoteLabelStartDate()), t.FlatBuffer.TableKey)
	t.EnterScenarioKey = fbsutils.Convert(e.EnterScenarioKey(), t.FlatBuffer.TableKey)
	t.LevelImgPath = fbsutils.Convert(string(e.LevelImgPath()), t.FlatBuffer.TableKey)
	t.LobbyEnterScenario = fbsutils.Convert(e.LobbyEnterScenario(), t.FlatBuffer.TableKey)
	t.LobbyImgPath = fbsutils.Convert(string(e.LobbyImgPath()), t.FlatBuffer.TableKey)
	t.OpenRaidBossGroupId = fbsutils.Convert(string(e.OpenRaidBossGroupId()), t.FlatBuffer.TableKey)
	t.PlayTip = fbsutils.Convert(string(e.PlayTip()), t.FlatBuffer.TableKey)
	t.SeasonEndDate = fbsutils.Convert(string(e.SeasonEndDate()), t.FlatBuffer.TableKey)
	t.SeasonId = fbsutils.Convert(e.SeasonId(), t.FlatBuffer.TableKey)
	t.SeasonStartDate = fbsutils.Convert(string(e.SeasonStartDate()), t.FlatBuffer.TableKey)
	t.SettlementEndDate = fbsutils.Convert(string(e.SettlementEndDate()), t.FlatBuffer.TableKey)
	t.ShowLobbyBanner = e.ShowLobbyBanner()
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *MultiFloorRaidSeasonManageExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsMultiFloorRaidSeasonManageExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (MultiFloorRaidSeasonManageExcelDto) FlatDataName() string {
	return "MultiFloorRaidSeasonManageExcel"
}
