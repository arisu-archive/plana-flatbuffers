// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// SpineLipsyncExcelDto represents a FlatBuffers table
type SpineLipsyncExcelDto struct {
	fbsutils.FlatBuffer
	VoiceId  uint32 `json:"voice_id"`
	AnimJson string `json:"anim_json"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *SpineLipsyncExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	SpineLipsyncExcelStart(b)
	SpineLipsyncExcelAddVoiceId(b, fbsutils.Convert(t.VoiceId, t.FlatBuffer.TableKey))
	SpineLipsyncExcelAddAnimJson(b, b.CreateString(fbsutils.Convert(t.AnimJson, t.FlatBuffer.TableKey)))
	return SpineLipsyncExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *SpineLipsyncExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *SpineLipsyncExcelDto) UnmarshalMessage(e *SpineLipsyncExcel) error {
	t.VoiceId = fbsutils.Convert(e.VoiceId(), t.FlatBuffer.TableKey)
	t.AnimJson = fbsutils.Convert(string(e.AnimJson()), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *SpineLipsyncExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsSpineLipsyncExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (SpineLipsyncExcelDto) FlatDataName() string {
	return "SpineLipsyncExcel"
}
