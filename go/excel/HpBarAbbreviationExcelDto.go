// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// HpBarAbbreviationExcelDto represents a FlatBuffers table
type HpBarAbbreviationExcelDto struct {
	fbsutils.FlatBuffer
	RaidBossHpBar int32 `json:"raid_boss_hp_bar"`
	StandardHpBar int32 `json:"standard_hp_bar"`
	MonsterLv     int32 `json:"monster_lv"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *HpBarAbbreviationExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	HpBarAbbreviationExcelStart(b)
	HpBarAbbreviationExcelAddRaidBossHpBar(b, fbsutils.Convert(t.RaidBossHpBar, t.FlatBuffer.TableKey))
	HpBarAbbreviationExcelAddStandardHpBar(b, fbsutils.Convert(t.StandardHpBar, t.FlatBuffer.TableKey))
	HpBarAbbreviationExcelAddMonsterLv(b, fbsutils.Convert(t.MonsterLv, t.FlatBuffer.TableKey))
	return HpBarAbbreviationExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *HpBarAbbreviationExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *HpBarAbbreviationExcelDto) UnmarshalMessage(e *HpBarAbbreviationExcel) error {
	t.RaidBossHpBar = fbsutils.Convert(e.RaidBossHpBar(), t.FlatBuffer.TableKey)
	t.StandardHpBar = fbsutils.Convert(e.StandardHpBar(), t.FlatBuffer.TableKey)
	t.MonsterLv = fbsutils.Convert(e.MonsterLv(), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *HpBarAbbreviationExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsHpBarAbbreviationExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (HpBarAbbreviationExcelDto) FlatDataName() string {
	return "HpBarAbbreviationExcel"
}
