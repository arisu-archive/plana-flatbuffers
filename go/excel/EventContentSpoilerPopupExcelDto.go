// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// EventContentSpoilerPopupExcelDto represents a FlatBuffers table
type EventContentSpoilerPopupExcelDto struct {
	fbsutils.FlatBuffer
	ConditionScenarioModeId int64  `json:"condition_scenario_mode_id"`
	IsWarningPopUp          bool   `json:"is_warning_pop_up"`
	SpoilerPopupDescription string `json:"spoiler_popup_description"`
	SpoilerPopupTitle       string `json:"spoiler_popup_title"`
	EventContentId          int64  `json:"event_content_id"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *EventContentSpoilerPopupExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	EventContentSpoilerPopupExcelStart(b)
	EventContentSpoilerPopupExcelAddConditionScenarioModeId(b, fbsutils.Convert(t.ConditionScenarioModeId, t.FlatBuffer.TableKey))
	EventContentSpoilerPopupExcelAddIsWarningPopUp(b, t.IsWarningPopUp)
	EventContentSpoilerPopupExcelAddSpoilerPopupDescription(b, b.CreateString(fbsutils.Convert(t.SpoilerPopupDescription, t.FlatBuffer.TableKey)))
	EventContentSpoilerPopupExcelAddSpoilerPopupTitle(b, b.CreateString(fbsutils.Convert(t.SpoilerPopupTitle, t.FlatBuffer.TableKey)))
	EventContentSpoilerPopupExcelAddEventContentId(b, fbsutils.Convert(t.EventContentId, t.FlatBuffer.TableKey))
	return EventContentSpoilerPopupExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *EventContentSpoilerPopupExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *EventContentSpoilerPopupExcelDto) UnmarshalMessage(e *EventContentSpoilerPopupExcel) error {
	t.ConditionScenarioModeId = fbsutils.Convert(e.ConditionScenarioModeId(), t.FlatBuffer.TableKey)
	t.IsWarningPopUp = e.IsWarningPopUp()
	t.SpoilerPopupDescription = fbsutils.Convert(string(e.SpoilerPopupDescription()), t.FlatBuffer.TableKey)
	t.SpoilerPopupTitle = fbsutils.Convert(string(e.SpoilerPopupTitle()), t.FlatBuffer.TableKey)
	t.EventContentId = fbsutils.Convert(e.EventContentId(), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *EventContentSpoilerPopupExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsEventContentSpoilerPopupExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (EventContentSpoilerPopupExcelDto) FlatDataName() string {
	return "EventContentSpoilerPopupExcel"
}
