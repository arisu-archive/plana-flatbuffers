// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package excel

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type ConquestCameraSettingExcel struct {
	_tab flatbuffers.Table
}

func GetRootAsConquestCameraSettingExcel(buf []byte, offset flatbuffers.UOffsetT) *ConquestCameraSettingExcel {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &ConquestCameraSettingExcel{}
	x.Init(buf, n+offset)
	return x
}

func GetSizePrefixedRootAsConquestCameraSettingExcel(buf []byte, offset flatbuffers.UOffsetT) *ConquestCameraSettingExcel {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &ConquestCameraSettingExcel{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func (rcv *ConquestCameraSettingExcel) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *ConquestCameraSettingExcel) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *ConquestCameraSettingExcel) CameraAngle() float32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.GetFloat32(o + rcv._tab.Pos)
	}
	return 0.0
}

func (rcv *ConquestCameraSettingExcel) MutateCameraAngle(n float32) bool {
	return rcv._tab.MutateFloat32Slot(4, n)
}

func (rcv *ConquestCameraSettingExcel) CameraZoomDefault() float32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.GetFloat32(o + rcv._tab.Pos)
	}
	return 0.0
}

func (rcv *ConquestCameraSettingExcel) MutateCameraZoomDefault(n float32) bool {
	return rcv._tab.MutateFloat32Slot(6, n)
}

func (rcv *ConquestCameraSettingExcel) CameraZoomMax() float32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.GetFloat32(o + rcv._tab.Pos)
	}
	return 0.0
}

func (rcv *ConquestCameraSettingExcel) MutateCameraZoomMax(n float32) bool {
	return rcv._tab.MutateFloat32Slot(8, n)
}

func (rcv *ConquestCameraSettingExcel) CameraZoomMin() float32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		return rcv._tab.GetFloat32(o + rcv._tab.Pos)
	}
	return 0.0
}

func (rcv *ConquestCameraSettingExcel) MutateCameraZoomMin(n float32) bool {
	return rcv._tab.MutateFloat32Slot(10, n)
}

func (rcv *ConquestCameraSettingExcel) ConquestMapBoundaryOffsetBottom() float32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(12))
	if o != 0 {
		return rcv._tab.GetFloat32(o + rcv._tab.Pos)
	}
	return 0.0
}

func (rcv *ConquestCameraSettingExcel) MutateConquestMapBoundaryOffsetBottom(n float32) bool {
	return rcv._tab.MutateFloat32Slot(12, n)
}

func (rcv *ConquestCameraSettingExcel) ConquestMapBoundaryOffsetLeft() float32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(14))
	if o != 0 {
		return rcv._tab.GetFloat32(o + rcv._tab.Pos)
	}
	return 0.0
}

func (rcv *ConquestCameraSettingExcel) MutateConquestMapBoundaryOffsetLeft(n float32) bool {
	return rcv._tab.MutateFloat32Slot(14, n)
}

func (rcv *ConquestCameraSettingExcel) ConquestMapBoundaryOffsetRight() float32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(16))
	if o != 0 {
		return rcv._tab.GetFloat32(o + rcv._tab.Pos)
	}
	return 0.0
}

func (rcv *ConquestCameraSettingExcel) MutateConquestMapBoundaryOffsetRight(n float32) bool {
	return rcv._tab.MutateFloat32Slot(16, n)
}

func (rcv *ConquestCameraSettingExcel) ConquestMapBoundaryOffsetTop() float32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(18))
	if o != 0 {
		return rcv._tab.GetFloat32(o + rcv._tab.Pos)
	}
	return 0.0
}

func (rcv *ConquestCameraSettingExcel) MutateConquestMapBoundaryOffsetTop(n float32) bool {
	return rcv._tab.MutateFloat32Slot(18, n)
}

func (rcv *ConquestCameraSettingExcel) ConquestMapCenterOffsetX() float32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(20))
	if o != 0 {
		return rcv._tab.GetFloat32(o + rcv._tab.Pos)
	}
	return 0.0
}

func (rcv *ConquestCameraSettingExcel) MutateConquestMapCenterOffsetX(n float32) bool {
	return rcv._tab.MutateFloat32Slot(20, n)
}

func (rcv *ConquestCameraSettingExcel) ConquestMapCenterOffsetY() float32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(22))
	if o != 0 {
		return rcv._tab.GetFloat32(o + rcv._tab.Pos)
	}
	return 0.0
}

func (rcv *ConquestCameraSettingExcel) MutateConquestMapCenterOffsetY(n float32) bool {
	return rcv._tab.MutateFloat32Slot(22, n)
}

func (rcv *ConquestCameraSettingExcel) Id() int64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(24))
	if o != 0 {
		return rcv._tab.GetInt64(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *ConquestCameraSettingExcel) MutateId(n int64) bool {
	return rcv._tab.MutateInt64Slot(24, n)
}

func ConquestCameraSettingExcelStart(builder *flatbuffers.Builder) {
	builder.StartObject(11)
}
func ConquestCameraSettingExcelAddCameraAngle(builder *flatbuffers.Builder, cameraAngle float32) {
	builder.PrependFloat32Slot(0, cameraAngle, 0.0)
}
func ConquestCameraSettingExcelAddCameraZoomDefault(builder *flatbuffers.Builder, cameraZoomDefault float32) {
	builder.PrependFloat32Slot(1, cameraZoomDefault, 0.0)
}
func ConquestCameraSettingExcelAddCameraZoomMax(builder *flatbuffers.Builder, cameraZoomMax float32) {
	builder.PrependFloat32Slot(2, cameraZoomMax, 0.0)
}
func ConquestCameraSettingExcelAddCameraZoomMin(builder *flatbuffers.Builder, cameraZoomMin float32) {
	builder.PrependFloat32Slot(3, cameraZoomMin, 0.0)
}
func ConquestCameraSettingExcelAddConquestMapBoundaryOffsetBottom(builder *flatbuffers.Builder, conquestMapBoundaryOffsetBottom float32) {
	builder.PrependFloat32Slot(4, conquestMapBoundaryOffsetBottom, 0.0)
}
func ConquestCameraSettingExcelAddConquestMapBoundaryOffsetLeft(builder *flatbuffers.Builder, conquestMapBoundaryOffsetLeft float32) {
	builder.PrependFloat32Slot(5, conquestMapBoundaryOffsetLeft, 0.0)
}
func ConquestCameraSettingExcelAddConquestMapBoundaryOffsetRight(builder *flatbuffers.Builder, conquestMapBoundaryOffsetRight float32) {
	builder.PrependFloat32Slot(6, conquestMapBoundaryOffsetRight, 0.0)
}
func ConquestCameraSettingExcelAddConquestMapBoundaryOffsetTop(builder *flatbuffers.Builder, conquestMapBoundaryOffsetTop float32) {
	builder.PrependFloat32Slot(7, conquestMapBoundaryOffsetTop, 0.0)
}
func ConquestCameraSettingExcelAddConquestMapCenterOffsetX(builder *flatbuffers.Builder, conquestMapCenterOffsetX float32) {
	builder.PrependFloat32Slot(8, conquestMapCenterOffsetX, 0.0)
}
func ConquestCameraSettingExcelAddConquestMapCenterOffsetY(builder *flatbuffers.Builder, conquestMapCenterOffsetY float32) {
	builder.PrependFloat32Slot(9, conquestMapCenterOffsetY, 0.0)
}
func ConquestCameraSettingExcelAddId(builder *flatbuffers.Builder, id int64) {
	builder.PrependInt64Slot(10, id, 0)
}
func ConquestCameraSettingExcelEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
