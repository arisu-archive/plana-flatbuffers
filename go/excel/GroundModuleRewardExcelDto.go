// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// GroundModuleRewardExcelDto represents a FlatBuffers table
type GroundModuleRewardExcelDto struct {
	fbsutils.FlatBuffer
	DropItemModelPrefabPath string     `json:"drop_item_model_prefab_path"`
	IsDisplayed             bool       `json:"is_displayed"`
	RewardParcelProbability int64      `json:"reward_parcel_probability"`
	RewardParcelAmount      int64      `json:"reward_parcel_amount"`
	RewardParcelId          int64      `json:"reward_parcel_id"`
	RewardParcelType        ParcelType `json:"reward_parcel_type"`
	GroupId                 uint32     `json:"group_id"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *GroundModuleRewardExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	GroundModuleRewardExcelStart(b)
	GroundModuleRewardExcelAddDropItemModelPrefabPath(b, b.CreateString(fbsutils.Convert(t.DropItemModelPrefabPath, t.FlatBuffer.TableKey)))
	GroundModuleRewardExcelAddIsDisplayed(b, t.IsDisplayed)
	GroundModuleRewardExcelAddRewardParcelProbability(b, fbsutils.Convert(t.RewardParcelProbability, t.FlatBuffer.TableKey))
	GroundModuleRewardExcelAddRewardParcelAmount(b, fbsutils.Convert(t.RewardParcelAmount, t.FlatBuffer.TableKey))
	GroundModuleRewardExcelAddRewardParcelId(b, fbsutils.Convert(t.RewardParcelId, t.FlatBuffer.TableKey))
	GroundModuleRewardExcelAddRewardParcelType(b, fbsutils.Convert(t.RewardParcelType, t.FlatBuffer.TableKey))
	GroundModuleRewardExcelAddGroupId(b, fbsutils.Convert(t.GroupId, t.FlatBuffer.TableKey))
	return GroundModuleRewardExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *GroundModuleRewardExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *GroundModuleRewardExcelDto) UnmarshalMessage(e *GroundModuleRewardExcel) error {
	t.DropItemModelPrefabPath = fbsutils.Convert(string(e.DropItemModelPrefabPath()), t.FlatBuffer.TableKey)
	t.IsDisplayed = e.IsDisplayed()
	t.RewardParcelProbability = fbsutils.Convert(e.RewardParcelProbability(), t.FlatBuffer.TableKey)
	t.RewardParcelAmount = fbsutils.Convert(e.RewardParcelAmount(), t.FlatBuffer.TableKey)
	t.RewardParcelId = fbsutils.Convert(e.RewardParcelId(), t.FlatBuffer.TableKey)
	t.RewardParcelType = ParcelType(fbsutils.Convert(int32(e.RewardParcelType()), t.FlatBuffer.TableKey))
	t.GroupId = fbsutils.Convert(e.GroupId(), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *GroundModuleRewardExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsGroundModuleRewardExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (GroundModuleRewardExcelDto) FlatDataName() string {
	return "GroundModuleRewardExcel"
}
