// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// ContentSpoilerPopupExcelDto represents a FlatBuffers table
type ContentSpoilerPopupExcelDto struct {
	fbsutils.FlatBuffer
	ContentType             ContentType `json:"content_type"`
	SpoilerPopupTitle       string      `json:"spoiler_popup_title"`
	SpoilerPopupDescription string      `json:"spoiler_popup_description"`
	IsWarningPopUp          bool        `json:"is_warning_pop_up"`
	ConditionScenarioModeId int64       `json:"condition_scenario_mode_id"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *ContentSpoilerPopupExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	__offset_spoiler_popup_title := b.CreateString(fbsutils.Convert(t.SpoilerPopupTitle, t.FlatBuffer.TableKey))
	__offset_spoiler_popup_description := b.CreateString(fbsutils.Convert(t.SpoilerPopupDescription, t.FlatBuffer.TableKey))
	ContentSpoilerPopupExcelStart(b)
	ContentSpoilerPopupExcelAddContentType(b, fbsutils.Convert(t.ContentType, t.FlatBuffer.TableKey))
	ContentSpoilerPopupExcelAddSpoilerPopupTitle(b, __offset_spoiler_popup_title)
	ContentSpoilerPopupExcelAddSpoilerPopupDescription(b, __offset_spoiler_popup_description)
	ContentSpoilerPopupExcelAddIsWarningPopUp(b, t.IsWarningPopUp)
	ContentSpoilerPopupExcelAddConditionScenarioModeId(b, fbsutils.Convert(t.ConditionScenarioModeId, t.FlatBuffer.TableKey))
	return ContentSpoilerPopupExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *ContentSpoilerPopupExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *ContentSpoilerPopupExcelDto) UnmarshalMessage(e *ContentSpoilerPopupExcel) error {
	t.ContentType = ContentType(fbsutils.Convert(int32(e.ContentType()), t.FlatBuffer.TableKey))
	t.SpoilerPopupTitle = fbsutils.Convert(string(e.SpoilerPopupTitle()), t.FlatBuffer.TableKey)
	t.SpoilerPopupDescription = fbsutils.Convert(string(e.SpoilerPopupDescription()), t.FlatBuffer.TableKey)
	t.IsWarningPopUp = e.IsWarningPopUp()
	t.ConditionScenarioModeId = fbsutils.Convert(e.ConditionScenarioModeId(), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *ContentSpoilerPopupExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsContentSpoilerPopupExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (ContentSpoilerPopupExcelDto) FlatDataName() string {
	return "ContentSpoilerPopupExcel"
}
