// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// FurnitureExcelDto represents a FlatBuffers table
type FurnitureExcelDto struct {
	fbsutils.FlatBuffer
	Id                         int64                 `json:"id"`
	ProductionStep             ProductionStep        `json:"production_step"`
	Rarity                     Rarity                `json:"rarity"`
	Category                   FurnitureCategory     `json:"category"`
	SubCategory                FurnitureSubCategory  `json:"sub_category"`
	CheckFloorDecoration       bool                  `json:"check_floor_decoration"`
	LocalizeEtcId              uint32                `json:"localize_etc_id"`
	StarGradeInit              int32                 `json:"star_grade_init"`
	Tier                       int64                 `json:"tier"`
	Icon                       string                `json:"icon"`
	SizeWidth                  int32                 `json:"size_width"`
	SizeHeight                 int32                 `json:"size_height"`
	OtherSize                  int32                 `json:"other_size"`
	ExpandWidth                int32                 `json:"expand_width"`
	Enable                     bool                  `json:"enable"`
	ReverseRotation            bool                  `json:"reverse_rotation"`
	Prefab                     string                `json:"prefab"`
	PrefabExpand               string                `json:"prefab_expand"`
	SubPrefab                  string                `json:"sub_prefab"`
	SubExpandPrefab            string                `json:"sub_expand_prefab"`
	CornerPrefab               string                `json:"corner_prefab"`
	StackableMax               int64                 `json:"stackable_max"`
	RecipeCraftId              int64                 `json:"recipe_craft_id"`
	SetGroudpId                int64                 `json:"set_groudp_id"`
	ComfortBonus               int64                 `json:"comfort_bonus"`
	VisitOperationType         int64                 `json:"visit_operation_type"`
	VisitBonusOperationType    int64                 `json:"visit_bonus_operation_type"`
	Tags                       []Tag                 `json:"tags"`
	CraftQualityTier0          int64                 `json:"craft_quality_tier0"`
	CraftQualityTier1          int64                 `json:"craft_quality_tier1"`
	CraftQualityTier2          int64                 `json:"craft_quality_tier2"`
	ShiftingCraftQuality       int64                 `json:"shifting_craft_quality"`
	FurnitureFunctionType      FurnitureFunctionType `json:"furniture_function_type"`
	FurnitureFunctionParameter []int64               `json:"furniture_function_parameter"`
	VideoId                    int64                 `json:"video_id"`
	EventCollectionId          int64                 `json:"event_collection_id"`
	FurnitureBubbleOffsetX     int64                 `json:"furniture_bubble_offset_x"`
	FurnitureBubbleOffsetY     int64                 `json:"furniture_bubble_offset_y"`
	CafeCharacterStateReq      []string              `json:"cafe_character_state_req"`
	CafeCharacterStateAdd      []string              `json:"cafe_character_state_add"`
	CafeCharacterStateMake     []string              `json:"cafe_character_state_make"`
	CafeCharacterStateOnly     []string              `json:"cafe_character_state_only"`
	HideCraftShortcut          bool                  `json:"hide_craft_shortcut"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *FurnitureExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	__offset_icon := b.CreateString(fbsutils.Convert(t.Icon, t.FlatBuffer.TableKey))
	__offset_prefab := b.CreateString(fbsutils.Convert(t.Prefab, t.FlatBuffer.TableKey))
	__offset_prefab_expand := b.CreateString(fbsutils.Convert(t.PrefabExpand, t.FlatBuffer.TableKey))
	__offset_sub_prefab := b.CreateString(fbsutils.Convert(t.SubPrefab, t.FlatBuffer.TableKey))
	__offset_sub_expand_prefab := b.CreateString(fbsutils.Convert(t.SubExpandPrefab, t.FlatBuffer.TableKey))
	__offset_corner_prefab := b.CreateString(fbsutils.Convert(t.CornerPrefab, t.FlatBuffer.TableKey))
	var __offset_cafe_character_state_req flatbuffers.UOffsetT
	__stringOffsets_cafe_character_state_req := make([]flatbuffers.UOffsetT, len(t.CafeCharacterStateReq))
	for i := range len(t.CafeCharacterStateReq) {
		__stringOffsets_cafe_character_state_req[i] = b.CreateString(fbsutils.Convert(t.CafeCharacterStateReq[i], t.FlatBuffer.TableKey))
	}
	FurnitureExcelStartCafeCharacterStateReqVector(b, len(t.CafeCharacterStateReq))
	for i := range len(t.CafeCharacterStateReq) {
		b.PrependUOffsetT(__stringOffsets_cafe_character_state_req[len(t.CafeCharacterStateReq)-i-1])
	}
	__offset_cafe_character_state_req = b.EndVector(len(t.CafeCharacterStateReq))
	var __offset_cafe_character_state_add flatbuffers.UOffsetT
	__stringOffsets_cafe_character_state_add := make([]flatbuffers.UOffsetT, len(t.CafeCharacterStateAdd))
	for i := range len(t.CafeCharacterStateAdd) {
		__stringOffsets_cafe_character_state_add[i] = b.CreateString(fbsutils.Convert(t.CafeCharacterStateAdd[i], t.FlatBuffer.TableKey))
	}
	FurnitureExcelStartCafeCharacterStateAddVector(b, len(t.CafeCharacterStateAdd))
	for i := range len(t.CafeCharacterStateAdd) {
		b.PrependUOffsetT(__stringOffsets_cafe_character_state_add[len(t.CafeCharacterStateAdd)-i-1])
	}
	__offset_cafe_character_state_add = b.EndVector(len(t.CafeCharacterStateAdd))
	var __offset_cafe_character_state_make flatbuffers.UOffsetT
	__stringOffsets_cafe_character_state_make := make([]flatbuffers.UOffsetT, len(t.CafeCharacterStateMake))
	for i := range len(t.CafeCharacterStateMake) {
		__stringOffsets_cafe_character_state_make[i] = b.CreateString(fbsutils.Convert(t.CafeCharacterStateMake[i], t.FlatBuffer.TableKey))
	}
	FurnitureExcelStartCafeCharacterStateMakeVector(b, len(t.CafeCharacterStateMake))
	for i := range len(t.CafeCharacterStateMake) {
		b.PrependUOffsetT(__stringOffsets_cafe_character_state_make[len(t.CafeCharacterStateMake)-i-1])
	}
	__offset_cafe_character_state_make = b.EndVector(len(t.CafeCharacterStateMake))
	var __offset_cafe_character_state_only flatbuffers.UOffsetT
	__stringOffsets_cafe_character_state_only := make([]flatbuffers.UOffsetT, len(t.CafeCharacterStateOnly))
	for i := range len(t.CafeCharacterStateOnly) {
		__stringOffsets_cafe_character_state_only[i] = b.CreateString(fbsutils.Convert(t.CafeCharacterStateOnly[i], t.FlatBuffer.TableKey))
	}
	FurnitureExcelStartCafeCharacterStateOnlyVector(b, len(t.CafeCharacterStateOnly))
	for i := range len(t.CafeCharacterStateOnly) {
		b.PrependUOffsetT(__stringOffsets_cafe_character_state_only[len(t.CafeCharacterStateOnly)-i-1])
	}
	__offset_cafe_character_state_only = b.EndVector(len(t.CafeCharacterStateOnly))
	FurnitureExcelStart(b)
	FurnitureExcelAddId(b, fbsutils.Convert(t.Id, t.FlatBuffer.TableKey))
	FurnitureExcelAddProductionStep(b, fbsutils.Convert(t.ProductionStep, t.FlatBuffer.TableKey))
	FurnitureExcelAddRarity(b, fbsutils.Convert(t.Rarity, t.FlatBuffer.TableKey))
	FurnitureExcelAddCategory(b, fbsutils.Convert(t.Category, t.FlatBuffer.TableKey))
	FurnitureExcelAddSubCategory(b, fbsutils.Convert(t.SubCategory, t.FlatBuffer.TableKey))
	FurnitureExcelAddCheckFloorDecoration(b, t.CheckFloorDecoration)
	FurnitureExcelAddLocalizeEtcId(b, fbsutils.Convert(t.LocalizeEtcId, t.FlatBuffer.TableKey))
	FurnitureExcelAddStarGradeInit(b, fbsutils.Convert(t.StarGradeInit, t.FlatBuffer.TableKey))
	FurnitureExcelAddTier(b, fbsutils.Convert(t.Tier, t.FlatBuffer.TableKey))
	FurnitureExcelAddIcon(b, __offset_icon)
	FurnitureExcelAddSizeWidth(b, fbsutils.Convert(t.SizeWidth, t.FlatBuffer.TableKey))
	FurnitureExcelAddSizeHeight(b, fbsutils.Convert(t.SizeHeight, t.FlatBuffer.TableKey))
	FurnitureExcelAddOtherSize(b, fbsutils.Convert(t.OtherSize, t.FlatBuffer.TableKey))
	FurnitureExcelAddExpandWidth(b, fbsutils.Convert(t.ExpandWidth, t.FlatBuffer.TableKey))
	FurnitureExcelAddEnable(b, t.Enable)
	FurnitureExcelAddReverseRotation(b, t.ReverseRotation)
	FurnitureExcelAddPrefab(b, __offset_prefab)
	FurnitureExcelAddPrefabExpand(b, __offset_prefab_expand)
	FurnitureExcelAddSubPrefab(b, __offset_sub_prefab)
	FurnitureExcelAddSubExpandPrefab(b, __offset_sub_expand_prefab)
	FurnitureExcelAddCornerPrefab(b, __offset_corner_prefab)
	FurnitureExcelAddStackableMax(b, fbsutils.Convert(t.StackableMax, t.FlatBuffer.TableKey))
	FurnitureExcelAddRecipeCraftId(b, fbsutils.Convert(t.RecipeCraftId, t.FlatBuffer.TableKey))
	FurnitureExcelAddSetGroudpId(b, fbsutils.Convert(t.SetGroudpId, t.FlatBuffer.TableKey))
	FurnitureExcelAddComfortBonus(b, fbsutils.Convert(t.ComfortBonus, t.FlatBuffer.TableKey))
	FurnitureExcelAddVisitOperationType(b, fbsutils.Convert(t.VisitOperationType, t.FlatBuffer.TableKey))
	FurnitureExcelAddVisitBonusOperationType(b, fbsutils.Convert(t.VisitBonusOperationType, t.FlatBuffer.TableKey))
	FurnitureExcelStartTagsVector(b, len(t.Tags))
	for i := range len(t.Tags) {
		b.PrependInt32(fbsutils.Convert(int32(t.Tags[len(t.Tags)-i-1]), t.FlatBuffer.TableKey))
	}
	FurnitureExcelAddTags(b, b.EndVector(len(t.Tags)))
	FurnitureExcelAddCraftQualityTier0(b, fbsutils.Convert(t.CraftQualityTier0, t.FlatBuffer.TableKey))
	FurnitureExcelAddCraftQualityTier1(b, fbsutils.Convert(t.CraftQualityTier1, t.FlatBuffer.TableKey))
	FurnitureExcelAddCraftQualityTier2(b, fbsutils.Convert(t.CraftQualityTier2, t.FlatBuffer.TableKey))
	FurnitureExcelAddShiftingCraftQuality(b, fbsutils.Convert(t.ShiftingCraftQuality, t.FlatBuffer.TableKey))
	FurnitureExcelAddFurnitureFunctionType(b, fbsutils.Convert(t.FurnitureFunctionType, t.FlatBuffer.TableKey))
	FurnitureExcelStartFurnitureFunctionParameterVector(b, len(t.FurnitureFunctionParameter))
	for i := range len(t.FurnitureFunctionParameter) {
		b.PrependInt64(fbsutils.Convert(t.FurnitureFunctionParameter[len(t.FurnitureFunctionParameter)-i-1], t.FlatBuffer.TableKey))
	}
	FurnitureExcelAddFurnitureFunctionParameter(b, b.EndVector(len(t.FurnitureFunctionParameter)))
	FurnitureExcelAddVideoId(b, fbsutils.Convert(t.VideoId, t.FlatBuffer.TableKey))
	FurnitureExcelAddEventCollectionId(b, fbsutils.Convert(t.EventCollectionId, t.FlatBuffer.TableKey))
	FurnitureExcelAddFurnitureBubbleOffsetX(b, fbsutils.Convert(t.FurnitureBubbleOffsetX, t.FlatBuffer.TableKey))
	FurnitureExcelAddFurnitureBubbleOffsetY(b, fbsutils.Convert(t.FurnitureBubbleOffsetY, t.FlatBuffer.TableKey))
	FurnitureExcelAddCafeCharacterStateReq(b, __offset_cafe_character_state_req)
	FurnitureExcelAddCafeCharacterStateAdd(b, __offset_cafe_character_state_add)
	FurnitureExcelAddCafeCharacterStateMake(b, __offset_cafe_character_state_make)
	FurnitureExcelAddCafeCharacterStateOnly(b, __offset_cafe_character_state_only)
	FurnitureExcelAddHideCraftShortcut(b, t.HideCraftShortcut)
	return FurnitureExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *FurnitureExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *FurnitureExcelDto) UnmarshalMessage(e *FurnitureExcel) error {
	t.Id = fbsutils.Convert(e.Id(), t.FlatBuffer.TableKey)
	t.ProductionStep = ProductionStep(fbsutils.Convert(int32(e.ProductionStep()), t.FlatBuffer.TableKey))
	t.Rarity = Rarity(fbsutils.Convert(int32(e.Rarity()), t.FlatBuffer.TableKey))
	t.Category = FurnitureCategory(fbsutils.Convert(int32(e.Category()), t.FlatBuffer.TableKey))
	t.SubCategory = FurnitureSubCategory(fbsutils.Convert(int32(e.SubCategory()), t.FlatBuffer.TableKey))
	t.CheckFloorDecoration = e.CheckFloorDecoration()
	t.LocalizeEtcId = fbsutils.Convert(e.LocalizeEtcId(), t.FlatBuffer.TableKey)
	t.StarGradeInit = fbsutils.Convert(e.StarGradeInit(), t.FlatBuffer.TableKey)
	t.Tier = fbsutils.Convert(e.Tier(), t.FlatBuffer.TableKey)
	t.Icon = fbsutils.Convert(string(e.Icon()), t.FlatBuffer.TableKey)
	t.SizeWidth = fbsutils.Convert(e.SizeWidth(), t.FlatBuffer.TableKey)
	t.SizeHeight = fbsutils.Convert(e.SizeHeight(), t.FlatBuffer.TableKey)
	t.OtherSize = fbsutils.Convert(e.OtherSize(), t.FlatBuffer.TableKey)
	t.ExpandWidth = fbsutils.Convert(e.ExpandWidth(), t.FlatBuffer.TableKey)
	t.Enable = e.Enable()
	t.ReverseRotation = e.ReverseRotation()
	t.Prefab = fbsutils.Convert(string(e.Prefab()), t.FlatBuffer.TableKey)
	t.PrefabExpand = fbsutils.Convert(string(e.PrefabExpand()), t.FlatBuffer.TableKey)
	t.SubPrefab = fbsutils.Convert(string(e.SubPrefab()), t.FlatBuffer.TableKey)
	t.SubExpandPrefab = fbsutils.Convert(string(e.SubExpandPrefab()), t.FlatBuffer.TableKey)
	t.CornerPrefab = fbsutils.Convert(string(e.CornerPrefab()), t.FlatBuffer.TableKey)
	t.StackableMax = fbsutils.Convert(e.StackableMax(), t.FlatBuffer.TableKey)
	t.RecipeCraftId = fbsutils.Convert(e.RecipeCraftId(), t.FlatBuffer.TableKey)
	t.SetGroudpId = fbsutils.Convert(e.SetGroudpId(), t.FlatBuffer.TableKey)
	t.ComfortBonus = fbsutils.Convert(e.ComfortBonus(), t.FlatBuffer.TableKey)
	t.VisitOperationType = fbsutils.Convert(e.VisitOperationType(), t.FlatBuffer.TableKey)
	t.VisitBonusOperationType = fbsutils.Convert(e.VisitBonusOperationType(), t.FlatBuffer.TableKey)
	t.Tags = make([]Tag, e.TagsLength())
	for i := range e.TagsLength() {
		t.Tags[i] = Tag(fbsutils.Convert(int32(e.Tags(i)), t.FlatBuffer.TableKey))
	}
	t.CraftQualityTier0 = fbsutils.Convert(e.CraftQualityTier0(), t.FlatBuffer.TableKey)
	t.CraftQualityTier1 = fbsutils.Convert(e.CraftQualityTier1(), t.FlatBuffer.TableKey)
	t.CraftQualityTier2 = fbsutils.Convert(e.CraftQualityTier2(), t.FlatBuffer.TableKey)
	t.ShiftingCraftQuality = fbsutils.Convert(e.ShiftingCraftQuality(), t.FlatBuffer.TableKey)
	t.FurnitureFunctionType = FurnitureFunctionType(fbsutils.Convert(int32(e.FurnitureFunctionType()), t.FlatBuffer.TableKey))
	t.FurnitureFunctionParameter = make([]int64, e.FurnitureFunctionParameterLength())
	for i := range e.FurnitureFunctionParameterLength() {
		t.FurnitureFunctionParameter[i] = fbsutils.Convert(e.FurnitureFunctionParameter(i), t.FlatBuffer.TableKey)
	}
	t.VideoId = fbsutils.Convert(e.VideoId(), t.FlatBuffer.TableKey)
	t.EventCollectionId = fbsutils.Convert(e.EventCollectionId(), t.FlatBuffer.TableKey)
	t.FurnitureBubbleOffsetX = fbsutils.Convert(e.FurnitureBubbleOffsetX(), t.FlatBuffer.TableKey)
	t.FurnitureBubbleOffsetY = fbsutils.Convert(e.FurnitureBubbleOffsetY(), t.FlatBuffer.TableKey)
	t.CafeCharacterStateReq = make([]string, e.CafeCharacterStateReqLength())
	for i := range e.CafeCharacterStateReqLength() {
		t.CafeCharacterStateReq[i] = fbsutils.Convert(string(e.CafeCharacterStateReq(i)), t.FlatBuffer.TableKey)
	}
	t.CafeCharacterStateAdd = make([]string, e.CafeCharacterStateAddLength())
	for i := range e.CafeCharacterStateAddLength() {
		t.CafeCharacterStateAdd[i] = fbsutils.Convert(string(e.CafeCharacterStateAdd(i)), t.FlatBuffer.TableKey)
	}
	t.CafeCharacterStateMake = make([]string, e.CafeCharacterStateMakeLength())
	for i := range e.CafeCharacterStateMakeLength() {
		t.CafeCharacterStateMake[i] = fbsutils.Convert(string(e.CafeCharacterStateMake(i)), t.FlatBuffer.TableKey)
	}
	t.CafeCharacterStateOnly = make([]string, e.CafeCharacterStateOnlyLength())
	for i := range e.CafeCharacterStateOnlyLength() {
		t.CafeCharacterStateOnly[i] = fbsutils.Convert(string(e.CafeCharacterStateOnly(i)), t.FlatBuffer.TableKey)
	}
	t.HideCraftShortcut = e.HideCraftShortcut()
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *FurnitureExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsFurnitureExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (FurnitureExcelDto) FlatDataName() string {
	return "FurnitureExcel"
}
