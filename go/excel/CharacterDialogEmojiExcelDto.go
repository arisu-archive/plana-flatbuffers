// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// CharacterDialogEmojiExcelDto represents a FlatBuffers table
type CharacterDialogEmojiExcelDto struct {
	fbsutils.FlatBuffer
	LocalizeJp  string `json:"localize_jp"`
	LocalizeKr  string `json:"localize_kr"`
	HideUi      bool   `json:"hide_ui"`
	Duration    int64  `json:"duration"`
	DialogType  string `json:"dialog_type"`
	TargetIndex int32  `json:"target_index"`
	GroupId     int64  `json:"group_id"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *CharacterDialogEmojiExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	CharacterDialogEmojiExcelStart(b)
	CharacterDialogEmojiExcelAddLocalizeJp(b, b.CreateString(fbsutils.Convert(t.LocalizeJp, t.FlatBuffer.TableKey)))
	CharacterDialogEmojiExcelAddLocalizeKr(b, b.CreateString(fbsutils.Convert(t.LocalizeKr, t.FlatBuffer.TableKey)))
	CharacterDialogEmojiExcelAddHideUi(b, t.HideUi)
	CharacterDialogEmojiExcelAddDuration(b, fbsutils.Convert(t.Duration, t.FlatBuffer.TableKey))
	CharacterDialogEmojiExcelAddDialogType(b, b.CreateString(fbsutils.Convert(t.DialogType, t.FlatBuffer.TableKey)))
	CharacterDialogEmojiExcelAddTargetIndex(b, fbsutils.Convert(t.TargetIndex, t.FlatBuffer.TableKey))
	CharacterDialogEmojiExcelAddGroupId(b, fbsutils.Convert(t.GroupId, t.FlatBuffer.TableKey))
	return CharacterDialogEmojiExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *CharacterDialogEmojiExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *CharacterDialogEmojiExcelDto) UnmarshalMessage(e *CharacterDialogEmojiExcel) error {
	t.LocalizeJp = fbsutils.Convert(string(e.LocalizeJp()), t.FlatBuffer.TableKey)
	t.LocalizeKr = fbsutils.Convert(string(e.LocalizeKr()), t.FlatBuffer.TableKey)
	t.HideUi = e.HideUi()
	t.Duration = fbsutils.Convert(e.Duration(), t.FlatBuffer.TableKey)
	t.DialogType = fbsutils.Convert(string(e.DialogType()), t.FlatBuffer.TableKey)
	t.TargetIndex = fbsutils.Convert(e.TargetIndex(), t.FlatBuffer.TableKey)
	t.GroupId = fbsutils.Convert(e.GroupId(), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *CharacterDialogEmojiExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsCharacterDialogEmojiExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (CharacterDialogEmojiExcelDto) FlatDataName() string {
	return "CharacterDialogEmojiExcel"
}
