// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// ShortcutTypeExcelDto represents a FlatBuffers table
type ShortcutTypeExcelDto struct {
	fbsutils.FlatBuffer
	ContentType []ShortcutContentType `json:"content_type"`
	Id          int64                 `json:"id"`
	IsAscending bool                  `json:"is_ascending"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *ShortcutTypeExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	ShortcutTypeExcelStart(b)
	ShortcutTypeExcelStartContentTypeVector(b, len(t.ContentType))
	for i := range len(t.ContentType) {
		b.PrependInt32(fbsutils.Convert(int32(t.ContentType[len(t.ContentType)-i-1]), t.FlatBuffer.TableKey))
	}
	ShortcutTypeExcelAddContentType(b, b.EndVector(len(t.ContentType)))
	ShortcutTypeExcelAddId(b, fbsutils.Convert(t.Id, t.FlatBuffer.TableKey))
	ShortcutTypeExcelAddIsAscending(b, t.IsAscending)
	return ShortcutTypeExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *ShortcutTypeExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *ShortcutTypeExcelDto) UnmarshalMessage(e *ShortcutTypeExcel) error {
	t.ContentType = make([]ShortcutContentType, e.ContentTypeLength())
	for i := range e.ContentTypeLength() {
		t.ContentType[i] = ShortcutContentType(fbsutils.Convert(int32(e.ContentType(i)), t.FlatBuffer.TableKey))
	}
	t.Id = fbsutils.Convert(e.Id(), t.FlatBuffer.TableKey)
	t.IsAscending = e.IsAscending()
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *ShortcutTypeExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsShortcutTypeExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (ShortcutTypeExcelDto) FlatDataName() string {
	return "ShortcutTypeExcel"
}
