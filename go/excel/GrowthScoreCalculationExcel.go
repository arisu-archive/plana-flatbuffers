// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package excel

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type GrowthScoreCalculationExcel struct {
	_tab flatbuffers.Table
}

func GetRootAsGrowthScoreCalculationExcel(buf []byte, offset flatbuffers.UOffsetT) *GrowthScoreCalculationExcel {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &GrowthScoreCalculationExcel{}
	x.Init(buf, n+offset)
	return x
}

func GetSizePrefixedRootAsGrowthScoreCalculationExcel(buf []byte, offset flatbuffers.UOffsetT) *GrowthScoreCalculationExcel {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &GrowthScoreCalculationExcel{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func (rcv *GrowthScoreCalculationExcel) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *GrowthScoreCalculationExcel) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *GrowthScoreCalculationExcel) ConversionCoefficient() int64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.GetInt64(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *GrowthScoreCalculationExcel) MutateConversionCoefficient(n int64) bool {
	return rcv._tab.MutateInt64Slot(4, n)
}

func (rcv *GrowthScoreCalculationExcel) IncludeGrowthFactor() GrowthFactor {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return GrowthFactor(rcv._tab.GetInt32(o + rcv._tab.Pos))
	}
	return 0
}

func (rcv *GrowthScoreCalculationExcel) MutateIncludeGrowthFactor(n GrowthFactor) bool {
	return rcv._tab.MutateInt32Slot(6, int32(n))
}

func (rcv *GrowthScoreCalculationExcel) Id() int64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.GetInt64(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *GrowthScoreCalculationExcel) MutateId(n int64) bool {
	return rcv._tab.MutateInt64Slot(8, n)
}

func GrowthScoreCalculationExcelStart(builder *flatbuffers.Builder) {
	builder.StartObject(3)
}
func GrowthScoreCalculationExcelAddConversionCoefficient(builder *flatbuffers.Builder, conversionCoefficient int64) {
	builder.PrependInt64Slot(0, conversionCoefficient, 0)
}
func GrowthScoreCalculationExcelAddIncludeGrowthFactor(builder *flatbuffers.Builder, includeGrowthFactor GrowthFactor) {
	builder.PrependInt32Slot(1, int32(includeGrowthFactor), 0)
}
func GrowthScoreCalculationExcelAddId(builder *flatbuffers.Builder, id int64) {
	builder.PrependInt64Slot(2, id, 0)
}
func GrowthScoreCalculationExcelEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
