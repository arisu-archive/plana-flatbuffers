// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// EliminateRaidStageRewardExcelDto represents a FlatBuffers table
type EliminateRaidStageRewardExcelDto struct {
	fbsutils.FlatBuffer
	ClearStageRewardAmount         int64      `json:"clear_stage_reward_amount"`
	ClearStageRewardParcelUniqueId int64      `json:"clear_stage_reward_parcel_unique_id"`
	ClearStageRewardParcelType     ParcelType `json:"clear_stage_reward_parcel_type"`
	ClearStageRewardProb           int64      `json:"clear_stage_reward_prob"`
	IsClearStageRewardHideInfo     bool       `json:"is_clear_stage_reward_hide_info"`
	GroupId                        int64      `json:"group_id"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *EliminateRaidStageRewardExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	EliminateRaidStageRewardExcelStart(b)
	EliminateRaidStageRewardExcelAddClearStageRewardAmount(b, fbsutils.Convert(t.ClearStageRewardAmount, t.FlatBuffer.TableKey))
	EliminateRaidStageRewardExcelAddClearStageRewardParcelUniqueId(b, fbsutils.Convert(t.ClearStageRewardParcelUniqueId, t.FlatBuffer.TableKey))
	EliminateRaidStageRewardExcelAddClearStageRewardParcelType(b, fbsutils.Convert(t.ClearStageRewardParcelType, t.FlatBuffer.TableKey))
	EliminateRaidStageRewardExcelAddClearStageRewardProb(b, fbsutils.Convert(t.ClearStageRewardProb, t.FlatBuffer.TableKey))
	EliminateRaidStageRewardExcelAddIsClearStageRewardHideInfo(b, t.IsClearStageRewardHideInfo)
	EliminateRaidStageRewardExcelAddGroupId(b, fbsutils.Convert(t.GroupId, t.FlatBuffer.TableKey))
	return EliminateRaidStageRewardExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *EliminateRaidStageRewardExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *EliminateRaidStageRewardExcelDto) UnmarshalMessage(e *EliminateRaidStageRewardExcel) error {
	t.ClearStageRewardAmount = fbsutils.Convert(e.ClearStageRewardAmount(), t.FlatBuffer.TableKey)
	t.ClearStageRewardParcelUniqueId = fbsutils.Convert(e.ClearStageRewardParcelUniqueId(), t.FlatBuffer.TableKey)
	t.ClearStageRewardParcelType = ParcelType(fbsutils.Convert(int32(e.ClearStageRewardParcelType()), t.FlatBuffer.TableKey))
	t.ClearStageRewardProb = fbsutils.Convert(e.ClearStageRewardProb(), t.FlatBuffer.TableKey)
	t.IsClearStageRewardHideInfo = e.IsClearStageRewardHideInfo()
	t.GroupId = fbsutils.Convert(e.GroupId(), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *EliminateRaidStageRewardExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsEliminateRaidStageRewardExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (EliminateRaidStageRewardExcelDto) FlatDataName() string {
	return "EliminateRaidStageRewardExcel"
}
