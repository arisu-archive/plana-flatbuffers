// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// EventContentPlayGuideExcelDto represents a FlatBuffers table
type EventContentPlayGuideExcelDto struct {
	fbsutils.FlatBuffer
	Id             int64  `json:"id"`
	EventContentId int64  `json:"event_content_id"`
	DisplayOrder   int32  `json:"display_order"`
	GuideTitle     string `json:"guide_title"`
	GuideImagePath string `json:"guide_image_path"`
	GuideText      string `json:"guide_text"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *EventContentPlayGuideExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	__offset_guide_title := b.CreateString(fbsutils.Convert(t.GuideTitle, t.FlatBuffer.TableKey))
	__offset_guide_image_path := b.CreateString(fbsutils.Convert(t.GuideImagePath, t.FlatBuffer.TableKey))
	__offset_guide_text := b.CreateString(fbsutils.Convert(t.GuideText, t.FlatBuffer.TableKey))
	EventContentPlayGuideExcelStart(b)
	EventContentPlayGuideExcelAddId(b, fbsutils.Convert(t.Id, t.FlatBuffer.TableKey))
	EventContentPlayGuideExcelAddEventContentId(b, fbsutils.Convert(t.EventContentId, t.FlatBuffer.TableKey))
	EventContentPlayGuideExcelAddDisplayOrder(b, fbsutils.Convert(t.DisplayOrder, t.FlatBuffer.TableKey))
	EventContentPlayGuideExcelAddGuideTitle(b, __offset_guide_title)
	EventContentPlayGuideExcelAddGuideImagePath(b, __offset_guide_image_path)
	EventContentPlayGuideExcelAddGuideText(b, __offset_guide_text)
	return EventContentPlayGuideExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *EventContentPlayGuideExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *EventContentPlayGuideExcelDto) UnmarshalMessage(e *EventContentPlayGuideExcel) error {
	t.Id = fbsutils.Convert(e.Id(), t.FlatBuffer.TableKey)
	t.EventContentId = fbsutils.Convert(e.EventContentId(), t.FlatBuffer.TableKey)
	t.DisplayOrder = fbsutils.Convert(e.DisplayOrder(), t.FlatBuffer.TableKey)
	t.GuideTitle = fbsutils.Convert(string(e.GuideTitle()), t.FlatBuffer.TableKey)
	t.GuideImagePath = fbsutils.Convert(string(e.GuideImagePath()), t.FlatBuffer.TableKey)
	t.GuideText = fbsutils.Convert(string(e.GuideText()), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *EventContentPlayGuideExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsEventContentPlayGuideExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (EventContentPlayGuideExcelDto) FlatDataName() string {
	return "EventContentPlayGuideExcel"
}
