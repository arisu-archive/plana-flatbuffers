// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// PresetParcelsExcelDto represents a FlatBuffers table
type PresetParcelsExcelDto struct {
	fbsutils.FlatBuffer
	ParcelAmount  int64      `json:"parcel_amount"`
	PresetGroupId int64      `json:"preset_group_id"`
	ParcelId      int64      `json:"parcel_id"`
	ParcelType    ParcelType `json:"parcel_type"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *PresetParcelsExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	PresetParcelsExcelStart(b)
	PresetParcelsExcelAddParcelAmount(b, fbsutils.Convert(t.ParcelAmount, t.FlatBuffer.TableKey))
	PresetParcelsExcelAddPresetGroupId(b, fbsutils.Convert(t.PresetGroupId, t.FlatBuffer.TableKey))
	PresetParcelsExcelAddParcelId(b, fbsutils.Convert(t.ParcelId, t.FlatBuffer.TableKey))
	PresetParcelsExcelAddParcelType(b, fbsutils.Convert(t.ParcelType, t.FlatBuffer.TableKey))
	return PresetParcelsExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *PresetParcelsExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *PresetParcelsExcelDto) UnmarshalMessage(e *PresetParcelsExcel) error {
	t.ParcelAmount = fbsutils.Convert(e.ParcelAmount(), t.FlatBuffer.TableKey)
	t.PresetGroupId = fbsutils.Convert(e.PresetGroupId(), t.FlatBuffer.TableKey)
	t.ParcelId = fbsutils.Convert(e.ParcelId(), t.FlatBuffer.TableKey)
	t.ParcelType = ParcelType(fbsutils.Convert(int32(e.ParcelType()), t.FlatBuffer.TableKey))
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *PresetParcelsExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsPresetParcelsExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (PresetParcelsExcelDto) FlatDataName() string {
	return "PresetParcelsExcel"
}
