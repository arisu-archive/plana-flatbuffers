// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package excel

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type EventContentFortuneGachaExcel struct {
	_tab flatbuffers.Table
}

func GetRootAsEventContentFortuneGachaExcel(buf []byte, offset flatbuffers.UOffsetT) *EventContentFortuneGachaExcel {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &EventContentFortuneGachaExcel{}
	x.Init(buf, n+offset)
	return x
}

func GetSizePrefixedRootAsEventContentFortuneGachaExcel(buf []byte, offset flatbuffers.UOffsetT) *EventContentFortuneGachaExcel {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &EventContentFortuneGachaExcel{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func (rcv *EventContentFortuneGachaExcel) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *EventContentFortuneGachaExcel) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *EventContentFortuneGachaExcel) FortuneGachaGroupId() int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.GetInt32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *EventContentFortuneGachaExcel) MutateFortuneGachaGroupId(n int32) bool {
	return rcv._tab.MutateInt32Slot(4, n)
}

func (rcv *EventContentFortuneGachaExcel) IconPath() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *EventContentFortuneGachaExcel) LocalizeEtcId() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *EventContentFortuneGachaExcel) MutateLocalizeEtcId(n uint32) bool {
	return rcv._tab.MutateUint32Slot(8, n)
}

func (rcv *EventContentFortuneGachaExcel) NameImagePath() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func EventContentFortuneGachaExcelStart(builder *flatbuffers.Builder) {
	builder.StartObject(4)
}
func EventContentFortuneGachaExcelAddFortuneGachaGroupId(builder *flatbuffers.Builder, fortuneGachaGroupId int32) {
	builder.PrependInt32Slot(0, fortuneGachaGroupId, 0)
}
func EventContentFortuneGachaExcelAddIconPath(builder *flatbuffers.Builder, iconPath flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(iconPath), 0)
}
func EventContentFortuneGachaExcelAddLocalizeEtcId(builder *flatbuffers.Builder, localizeEtcId uint32) {
	builder.PrependUint32Slot(2, localizeEtcId, 0)
}
func EventContentFortuneGachaExcelAddNameImagePath(builder *flatbuffers.Builder, nameImagePath flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(3, flatbuffers.UOffsetT(nameImagePath), 0)
}
func EventContentFortuneGachaExcelEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
