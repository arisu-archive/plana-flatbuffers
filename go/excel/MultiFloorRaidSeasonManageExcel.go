// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package excel

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type MultiFloorRaidSeasonManageExcel struct {
	_tab flatbuffers.Table
}

func GetRootAsMultiFloorRaidSeasonManageExcel(buf []byte, offset flatbuffers.UOffsetT) *MultiFloorRaidSeasonManageExcel {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &MultiFloorRaidSeasonManageExcel{}
	x.Init(buf, n+offset)
	return x
}

func GetSizePrefixedRootAsMultiFloorRaidSeasonManageExcel(buf []byte, offset flatbuffers.UOffsetT) *MultiFloorRaidSeasonManageExcel {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &MultiFloorRaidSeasonManageExcel{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func (rcv *MultiFloorRaidSeasonManageExcel) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *MultiFloorRaidSeasonManageExcel) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *MultiFloorRaidSeasonManageExcel) PlayTip() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *MultiFloorRaidSeasonManageExcel) LevelImgPath() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *MultiFloorRaidSeasonManageExcel) LobbyImgPath() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *MultiFloorRaidSeasonManageExcel) EnterScenarioKey() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *MultiFloorRaidSeasonManageExcel) MutateEnterScenarioKey(n uint32) bool {
	return rcv._tab.MutateUint32Slot(10, n)
}

func (rcv *MultiFloorRaidSeasonManageExcel) OpenRaidBossGroupId() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(12))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *MultiFloorRaidSeasonManageExcel) SettlementEndDate() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(14))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *MultiFloorRaidSeasonManageExcel) SeasonEndDate() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(16))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *MultiFloorRaidSeasonManageExcel) EndNoteLabelStartDate() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(18))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *MultiFloorRaidSeasonManageExcel) SeasonStartDate() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(20))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *MultiFloorRaidSeasonManageExcel) ShowLobbyBanner() bool {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(22))
	if o != 0 {
		return rcv._tab.GetBool(o + rcv._tab.Pos)
	}
	return false
}

func (rcv *MultiFloorRaidSeasonManageExcel) MutateShowLobbyBanner(n bool) bool {
	return rcv._tab.MutateBoolSlot(22, n)
}

func (rcv *MultiFloorRaidSeasonManageExcel) LobbyEnterScenario() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(24))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *MultiFloorRaidSeasonManageExcel) MutateLobbyEnterScenario(n uint32) bool {
	return rcv._tab.MutateUint32Slot(24, n)
}

func (rcv *MultiFloorRaidSeasonManageExcel) SeasonId() int64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(26))
	if o != 0 {
		return rcv._tab.GetInt64(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *MultiFloorRaidSeasonManageExcel) MutateSeasonId(n int64) bool {
	return rcv._tab.MutateInt64Slot(26, n)
}

func MultiFloorRaidSeasonManageExcelStart(builder *flatbuffers.Builder) {
	builder.StartObject(12)
}
func MultiFloorRaidSeasonManageExcelAddPlayTip(builder *flatbuffers.Builder, playTip flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(playTip), 0)
}
func MultiFloorRaidSeasonManageExcelAddLevelImgPath(builder *flatbuffers.Builder, levelImgPath flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(levelImgPath), 0)
}
func MultiFloorRaidSeasonManageExcelAddLobbyImgPath(builder *flatbuffers.Builder, lobbyImgPath flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(2, flatbuffers.UOffsetT(lobbyImgPath), 0)
}
func MultiFloorRaidSeasonManageExcelAddEnterScenarioKey(builder *flatbuffers.Builder, enterScenarioKey uint32) {
	builder.PrependUint32Slot(3, enterScenarioKey, 0)
}
func MultiFloorRaidSeasonManageExcelAddOpenRaidBossGroupId(builder *flatbuffers.Builder, openRaidBossGroupId flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(4, flatbuffers.UOffsetT(openRaidBossGroupId), 0)
}
func MultiFloorRaidSeasonManageExcelAddSettlementEndDate(builder *flatbuffers.Builder, settlementEndDate flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(5, flatbuffers.UOffsetT(settlementEndDate), 0)
}
func MultiFloorRaidSeasonManageExcelAddSeasonEndDate(builder *flatbuffers.Builder, seasonEndDate flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(6, flatbuffers.UOffsetT(seasonEndDate), 0)
}
func MultiFloorRaidSeasonManageExcelAddEndNoteLabelStartDate(builder *flatbuffers.Builder, endNoteLabelStartDate flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(7, flatbuffers.UOffsetT(endNoteLabelStartDate), 0)
}
func MultiFloorRaidSeasonManageExcelAddSeasonStartDate(builder *flatbuffers.Builder, seasonStartDate flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(8, flatbuffers.UOffsetT(seasonStartDate), 0)
}
func MultiFloorRaidSeasonManageExcelAddShowLobbyBanner(builder *flatbuffers.Builder, showLobbyBanner bool) {
	builder.PrependBoolSlot(9, showLobbyBanner, false)
}
func MultiFloorRaidSeasonManageExcelAddLobbyEnterScenario(builder *flatbuffers.Builder, lobbyEnterScenario uint32) {
	builder.PrependUint32Slot(10, lobbyEnterScenario, 0)
}
func MultiFloorRaidSeasonManageExcelAddSeasonId(builder *flatbuffers.Builder, seasonId int64) {
	builder.PrependInt64Slot(11, seasonId, 0)
}
func MultiFloorRaidSeasonManageExcelEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
