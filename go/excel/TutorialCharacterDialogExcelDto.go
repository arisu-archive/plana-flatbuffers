// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// TutorialCharacterDialogExcelDto represents a FlatBuffers table
type TutorialCharacterDialogExcelDto struct {
	fbsutils.FlatBuffer
	VoiceId       uint32 `json:"voice_id"`
	LocalizeJp    string `json:"localize_jp"`
	LocalizeKr    string `json:"localize_kr"`
	AnimationName string `json:"animation_name"`
	TalkId        int64  `json:"talk_id"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *TutorialCharacterDialogExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	TutorialCharacterDialogExcelStart(b)
	TutorialCharacterDialogExcelAddVoiceId(b, fbsutils.Convert(t.VoiceId, t.FlatBuffer.TableKey))
	TutorialCharacterDialogExcelAddLocalizeJp(b, b.CreateString(fbsutils.Convert(t.LocalizeJp, t.FlatBuffer.TableKey)))
	TutorialCharacterDialogExcelAddLocalizeKr(b, b.CreateString(fbsutils.Convert(t.LocalizeKr, t.FlatBuffer.TableKey)))
	TutorialCharacterDialogExcelAddAnimationName(b, b.CreateString(fbsutils.Convert(t.AnimationName, t.FlatBuffer.TableKey)))
	TutorialCharacterDialogExcelAddTalkId(b, fbsutils.Convert(t.TalkId, t.FlatBuffer.TableKey))
	return TutorialCharacterDialogExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *TutorialCharacterDialogExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *TutorialCharacterDialogExcelDto) UnmarshalMessage(e *TutorialCharacterDialogExcel) error {
	t.VoiceId = fbsutils.Convert(e.VoiceId(), t.FlatBuffer.TableKey)
	t.LocalizeJp = fbsutils.Convert(string(e.LocalizeJp()), t.FlatBuffer.TableKey)
	t.LocalizeKr = fbsutils.Convert(string(e.LocalizeKr()), t.FlatBuffer.TableKey)
	t.AnimationName = fbsutils.Convert(string(e.AnimationName()), t.FlatBuffer.TableKey)
	t.TalkId = fbsutils.Convert(e.TalkId(), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *TutorialCharacterDialogExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsTutorialCharacterDialogExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (TutorialCharacterDialogExcelDto) FlatDataName() string {
	return "TutorialCharacterDialogExcel"
}
