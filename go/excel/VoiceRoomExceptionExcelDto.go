// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// VoiceRoomExceptionExcelDto represents a FlatBuffers table
type VoiceRoomExceptionExcelDto struct {
	fbsutils.FlatBuffer
	LinkedCostumeUniqueId         int64       `json:"linked_costume_unique_id"`
	LinkedCharacterVoicePrintType CVPrintType `json:"linked_character_voice_print_type"`
	CostumeUniqueId               int64       `json:"costume_unique_id"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *VoiceRoomExceptionExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	VoiceRoomExceptionExcelStart(b)
	VoiceRoomExceptionExcelAddLinkedCostumeUniqueId(b, fbsutils.Convert(t.LinkedCostumeUniqueId, t.FlatBuffer.TableKey))
	VoiceRoomExceptionExcelAddLinkedCharacterVoicePrintType(b, fbsutils.Convert(t.LinkedCharacterVoicePrintType, t.FlatBuffer.TableKey))
	VoiceRoomExceptionExcelAddCostumeUniqueId(b, fbsutils.Convert(t.CostumeUniqueId, t.FlatBuffer.TableKey))
	return VoiceRoomExceptionExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *VoiceRoomExceptionExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *VoiceRoomExceptionExcelDto) UnmarshalMessage(e *VoiceRoomExceptionExcel) error {
	t.LinkedCostumeUniqueId = fbsutils.Convert(e.LinkedCostumeUniqueId(), t.FlatBuffer.TableKey)
	t.LinkedCharacterVoicePrintType = CVPrintType(fbsutils.Convert(int32(e.LinkedCharacterVoicePrintType()), t.FlatBuffer.TableKey))
	t.CostumeUniqueId = fbsutils.Convert(e.CostumeUniqueId(), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *VoiceRoomExceptionExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsVoiceRoomExceptionExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (VoiceRoomExceptionExcelDto) FlatDataName() string {
	return "VoiceRoomExceptionExcel"
}
