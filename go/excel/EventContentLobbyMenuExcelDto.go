// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// EventContentLobbyMenuExcelDto represents a FlatBuffers table
type EventContentLobbyMenuExcelDto struct {
	fbsutils.FlatBuffer
	ButtonText       string           `json:"button_text"`
	DisplayOrder     int32            `json:"display_order"`
	EventContentId   int64            `json:"event_content_id"`
	EventContentType EventContentType `json:"event_content_type"`
	IconOffsetX      float32          `json:"icon_offset_x"`
	IconOffsetY      float32          `json:"icon_offset_y"`
	IconSpriteName   string           `json:"icon_sprite_name"`
	ReddotSpriteName string           `json:"reddot_sprite_name"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *EventContentLobbyMenuExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	EventContentLobbyMenuExcelStart(b)
	EventContentLobbyMenuExcelAddButtonText(b, b.CreateString(fbsutils.Convert(t.ButtonText, t.FlatBuffer.TableKey)))
	EventContentLobbyMenuExcelAddDisplayOrder(b, fbsutils.Convert(t.DisplayOrder, t.FlatBuffer.TableKey))
	EventContentLobbyMenuExcelAddEventContentId(b, fbsutils.Convert(t.EventContentId, t.FlatBuffer.TableKey))
	EventContentLobbyMenuExcelAddEventContentType(b, fbsutils.Convert(t.EventContentType, t.FlatBuffer.TableKey))
	EventContentLobbyMenuExcelAddIconOffsetX(b, fbsutils.Convert(t.IconOffsetX, t.FlatBuffer.TableKey))
	EventContentLobbyMenuExcelAddIconOffsetY(b, fbsutils.Convert(t.IconOffsetY, t.FlatBuffer.TableKey))
	EventContentLobbyMenuExcelAddIconSpriteName(b, b.CreateString(fbsutils.Convert(t.IconSpriteName, t.FlatBuffer.TableKey)))
	EventContentLobbyMenuExcelAddReddotSpriteName(b, b.CreateString(fbsutils.Convert(t.ReddotSpriteName, t.FlatBuffer.TableKey)))
	return EventContentLobbyMenuExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *EventContentLobbyMenuExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *EventContentLobbyMenuExcelDto) UnmarshalMessage(e *EventContentLobbyMenuExcel) error {
	t.ButtonText = fbsutils.Convert(string(e.ButtonText()), t.FlatBuffer.TableKey)
	t.DisplayOrder = fbsutils.Convert(e.DisplayOrder(), t.FlatBuffer.TableKey)
	t.EventContentId = fbsutils.Convert(e.EventContentId(), t.FlatBuffer.TableKey)
	t.EventContentType = EventContentType(fbsutils.Convert(int32(e.EventContentType()), t.FlatBuffer.TableKey))
	t.IconOffsetX = fbsutils.Convert(e.IconOffsetX(), t.FlatBuffer.TableKey)
	t.IconOffsetY = fbsutils.Convert(e.IconOffsetY(), t.FlatBuffer.TableKey)
	t.IconSpriteName = fbsutils.Convert(string(e.IconSpriteName()), t.FlatBuffer.TableKey)
	t.ReddotSpriteName = fbsutils.Convert(string(e.ReddotSpriteName()), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *EventContentLobbyMenuExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsEventContentLobbyMenuExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (EventContentLobbyMenuExcelDto) FlatDataName() string {
	return "EventContentLobbyMenuExcel"
}
