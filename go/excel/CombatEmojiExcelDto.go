// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// CombatEmojiExcelDto represents a FlatBuffers table
type CombatEmojiExcelDto struct {
	fbsutils.FlatBuffer
	ShowDefaultBg   bool       `json:"show_default_bg"`
	ShowEmojiDelay  int32      `json:"show_emoji_delay"`
	EmojiTurnOn     bool       `json:"emoji_turn_on"`
	EmojiReversal   bool       `json:"emoji_reversal"`
	EmojiDuration   bool       `json:"emoji_duration"`
	OrderOfPriority int32      `json:"order_of_priority"`
	EmojiEvent      EmojiEvent `json:"emoji_event"`
	UniqueId        int64      `json:"unique_id"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *CombatEmojiExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	CombatEmojiExcelStart(b)
	CombatEmojiExcelAddShowDefaultBg(b, t.ShowDefaultBg)
	CombatEmojiExcelAddShowEmojiDelay(b, fbsutils.Convert(t.ShowEmojiDelay, t.FlatBuffer.TableKey))
	CombatEmojiExcelAddEmojiTurnOn(b, t.EmojiTurnOn)
	CombatEmojiExcelAddEmojiReversal(b, t.EmojiReversal)
	CombatEmojiExcelAddEmojiDuration(b, t.EmojiDuration)
	CombatEmojiExcelAddOrderOfPriority(b, fbsutils.Convert(t.OrderOfPriority, t.FlatBuffer.TableKey))
	CombatEmojiExcelAddEmojiEvent(b, fbsutils.Convert(t.EmojiEvent, t.FlatBuffer.TableKey))
	CombatEmojiExcelAddUniqueId(b, fbsutils.Convert(t.UniqueId, t.FlatBuffer.TableKey))
	return CombatEmojiExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *CombatEmojiExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *CombatEmojiExcelDto) UnmarshalMessage(e *CombatEmojiExcel) error {
	t.ShowDefaultBg = e.ShowDefaultBg()
	t.ShowEmojiDelay = fbsutils.Convert(e.ShowEmojiDelay(), t.FlatBuffer.TableKey)
	t.EmojiTurnOn = e.EmojiTurnOn()
	t.EmojiReversal = e.EmojiReversal()
	t.EmojiDuration = e.EmojiDuration()
	t.OrderOfPriority = fbsutils.Convert(e.OrderOfPriority(), t.FlatBuffer.TableKey)
	t.EmojiEvent = EmojiEvent(fbsutils.Convert(int32(e.EmojiEvent()), t.FlatBuffer.TableKey))
	t.UniqueId = fbsutils.Convert(e.UniqueId(), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *CombatEmojiExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsCombatEmojiExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (CombatEmojiExcelDto) FlatDataName() string {
	return "CombatEmojiExcel"
}
