// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// MinigameCCGRewardCardExcelDto represents a FlatBuffers table
type MinigameCCGRewardCardExcelDto struct {
	fbsutils.FlatBuffer
	CardRarity int32         `json:"card_rarity"`
	CardId     int64         `json:"card_id"`
	EntityType CCGEntityType `json:"entity_type"`
	GroupId    int64         `json:"group_id"`
	Id         int64         `json:"id"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *MinigameCCGRewardCardExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	MinigameCCGRewardCardExcelStart(b)
	MinigameCCGRewardCardExcelAddCardRarity(b, fbsutils.Convert(t.CardRarity, t.FlatBuffer.TableKey))
	MinigameCCGRewardCardExcelAddCardId(b, fbsutils.Convert(t.CardId, t.FlatBuffer.TableKey))
	MinigameCCGRewardCardExcelAddEntityType(b, fbsutils.Convert(t.EntityType, t.FlatBuffer.TableKey))
	MinigameCCGRewardCardExcelAddGroupId(b, fbsutils.Convert(t.GroupId, t.FlatBuffer.TableKey))
	MinigameCCGRewardCardExcelAddId(b, fbsutils.Convert(t.Id, t.FlatBuffer.TableKey))
	return MinigameCCGRewardCardExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *MinigameCCGRewardCardExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *MinigameCCGRewardCardExcelDto) UnmarshalMessage(e *MinigameCCGRewardCardExcel) error {
	t.CardRarity = fbsutils.Convert(e.CardRarity(), t.FlatBuffer.TableKey)
	t.CardId = fbsutils.Convert(e.CardId(), t.FlatBuffer.TableKey)
	t.EntityType = CCGEntityType(fbsutils.Convert(int32(e.EntityType()), t.FlatBuffer.TableKey))
	t.GroupId = fbsutils.Convert(e.GroupId(), t.FlatBuffer.TableKey)
	t.Id = fbsutils.Convert(e.Id(), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *MinigameCCGRewardCardExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsMinigameCCGRewardCardExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (MinigameCCGRewardCardExcelDto) FlatDataName() string {
	return "MinigameCCGRewardCardExcel"
}
