// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// RecipeSelectionGroupExcelDto represents a FlatBuffers table
type RecipeSelectionGroupExcelDto struct {
	fbsutils.FlatBuffer
	ResultAmountMax                 int64      `json:"result_amount_max"`
	ResultAmountMin                 int64      `json:"result_amount_min"`
	ParcelId                        int64      `json:"parcel_id"`
	ParcelType                      ParcelType `json:"parcel_type"`
	RecipeSelectionGroupComponentId int64      `json:"recipe_selection_group_component_id"`
	RecipeSelectionGroupId          int64      `json:"recipe_selection_group_id"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *RecipeSelectionGroupExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	RecipeSelectionGroupExcelStart(b)
	RecipeSelectionGroupExcelAddResultAmountMax(b, fbsutils.Convert(t.ResultAmountMax, t.FlatBuffer.TableKey))
	RecipeSelectionGroupExcelAddResultAmountMin(b, fbsutils.Convert(t.ResultAmountMin, t.FlatBuffer.TableKey))
	RecipeSelectionGroupExcelAddParcelId(b, fbsutils.Convert(t.ParcelId, t.FlatBuffer.TableKey))
	RecipeSelectionGroupExcelAddParcelType(b, fbsutils.Convert(t.ParcelType, t.FlatBuffer.TableKey))
	RecipeSelectionGroupExcelAddRecipeSelectionGroupComponentId(b, fbsutils.Convert(t.RecipeSelectionGroupComponentId, t.FlatBuffer.TableKey))
	RecipeSelectionGroupExcelAddRecipeSelectionGroupId(b, fbsutils.Convert(t.RecipeSelectionGroupId, t.FlatBuffer.TableKey))
	return RecipeSelectionGroupExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *RecipeSelectionGroupExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *RecipeSelectionGroupExcelDto) UnmarshalMessage(e *RecipeSelectionGroupExcel) error {
	t.ResultAmountMax = fbsutils.Convert(e.ResultAmountMax(), t.FlatBuffer.TableKey)
	t.ResultAmountMin = fbsutils.Convert(e.ResultAmountMin(), t.FlatBuffer.TableKey)
	t.ParcelId = fbsutils.Convert(e.ParcelId(), t.FlatBuffer.TableKey)
	t.ParcelType = ParcelType(fbsutils.Convert(int32(e.ParcelType()), t.FlatBuffer.TableKey))
	t.RecipeSelectionGroupComponentId = fbsutils.Convert(e.RecipeSelectionGroupComponentId(), t.FlatBuffer.TableKey)
	t.RecipeSelectionGroupId = fbsutils.Convert(e.RecipeSelectionGroupId(), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *RecipeSelectionGroupExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsRecipeSelectionGroupExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (RecipeSelectionGroupExcelDto) FlatDataName() string {
	return "RecipeSelectionGroupExcel"
}
