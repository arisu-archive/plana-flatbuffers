// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// MiniGameDefenseInfoExcelDto represents a FlatBuffers table
type MiniGameDefenseInfoExcelDto struct {
	fbsutils.FlatBuffer
	EventContentId             int64      `json:"event_content_id"`
	DefenseBattleParcelType    ParcelType `json:"defense_battle_parcel_type"`
	DefenseBattleParcelId      int64      `json:"defense_battle_parcel_id"`
	DefenseBattleMultiplierMax int64      `json:"defense_battle_multiplier_max"`
	DisableRootMotion          bool       `json:"disable_root_motion"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *MiniGameDefenseInfoExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	MiniGameDefenseInfoExcelStart(b)
	MiniGameDefenseInfoExcelAddEventContentId(b, fbsutils.Convert(t.EventContentId, t.FlatBuffer.TableKey))
	MiniGameDefenseInfoExcelAddDefenseBattleParcelType(b, fbsutils.Convert(t.DefenseBattleParcelType, t.FlatBuffer.TableKey))
	MiniGameDefenseInfoExcelAddDefenseBattleParcelId(b, fbsutils.Convert(t.DefenseBattleParcelId, t.FlatBuffer.TableKey))
	MiniGameDefenseInfoExcelAddDefenseBattleMultiplierMax(b, fbsutils.Convert(t.DefenseBattleMultiplierMax, t.FlatBuffer.TableKey))
	MiniGameDefenseInfoExcelAddDisableRootMotion(b, t.DisableRootMotion)
	return MiniGameDefenseInfoExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *MiniGameDefenseInfoExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *MiniGameDefenseInfoExcelDto) UnmarshalMessage(e *MiniGameDefenseInfoExcel) error {
	t.EventContentId = fbsutils.Convert(e.EventContentId(), t.FlatBuffer.TableKey)
	t.DefenseBattleParcelType = ParcelType(fbsutils.Convert(int32(e.DefenseBattleParcelType()), t.FlatBuffer.TableKey))
	t.DefenseBattleParcelId = fbsutils.Convert(e.DefenseBattleParcelId(), t.FlatBuffer.TableKey)
	t.DefenseBattleMultiplierMax = fbsutils.Convert(e.DefenseBattleMultiplierMax(), t.FlatBuffer.TableKey)
	t.DisableRootMotion = e.DisableRootMotion()
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *MiniGameDefenseInfoExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsMiniGameDefenseInfoExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (MiniGameDefenseInfoExcelDto) FlatDataName() string {
	return "MiniGameDefenseInfoExcel"
}
