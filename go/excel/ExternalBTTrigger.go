// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package excel

import "strconv"

type ExternalBTTrigger int32

const (
	ExternalBTTriggerNone                           ExternalBTTrigger = 0
	ExternalBTTriggerHPUnder                        ExternalBTTrigger = 1
	ExternalBTTriggerApplySkillEffectCategory       ExternalBTTrigger = 2
	ExternalBTTriggerHaveNextExSkillActiveGauge     ExternalBTTrigger = 3
	ExternalBTTriggerUseNormalSkill                 ExternalBTTrigger = 4
	ExternalBTTriggerUseExSkill                     ExternalBTTrigger = 5
	ExternalBTTriggerCheckActiveGaugeOver           ExternalBTTrigger = 6
	ExternalBTTriggerCheckPeriod                    ExternalBTTrigger = 7
	ExternalBTTriggerCheckSummonCharacterCountOver  ExternalBTTrigger = 8
	ExternalBTTriggerCheckSummonCharacterCountUnder ExternalBTTrigger = 9
	ExternalBTTriggerApplyGroggy                    ExternalBTTrigger = 10
	ExternalBTTriggerApplyLogicEffectTemplateId     ExternalBTTrigger = 11
	ExternalBTTriggerOnSpawned                      ExternalBTTrigger = 12
	ExternalBTTriggerCheckActiveGaugeBetween        ExternalBTTrigger = 13
	ExternalBTTriggerDestroyParts                   ExternalBTTrigger = 14
	ExternalBTTriggerCheckHallucinationCountOver    ExternalBTTrigger = 15
	ExternalBTTriggerCheckHallucinationCountUnder   ExternalBTTrigger = 16
	ExternalBTTriggerUseSkillEndGroupId             ExternalBTTrigger = 17
)

var EnumNamesExternalBTTrigger = map[ExternalBTTrigger]string{
	ExternalBTTriggerNone:                           "None",
	ExternalBTTriggerHPUnder:                        "HPUnder",
	ExternalBTTriggerApplySkillEffectCategory:       "ApplySkillEffectCategory",
	ExternalBTTriggerHaveNextExSkillActiveGauge:     "HaveNextExSkillActiveGauge",
	ExternalBTTriggerUseNormalSkill:                 "UseNormalSkill",
	ExternalBTTriggerUseExSkill:                     "UseExSkill",
	ExternalBTTriggerCheckActiveGaugeOver:           "CheckActiveGaugeOver",
	ExternalBTTriggerCheckPeriod:                    "CheckPeriod",
	ExternalBTTriggerCheckSummonCharacterCountOver:  "CheckSummonCharacterCountOver",
	ExternalBTTriggerCheckSummonCharacterCountUnder: "CheckSummonCharacterCountUnder",
	ExternalBTTriggerApplyGroggy:                    "ApplyGroggy",
	ExternalBTTriggerApplyLogicEffectTemplateId:     "ApplyLogicEffectTemplateId",
	ExternalBTTriggerOnSpawned:                      "OnSpawned",
	ExternalBTTriggerCheckActiveGaugeBetween:        "CheckActiveGaugeBetween",
	ExternalBTTriggerDestroyParts:                   "DestroyParts",
	ExternalBTTriggerCheckHallucinationCountOver:    "CheckHallucinationCountOver",
	ExternalBTTriggerCheckHallucinationCountUnder:   "CheckHallucinationCountUnder",
	ExternalBTTriggerUseSkillEndGroupId:             "UseSkillEndGroupId",
}

var EnumValuesExternalBTTrigger = map[string]ExternalBTTrigger{
	"None":                           ExternalBTTriggerNone,
	"HPUnder":                        ExternalBTTriggerHPUnder,
	"ApplySkillEffectCategory":       ExternalBTTriggerApplySkillEffectCategory,
	"HaveNextExSkillActiveGauge":     ExternalBTTriggerHaveNextExSkillActiveGauge,
	"UseNormalSkill":                 ExternalBTTriggerUseNormalSkill,
	"UseExSkill":                     ExternalBTTriggerUseExSkill,
	"CheckActiveGaugeOver":           ExternalBTTriggerCheckActiveGaugeOver,
	"CheckPeriod":                    ExternalBTTriggerCheckPeriod,
	"CheckSummonCharacterCountOver":  ExternalBTTriggerCheckSummonCharacterCountOver,
	"CheckSummonCharacterCountUnder": ExternalBTTriggerCheckSummonCharacterCountUnder,
	"ApplyGroggy":                    ExternalBTTriggerApplyGroggy,
	"ApplyLogicEffectTemplateId":     ExternalBTTriggerApplyLogicEffectTemplateId,
	"OnSpawned":                      ExternalBTTriggerOnSpawned,
	"CheckActiveGaugeBetween":        ExternalBTTriggerCheckActiveGaugeBetween,
	"DestroyParts":                   ExternalBTTriggerDestroyParts,
	"CheckHallucinationCountOver":    ExternalBTTriggerCheckHallucinationCountOver,
	"CheckHallucinationCountUnder":   ExternalBTTriggerCheckHallucinationCountUnder,
	"UseSkillEndGroupId":             ExternalBTTriggerUseSkillEndGroupId,
}

func (v ExternalBTTrigger) String() string {
	if s, ok := EnumNamesExternalBTTrigger[v]; ok {
		return s
	}
	return "ExternalBTTrigger(" + strconv.FormatInt(int64(v), 10) + ")"
}
