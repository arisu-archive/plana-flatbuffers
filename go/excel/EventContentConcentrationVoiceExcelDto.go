// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// EventContentConcentrationVoiceExcelDto represents a FlatBuffers table
type EventContentConcentrationVoiceExcelDto struct {
	fbsutils.FlatBuffer
	VoiceClip      uint32                      `json:"voice_clip"`
	VoiceCondition ConcentrationVoiceCondition `json:"voice_condition"`
	UniqueId       int64                       `json:"unique_id"`
	EventContentId int64                       `json:"event_content_id"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *EventContentConcentrationVoiceExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	EventContentConcentrationVoiceExcelStart(b)
	EventContentConcentrationVoiceExcelAddVoiceClip(b, fbsutils.Convert(t.VoiceClip, t.FlatBuffer.TableKey))
	EventContentConcentrationVoiceExcelAddVoiceCondition(b, fbsutils.Convert(t.VoiceCondition, t.FlatBuffer.TableKey))
	EventContentConcentrationVoiceExcelAddUniqueId(b, fbsutils.Convert(t.UniqueId, t.FlatBuffer.TableKey))
	EventContentConcentrationVoiceExcelAddEventContentId(b, fbsutils.Convert(t.EventContentId, t.FlatBuffer.TableKey))
	return EventContentConcentrationVoiceExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *EventContentConcentrationVoiceExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *EventContentConcentrationVoiceExcelDto) UnmarshalMessage(e *EventContentConcentrationVoiceExcel) error {
	t.VoiceClip = fbsutils.Convert(e.VoiceClip(), t.FlatBuffer.TableKey)
	t.VoiceCondition = ConcentrationVoiceCondition(fbsutils.Convert(int32(e.VoiceCondition()), t.FlatBuffer.TableKey))
	t.UniqueId = fbsutils.Convert(e.UniqueId(), t.FlatBuffer.TableKey)
	t.EventContentId = fbsutils.Convert(e.EventContentId(), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *EventContentConcentrationVoiceExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsEventContentConcentrationVoiceExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (EventContentConcentrationVoiceExcelDto) FlatDataName() string {
	return "EventContentConcentrationVoiceExcel"
}
