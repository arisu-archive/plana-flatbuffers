// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// SchoolDungeonRewardExcelDto represents a FlatBuffers table
type SchoolDungeonRewardExcelDto struct {
	fbsutils.FlatBuffer
	IsDisplayed             bool              `json:"is_displayed"`
	RewardParcelProbability int64             `json:"reward_parcel_probability"`
	RewardParcelAmount      int64             `json:"reward_parcel_amount"`
	RewardParcelId          int64             `json:"reward_parcel_id"`
	RewardParcelType        ParcelType        `json:"reward_parcel_type"`
	RewardTag               RewardTag         `json:"reward_tag"`
	DungeonType             SchoolDungeonType `json:"dungeon_type"`
	GroupId                 int64             `json:"group_id"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *SchoolDungeonRewardExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	SchoolDungeonRewardExcelStart(b)
	SchoolDungeonRewardExcelAddIsDisplayed(b, t.IsDisplayed)
	SchoolDungeonRewardExcelAddRewardParcelProbability(b, fbsutils.Convert(t.RewardParcelProbability, t.FlatBuffer.TableKey))
	SchoolDungeonRewardExcelAddRewardParcelAmount(b, fbsutils.Convert(t.RewardParcelAmount, t.FlatBuffer.TableKey))
	SchoolDungeonRewardExcelAddRewardParcelId(b, fbsutils.Convert(t.RewardParcelId, t.FlatBuffer.TableKey))
	SchoolDungeonRewardExcelAddRewardParcelType(b, fbsutils.Convert(t.RewardParcelType, t.FlatBuffer.TableKey))
	SchoolDungeonRewardExcelAddRewardTag(b, fbsutils.Convert(t.RewardTag, t.FlatBuffer.TableKey))
	SchoolDungeonRewardExcelAddDungeonType(b, fbsutils.Convert(t.DungeonType, t.FlatBuffer.TableKey))
	SchoolDungeonRewardExcelAddGroupId(b, fbsutils.Convert(t.GroupId, t.FlatBuffer.TableKey))
	return SchoolDungeonRewardExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *SchoolDungeonRewardExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *SchoolDungeonRewardExcelDto) UnmarshalMessage(e *SchoolDungeonRewardExcel) error {
	t.IsDisplayed = e.IsDisplayed()
	t.RewardParcelProbability = fbsutils.Convert(e.RewardParcelProbability(), t.FlatBuffer.TableKey)
	t.RewardParcelAmount = fbsutils.Convert(e.RewardParcelAmount(), t.FlatBuffer.TableKey)
	t.RewardParcelId = fbsutils.Convert(e.RewardParcelId(), t.FlatBuffer.TableKey)
	t.RewardParcelType = ParcelType(fbsutils.Convert(int32(e.RewardParcelType()), t.FlatBuffer.TableKey))
	t.RewardTag = RewardTag(fbsutils.Convert(int32(e.RewardTag()), t.FlatBuffer.TableKey))
	t.DungeonType = SchoolDungeonType(fbsutils.Convert(int32(e.DungeonType()), t.FlatBuffer.TableKey))
	t.GroupId = fbsutils.Convert(e.GroupId(), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *SchoolDungeonRewardExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsSchoolDungeonRewardExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (SchoolDungeonRewardExcelDto) FlatDataName() string {
	return "SchoolDungeonRewardExcel"
}
