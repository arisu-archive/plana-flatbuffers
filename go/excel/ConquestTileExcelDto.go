// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// ConquestTileExcelDto represents a FlatBuffers table
type ConquestTileExcelDto struct {
	fbsutils.FlatBuffer
	Id                 int64            `json:"id"`
	Name               string           `json:"name"`
	EventId            int64            `json:"event_id"`
	Step               int32            `json:"step"`
	PrefabName         string           `json:"prefab_name"`
	TileNameLocalize   string           `json:"tile_name_localize"`
	TileImageName      string           `json:"tile_image_name"`
	Playable           bool             `json:"playable"`
	TileType           ConquestTileType `json:"tile_type"`
	NotMapFog          bool             `json:"not_map_fog"`
	GroupBonusId       int64            `json:"group_bonus_id"`
	ConquestCostType   ParcelType       `json:"conquest_cost_type"`
	ConquestCostId     int64            `json:"conquest_cost_id"`
	ConquestCostAmount int32            `json:"conquest_cost_amount"`
	ManageCostType     ParcelType       `json:"manage_cost_type"`
	ManageCostId       int64            `json:"manage_cost_id"`
	ManageCostAmount   int32            `json:"manage_cost_amount"`
	ConquestRewardId   int64            `json:"conquest_reward_id"`
	MassErosionId      int64            `json:"mass_erosion_id"`
	Upgrade2CostType   ParcelType       `json:"upgrade2_cost_type"`
	Upgrade2CostId     int64            `json:"upgrade2_cost_id"`
	Upgrade2CostAmount int32            `json:"upgrade2_cost_amount"`
	Upgrade3CostType   ParcelType       `json:"upgrade3_cost_type"`
	Upgrade3CostId     int64            `json:"upgrade3_cost_id"`
	Upgrade3CostAmount int32            `json:"upgrade3_cost_amount"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *ConquestTileExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	ConquestTileExcelStart(b)
	ConquestTileExcelAddId(b, fbsutils.Convert(t.Id, t.FlatBuffer.TableKey))
	ConquestTileExcelAddName(b, b.CreateString(fbsutils.Convert(t.Name, t.FlatBuffer.TableKey)))
	ConquestTileExcelAddEventId(b, fbsutils.Convert(t.EventId, t.FlatBuffer.TableKey))
	ConquestTileExcelAddStep(b, fbsutils.Convert(t.Step, t.FlatBuffer.TableKey))
	ConquestTileExcelAddPrefabName(b, b.CreateString(fbsutils.Convert(t.PrefabName, t.FlatBuffer.TableKey)))
	ConquestTileExcelAddTileNameLocalize(b, b.CreateString(fbsutils.Convert(t.TileNameLocalize, t.FlatBuffer.TableKey)))
	ConquestTileExcelAddTileImageName(b, b.CreateString(fbsutils.Convert(t.TileImageName, t.FlatBuffer.TableKey)))
	ConquestTileExcelAddPlayable(b, t.Playable)
	ConquestTileExcelAddTileType(b, fbsutils.Convert(t.TileType, t.FlatBuffer.TableKey))
	ConquestTileExcelAddNotMapFog(b, t.NotMapFog)
	ConquestTileExcelAddGroupBonusId(b, fbsutils.Convert(t.GroupBonusId, t.FlatBuffer.TableKey))
	ConquestTileExcelAddConquestCostType(b, fbsutils.Convert(t.ConquestCostType, t.FlatBuffer.TableKey))
	ConquestTileExcelAddConquestCostId(b, fbsutils.Convert(t.ConquestCostId, t.FlatBuffer.TableKey))
	ConquestTileExcelAddConquestCostAmount(b, fbsutils.Convert(t.ConquestCostAmount, t.FlatBuffer.TableKey))
	ConquestTileExcelAddManageCostType(b, fbsutils.Convert(t.ManageCostType, t.FlatBuffer.TableKey))
	ConquestTileExcelAddManageCostId(b, fbsutils.Convert(t.ManageCostId, t.FlatBuffer.TableKey))
	ConquestTileExcelAddManageCostAmount(b, fbsutils.Convert(t.ManageCostAmount, t.FlatBuffer.TableKey))
	ConquestTileExcelAddConquestRewardId(b, fbsutils.Convert(t.ConquestRewardId, t.FlatBuffer.TableKey))
	ConquestTileExcelAddMassErosionId(b, fbsutils.Convert(t.MassErosionId, t.FlatBuffer.TableKey))
	ConquestTileExcelAddUpgrade2CostType(b, fbsutils.Convert(t.Upgrade2CostType, t.FlatBuffer.TableKey))
	ConquestTileExcelAddUpgrade2CostId(b, fbsutils.Convert(t.Upgrade2CostId, t.FlatBuffer.TableKey))
	ConquestTileExcelAddUpgrade2CostAmount(b, fbsutils.Convert(t.Upgrade2CostAmount, t.FlatBuffer.TableKey))
	ConquestTileExcelAddUpgrade3CostType(b, fbsutils.Convert(t.Upgrade3CostType, t.FlatBuffer.TableKey))
	ConquestTileExcelAddUpgrade3CostId(b, fbsutils.Convert(t.Upgrade3CostId, t.FlatBuffer.TableKey))
	ConquestTileExcelAddUpgrade3CostAmount(b, fbsutils.Convert(t.Upgrade3CostAmount, t.FlatBuffer.TableKey))
	return ConquestTileExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *ConquestTileExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *ConquestTileExcelDto) UnmarshalMessage(e *ConquestTileExcel) error {
	t.Id = fbsutils.Convert(e.Id(), t.FlatBuffer.TableKey)
	t.Name = fbsutils.Convert(string(e.Name()), t.FlatBuffer.TableKey)
	t.EventId = fbsutils.Convert(e.EventId(), t.FlatBuffer.TableKey)
	t.Step = fbsutils.Convert(e.Step(), t.FlatBuffer.TableKey)
	t.PrefabName = fbsutils.Convert(string(e.PrefabName()), t.FlatBuffer.TableKey)
	t.TileNameLocalize = fbsutils.Convert(string(e.TileNameLocalize()), t.FlatBuffer.TableKey)
	t.TileImageName = fbsutils.Convert(string(e.TileImageName()), t.FlatBuffer.TableKey)
	t.Playable = e.Playable()
	t.TileType = ConquestTileType(fbsutils.Convert(int32(e.TileType()), t.FlatBuffer.TableKey))
	t.NotMapFog = e.NotMapFog()
	t.GroupBonusId = fbsutils.Convert(e.GroupBonusId(), t.FlatBuffer.TableKey)
	t.ConquestCostType = ParcelType(fbsutils.Convert(int32(e.ConquestCostType()), t.FlatBuffer.TableKey))
	t.ConquestCostId = fbsutils.Convert(e.ConquestCostId(), t.FlatBuffer.TableKey)
	t.ConquestCostAmount = fbsutils.Convert(e.ConquestCostAmount(), t.FlatBuffer.TableKey)
	t.ManageCostType = ParcelType(fbsutils.Convert(int32(e.ManageCostType()), t.FlatBuffer.TableKey))
	t.ManageCostId = fbsutils.Convert(e.ManageCostId(), t.FlatBuffer.TableKey)
	t.ManageCostAmount = fbsutils.Convert(e.ManageCostAmount(), t.FlatBuffer.TableKey)
	t.ConquestRewardId = fbsutils.Convert(e.ConquestRewardId(), t.FlatBuffer.TableKey)
	t.MassErosionId = fbsutils.Convert(e.MassErosionId(), t.FlatBuffer.TableKey)
	t.Upgrade2CostType = ParcelType(fbsutils.Convert(int32(e.Upgrade2CostType()), t.FlatBuffer.TableKey))
	t.Upgrade2CostId = fbsutils.Convert(e.Upgrade2CostId(), t.FlatBuffer.TableKey)
	t.Upgrade2CostAmount = fbsutils.Convert(e.Upgrade2CostAmount(), t.FlatBuffer.TableKey)
	t.Upgrade3CostType = ParcelType(fbsutils.Convert(int32(e.Upgrade3CostType()), t.FlatBuffer.TableKey))
	t.Upgrade3CostId = fbsutils.Convert(e.Upgrade3CostId(), t.FlatBuffer.TableKey)
	t.Upgrade3CostAmount = fbsutils.Convert(e.Upgrade3CostAmount(), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *ConquestTileExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsConquestTileExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (ConquestTileExcelDto) FlatDataName() string {
	return "ConquestTileExcel"
}
