// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// ShopFreeRecruitExcelDto represents a FlatBuffers table
type ShopFreeRecruitExcelDto struct {
	fbsutils.FlatBuffer
	ShopRecruitId                  []int64             `json:"shop_recruit_id"`
	TenRecruitCountOnly            bool                `json:"ten_recruit_count_only"`
	FreeRecruitDecorationImagePath string              `json:"free_recruit_decoration_image_path"`
	FreeRecruitType                ShopFreeRecruitType `json:"free_recruit_type"`
	FreeRecruitPeriodTo            string              `json:"free_recruit_period_to"`
	FreeRecruitPeriodFrom          string              `json:"free_recruit_period_from"`
	Id                             int64               `json:"id"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *ShopFreeRecruitExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	ShopFreeRecruitExcelStart(b)
	ShopFreeRecruitExcelStartShopRecruitIdVector(b, len(t.ShopRecruitId))
	for i := range len(t.ShopRecruitId) {
		b.PrependInt64(fbsutils.Convert(t.ShopRecruitId[len(t.ShopRecruitId)-i-1], t.FlatBuffer.TableKey))
	}
	ShopFreeRecruitExcelAddShopRecruitId(b, b.EndVector(len(t.ShopRecruitId)))
	ShopFreeRecruitExcelAddTenRecruitCountOnly(b, t.TenRecruitCountOnly)
	ShopFreeRecruitExcelAddFreeRecruitDecorationImagePath(b, b.CreateString(fbsutils.Convert(t.FreeRecruitDecorationImagePath, t.FlatBuffer.TableKey)))
	ShopFreeRecruitExcelAddFreeRecruitType(b, fbsutils.Convert(t.FreeRecruitType, t.FlatBuffer.TableKey))
	ShopFreeRecruitExcelAddFreeRecruitPeriodTo(b, b.CreateString(fbsutils.Convert(t.FreeRecruitPeriodTo, t.FlatBuffer.TableKey)))
	ShopFreeRecruitExcelAddFreeRecruitPeriodFrom(b, b.CreateString(fbsutils.Convert(t.FreeRecruitPeriodFrom, t.FlatBuffer.TableKey)))
	ShopFreeRecruitExcelAddId(b, fbsutils.Convert(t.Id, t.FlatBuffer.TableKey))
	return ShopFreeRecruitExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *ShopFreeRecruitExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *ShopFreeRecruitExcelDto) UnmarshalMessage(e *ShopFreeRecruitExcel) error {
	t.ShopRecruitId = make([]int64, e.ShopRecruitIdLength())
	for i := range e.ShopRecruitIdLength() {
		t.ShopRecruitId[i] = fbsutils.Convert(e.ShopRecruitId(i), t.FlatBuffer.TableKey)
	}
	t.TenRecruitCountOnly = e.TenRecruitCountOnly()
	t.FreeRecruitDecorationImagePath = fbsutils.Convert(string(e.FreeRecruitDecorationImagePath()), t.FlatBuffer.TableKey)
	t.FreeRecruitType = ShopFreeRecruitType(fbsutils.Convert(int32(e.FreeRecruitType()), t.FlatBuffer.TableKey))
	t.FreeRecruitPeriodTo = fbsutils.Convert(string(e.FreeRecruitPeriodTo()), t.FlatBuffer.TableKey)
	t.FreeRecruitPeriodFrom = fbsutils.Convert(string(e.FreeRecruitPeriodFrom()), t.FlatBuffer.TableKey)
	t.Id = fbsutils.Convert(e.Id(), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *ShopFreeRecruitExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsShopFreeRecruitExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (ShopFreeRecruitExcelDto) FlatDataName() string {
	return "ShopFreeRecruitExcel"
}
