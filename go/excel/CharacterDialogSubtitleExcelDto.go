// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// CharacterDialogSubtitleExcelDto represents a FlatBuffers table
type CharacterDialogSubtitleExcelDto struct {
	fbsutils.FlatBuffer
	LocalizeJp      string `json:"localize_jp"`
	LocalizeKr      string `json:"localize_kr"`
	Separate        bool   `json:"separate"`
	Duration        int64  `json:"duration"`
	CharacterId     int64  `json:"character_id"`
	LocalizeCvGroup string `json:"localize_cv_group"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *CharacterDialogSubtitleExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	CharacterDialogSubtitleExcelStart(b)
	CharacterDialogSubtitleExcelAddLocalizeJp(b, b.CreateString(fbsutils.Convert(t.LocalizeJp, t.FlatBuffer.TableKey)))
	CharacterDialogSubtitleExcelAddLocalizeKr(b, b.CreateString(fbsutils.Convert(t.LocalizeKr, t.FlatBuffer.TableKey)))
	CharacterDialogSubtitleExcelAddSeparate(b, t.Separate)
	CharacterDialogSubtitleExcelAddDuration(b, fbsutils.Convert(t.Duration, t.FlatBuffer.TableKey))
	CharacterDialogSubtitleExcelAddCharacterId(b, fbsutils.Convert(t.CharacterId, t.FlatBuffer.TableKey))
	CharacterDialogSubtitleExcelAddLocalizeCvGroup(b, b.CreateString(fbsutils.Convert(t.LocalizeCvGroup, t.FlatBuffer.TableKey)))
	return CharacterDialogSubtitleExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *CharacterDialogSubtitleExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *CharacterDialogSubtitleExcelDto) UnmarshalMessage(e *CharacterDialogSubtitleExcel) error {
	t.LocalizeJp = fbsutils.Convert(string(e.LocalizeJp()), t.FlatBuffer.TableKey)
	t.LocalizeKr = fbsutils.Convert(string(e.LocalizeKr()), t.FlatBuffer.TableKey)
	t.Separate = e.Separate()
	t.Duration = fbsutils.Convert(e.Duration(), t.FlatBuffer.TableKey)
	t.CharacterId = fbsutils.Convert(e.CharacterId(), t.FlatBuffer.TableKey)
	t.LocalizeCvGroup = fbsutils.Convert(string(e.LocalizeCvGroup()), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *CharacterDialogSubtitleExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsCharacterDialogSubtitleExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (CharacterDialogSubtitleExcelDto) FlatDataName() string {
	return "CharacterDialogSubtitleExcel"
}
