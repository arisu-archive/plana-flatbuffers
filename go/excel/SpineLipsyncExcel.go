// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package excel

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type SpineLipsyncExcel struct {
	_tab flatbuffers.Table
}

func GetRootAsSpineLipsyncExcel(buf []byte, offset flatbuffers.UOffsetT) *SpineLipsyncExcel {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &SpineLipsyncExcel{}
	x.Init(buf, n+offset)
	return x
}

func GetSizePrefixedRootAsSpineLipsyncExcel(buf []byte, offset flatbuffers.UOffsetT) *SpineLipsyncExcel {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &SpineLipsyncExcel{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func (rcv *SpineLipsyncExcel) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *SpineLipsyncExcel) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *SpineLipsyncExcel) AnimJson() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *SpineLipsyncExcel) VoiceId() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *SpineLipsyncExcel) MutateVoiceId(n uint32) bool {
	return rcv._tab.MutateUint32Slot(6, n)
}

func SpineLipsyncExcelStart(builder *flatbuffers.Builder) {
	builder.StartObject(2)
}
func SpineLipsyncExcelAddAnimJson(builder *flatbuffers.Builder, animJson flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(animJson), 0)
}
func SpineLipsyncExcelAddVoiceId(builder *flatbuffers.Builder, voiceId uint32) {
	builder.PrependUint32Slot(1, voiceId, 0)
}
func SpineLipsyncExcelEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
