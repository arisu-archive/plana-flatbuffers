// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// MinigameCCGOpenDialogExcelDto represents a FlatBuffers table
type MinigameCCGOpenDialogExcelDto struct {
	fbsutils.FlatBuffer
	Voice         uint32 `json:"voice"`
	Duration      int64  `json:"duration"`
	Dialog        uint32 `json:"dialog"`
	ConditionCard int64  `json:"condition_card"`
	PlayOrder     int32  `json:"play_order"`
	DialogId      int64  `json:"dialog_id"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *MinigameCCGOpenDialogExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	MinigameCCGOpenDialogExcelStart(b)
	MinigameCCGOpenDialogExcelAddVoice(b, fbsutils.Convert(t.Voice, t.FlatBuffer.TableKey))
	MinigameCCGOpenDialogExcelAddDuration(b, fbsutils.Convert(t.Duration, t.FlatBuffer.TableKey))
	MinigameCCGOpenDialogExcelAddDialog(b, fbsutils.Convert(t.Dialog, t.FlatBuffer.TableKey))
	MinigameCCGOpenDialogExcelAddConditionCard(b, fbsutils.Convert(t.ConditionCard, t.FlatBuffer.TableKey))
	MinigameCCGOpenDialogExcelAddPlayOrder(b, fbsutils.Convert(t.PlayOrder, t.FlatBuffer.TableKey))
	MinigameCCGOpenDialogExcelAddDialogId(b, fbsutils.Convert(t.DialogId, t.FlatBuffer.TableKey))
	return MinigameCCGOpenDialogExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *MinigameCCGOpenDialogExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *MinigameCCGOpenDialogExcelDto) UnmarshalMessage(e *MinigameCCGOpenDialogExcel) error {
	t.Voice = fbsutils.Convert(e.Voice(), t.FlatBuffer.TableKey)
	t.Duration = fbsutils.Convert(e.Duration(), t.FlatBuffer.TableKey)
	t.Dialog = fbsutils.Convert(e.Dialog(), t.FlatBuffer.TableKey)
	t.ConditionCard = fbsutils.Convert(e.ConditionCard(), t.FlatBuffer.TableKey)
	t.PlayOrder = fbsutils.Convert(e.PlayOrder(), t.FlatBuffer.TableKey)
	t.DialogId = fbsutils.Convert(e.DialogId(), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *MinigameCCGOpenDialogExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsMinigameCCGOpenDialogExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (MinigameCCGOpenDialogExcelDto) FlatDataName() string {
	return "MinigameCCGOpenDialogExcel"
}
