// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// BattleLevelFactorExcelDto represents a FlatBuffers table
type BattleLevelFactorExcelDto struct {
	fbsutils.FlatBuffer
	LevelDiff  int32 `json:"level_diff"`
	DamageRate int64 `json:"damage_rate"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *BattleLevelFactorExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	BattleLevelFactorExcelStart(b)
	BattleLevelFactorExcelAddLevelDiff(b, fbsutils.Convert(t.LevelDiff, t.FlatBuffer.TableKey))
	BattleLevelFactorExcelAddDamageRate(b, fbsutils.Convert(t.DamageRate, t.FlatBuffer.TableKey))
	return BattleLevelFactorExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *BattleLevelFactorExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *BattleLevelFactorExcelDto) UnmarshalMessage(e *BattleLevelFactorExcel) error {
	t.LevelDiff = fbsutils.Convert(e.LevelDiff(), t.FlatBuffer.TableKey)
	t.DamageRate = fbsutils.Convert(e.DamageRate(), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *BattleLevelFactorExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsBattleLevelFactorExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (BattleLevelFactorExcelDto) FlatDataName() string {
	return "BattleLevelFactorExcel"
}
