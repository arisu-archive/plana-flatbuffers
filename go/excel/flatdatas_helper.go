package excel

import (
	"reflect"

	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
)

var fbs = map[string]reflect.Type{
	"academyfavorscheduleexcel": reflect.TypeOf((*AcademyFavorScheduleExcelDto)(nil)).Elem(),
	"academylocationexcel": reflect.TypeOf((*AcademyLocationExcelDto)(nil)).Elem(),
	"academylocationrankexcel": reflect.TypeOf((*AcademyLocationRankExcelDto)(nil)).Elem(),
	"academymessangerexcel": reflect.TypeOf((*AcademyMessangerExcelDto)(nil)).Elem(),
	"academyrewardexcel": reflect.TypeOf((*AcademyRewardExcelDto)(nil)).Elem(),
	"academyticketexcel": reflect.TypeOf((*AcademyTicketExcelDto)(nil)).Elem(),
	"academyzoneexcel": reflect.TypeOf((*AcademyZoneExcelDto)(nil)).Elem(),
	"accountlevelexcel": reflect.TypeOf((*AccountLevelExcelDto)(nil)).Elem(),
	"accountlevelrewardexcel": reflect.TypeOf((*AccountLevelRewardExcelDto)(nil)).Elem(),
	"arenalevelsectionexcel": reflect.TypeOf((*ArenaLevelSectionExcelDto)(nil)).Elem(),
	"arenamapexcel": reflect.TypeOf((*ArenaMapExcelDto)(nil)).Elem(),
	"arenanpcexcel": reflect.TypeOf((*ArenaNPCExcelDto)(nil)).Elem(),
	"arenarewardexcel": reflect.TypeOf((*ArenaRewardExcelDto)(nil)).Elem(),
	"arenaseasoncloserewardexcel": reflect.TypeOf((*ArenaSeasonCloseRewardExcelDto)(nil)).Elem(),
	"arenaseasonexcel": reflect.TypeOf((*ArenaSeasonExcelDto)(nil)).Elem(),
	"assistechelontypeconvertexcel": reflect.TypeOf((*AssistEchelonTypeConvertExcelDto)(nil)).Elem(),
	"attendanceexcel": reflect.TypeOf((*AttendanceExcelDto)(nil)).Elem(),
	"attendancerewardexcel": reflect.TypeOf((*AttendanceRewardExcelDto)(nil)).Elem(),
	"audioanimatorexcel": reflect.TypeOf((*AudioAnimatorExcelDto)(nil)).Elem(),
	"battlepassexplimitexcel": reflect.TypeOf((*BattlePassExpLimitExcelDto)(nil)).Elem(),
	"battlepassflavortextexcel": reflect.TypeOf((*BattlePassFlavorTextExcelDto)(nil)).Elem(),
	"battlepassinfoexcel": reflect.TypeOf((*BattlePassInfoExcelDto)(nil)).Elem(),
	"battlepasslevelexcel": reflect.TypeOf((*BattlePassLevelExcelDto)(nil)).Elem(),
	"battlepassmissionexcel": reflect.TypeOf((*BattlePassMissionExcelDto)(nil)).Elem(),
	"battlepassrewardexcel": reflect.TypeOf((*BattlePassRewardExcelDto)(nil)).Elem(),
	"bgmexcel": reflect.TypeOf((*BGMExcelDto)(nil)).Elem(),
	"bgmraidexcel": reflect.TypeOf((*BGMRaidExcelDto)(nil)).Elem(),
	"bgmuiexcel": reflect.TypeOf((*BGMUIExcelDto)(nil)).Elem(),
	"cafeinfoexcel": reflect.TypeOf((*CafeInfoExcelDto)(nil)).Elem(),
	"cafeinteractionexcel": reflect.TypeOf((*CafeInteractionExcelDto)(nil)).Elem(),
	"cafeproductionexcel": reflect.TypeOf((*CafeProductionExcelDto)(nil)).Elem(),
	"caferankexcel": reflect.TypeOf((*CafeRankExcelDto)(nil)).Elem(),
	"cameraexcel": reflect.TypeOf((*CameraExcelDto)(nil)).Elem(),
	"campaignchapterexcel": reflect.TypeOf((*CampaignChapterExcelDto)(nil)).Elem(),
	"campaignchapterrewardexcel": reflect.TypeOf((*CampaignChapterRewardExcelDto)(nil)).Elem(),
	"campaignstageexcel": reflect.TypeOf((*CampaignStageExcelDto)(nil)).Elem(),
	"campaignstagerewardexcel": reflect.TypeOf((*CampaignStageRewardExcelDto)(nil)).Elem(),
	"campaignstrategyobjectexcel": reflect.TypeOf((*CampaignStrategyObjectExcelDto)(nil)).Elem(),
	"campaignunitexcel": reflect.TypeOf((*CampaignUnitExcelDto)(nil)).Elem(),
	"characteracademytagsexcel": reflect.TypeOf((*CharacterAcademyTagsExcelDto)(nil)).Elem(),
	"characterdialogbattlepassexcel": reflect.TypeOf((*CharacterDialogBattlePassExcelDto)(nil)).Elem(),
	"characterdialogemojiexcel": reflect.TypeOf((*CharacterDialogEmojiExcelDto)(nil)).Elem(),
	"characterdialogeventexcel": reflect.TypeOf((*CharacterDialogEventExcelDto)(nil)).Elem(),
	"characterdialogexcel": reflect.TypeOf((*CharacterDialogExcelDto)(nil)).Elem(),
	"characterdialogsubtitleexcel": reflect.TypeOf((*CharacterDialogSubtitleExcelDto)(nil)).Elem(),
	"charactergearexcel": reflect.TypeOf((*CharacterGearExcelDto)(nil)).Elem(),
	"charactergearlevelexcel": reflect.TypeOf((*CharacterGearLevelExcelDto)(nil)).Elem(),
	"characterpotentialexcel": reflect.TypeOf((*CharacterPotentialExcelDto)(nil)).Elem(),
	"characterpotentialrewardexcel": reflect.TypeOf((*CharacterPotentialRewardExcelDto)(nil)).Elem(),
	"characterpotentialstatexcel": reflect.TypeOf((*CharacterPotentialStatExcelDto)(nil)).Elem(),
	"charactervoiceexcel": reflect.TypeOf((*CharacterVoiceExcelDto)(nil)).Elem(),
	"charactervoicesubtitleexcel": reflect.TypeOf((*CharacterVoiceSubtitleExcelDto)(nil)).Elem(),
	"characterweaponexcel": reflect.TypeOf((*CharacterWeaponExcelDto)(nil)).Elem(),
	"characterweaponexpbonusexcel": reflect.TypeOf((*CharacterWeaponExpBonusExcelDto)(nil)).Elem(),
	"characterweaponlevelexcel": reflect.TypeOf((*CharacterWeaponLevelExcelDto)(nil)).Elem(),
	"cheatcodelistexcel": reflect.TypeOf((*CheatCodeListExcelDto)(nil)).Elem(),
	"clanassistslotexcel": reflect.TypeOf((*ClanAssistSlotExcelDto)(nil)).Elem(),
	"clanchattingemojiexcel": reflect.TypeOf((*ClanChattingEmojiExcelDto)(nil)).Elem(),
	"clanrewardexcel": reflect.TypeOf((*ClanRewardExcelDto)(nil)).Elem(),
	"combatemojiexcel": reflect.TypeOf((*CombatEmojiExcelDto)(nil)).Elem(),
	"conquestcalculateexcel": reflect.TypeOf((*ConquestCalculateExcelDto)(nil)).Elem(),
	"conquestcamerasettingexcel": reflect.TypeOf((*ConquestCameraSettingExcelDto)(nil)).Elem(),
	"conquesterosionexcel": reflect.TypeOf((*ConquestErosionExcelDto)(nil)).Elem(),
	"conquesterosionunitexcel": reflect.TypeOf((*ConquestErosionUnitExcelDto)(nil)).Elem(),
	"conquesteventexcel": reflect.TypeOf((*ConquestEventExcelDto)(nil)).Elem(),
	"conquestgroupbonusexcel": reflect.TypeOf((*ConquestGroupBonusExcelDto)(nil)).Elem(),
	"conquestgroupbuffexcel": reflect.TypeOf((*ConquestGroupBuffExcelDto)(nil)).Elem(),
	"conquestmapexcel": reflect.TypeOf((*ConquestMapExcelDto)(nil)).Elem(),
	"conquestobjectexcel": reflect.TypeOf((*ConquestObjectExcelDto)(nil)).Elem(),
	"conquestplayguideexcel": reflect.TypeOf((*ConquestPlayGuideExcelDto)(nil)).Elem(),
	"conquestprogressresourceexcel": reflect.TypeOf((*ConquestProgressResourceExcelDto)(nil)).Elem(),
	"conquestrewardexcel": reflect.TypeOf((*ConquestRewardExcelDto)(nil)).Elem(),
	"conquesttileexcel": reflect.TypeOf((*ConquestTileExcelDto)(nil)).Elem(),
	"conquestunexpectedeventexcel": reflect.TypeOf((*ConquestUnexpectedEventExcelDto)(nil)).Elem(),
	"conquestunitexcel": reflect.TypeOf((*ConquestUnitExcelDto)(nil)).Elem(),
	"contententercostreduceexcel": reflect.TypeOf((*ContentEnterCostReduceExcelDto)(nil)).Elem(),
	"contentsfeverexcel": reflect.TypeOf((*ContentsFeverExcelDto)(nil)).Elem(),
	"contentspoilerpopupexcel": reflect.TypeOf((*ContentSpoilerPopupExcelDto)(nil)).Elem(),
	"contentsscenarioexcel": reflect.TypeOf((*ContentsScenarioExcelDto)(nil)).Elem(),
	"contentsshortcutexcel": reflect.TypeOf((*ContentsShortcutExcelDto)(nil)).Elem(),
	"currencyexcel": reflect.TypeOf((*CurrencyExcelDto)(nil)).Elem(),
	"duplicatebonusexcel": reflect.TypeOf((*DuplicateBonusExcelDto)(nil)).Elem(),
	"eliminateraidrankingrewardexcel": reflect.TypeOf((*EliminateRaidRankingRewardExcelDto)(nil)).Elem(),
	"eliminateraidseasonmanageexcel": reflect.TypeOf((*EliminateRaidSeasonManageExcelDto)(nil)).Elem(),
	"eliminateraidstageexcel": reflect.TypeOf((*EliminateRaidStageExcelDto)(nil)).Elem(),
	"eliminateraidstagelimitedrewardexcel": reflect.TypeOf((*EliminateRaidStageLimitedRewardExcelDto)(nil)).Elem(),
	"eliminateraidstagerewardexcel": reflect.TypeOf((*EliminateRaidStageRewardExcelDto)(nil)).Elem(),
	"eliminateraidstageseasonrewardexcel": reflect.TypeOf((*EliminateRaidStageSeasonRewardExcelDto)(nil)).Elem(),
	"emblemexcel": reflect.TypeOf((*EmblemExcelDto)(nil)).Elem(),
	"equipmentexcel": reflect.TypeOf((*EquipmentExcelDto)(nil)).Elem(),
	"equipmentlevelexcel": reflect.TypeOf((*EquipmentLevelExcelDto)(nil)).Elem(),
	"equipmentstatexcel": reflect.TypeOf((*EquipmentStatExcelDto)(nil)).Elem(),
	"eventcontentnotifyexcel": reflect.TypeOf((*EventContentNotifyExcelDto)(nil)).Elem(),
	"eventcontentspoilerpopupexcel": reflect.TypeOf((*EventContentSpoilerPopupExcelDto)(nil)).Elem(),
	"eventcontenttreasurecellrewardexcel": reflect.TypeOf((*EventContentTreasureCellRewardExcelDto)(nil)).Elem(),
	"eventcontenttreasureexcel": reflect.TypeOf((*EventContentTreasureExcelDto)(nil)).Elem(),
	"eventcontenttreasurerewardexcel": reflect.TypeOf((*EventContentTreasureRewardExcelDto)(nil)).Elem(),
	"eventcontenttreasureroundexcel": reflect.TypeOf((*EventContentTreasureRoundExcelDto)(nil)).Elem(),
	"farmingdungeonlocationmanageexcel": reflect.TypeOf((*FarmingDungeonLocationManageExcelDto)(nil)).Elem(),
	"favorlevelexcel": reflect.TypeOf((*FavorLevelExcelDto)(nil)).Elem(),
	"favorlevelrewardexcel": reflect.TypeOf((*FavorLevelRewardExcelDto)(nil)).Elem(),
	"fixedechelonsettingexcel": reflect.TypeOf((*FixedEchelonSettingExcelDto)(nil)).Elem(),
	"fixedstrategyexcel": reflect.TypeOf((*FixedStrategyExcelDto)(nil)).Elem(),
	"formationlocationexcel": reflect.TypeOf((*FormationLocationExcelDto)(nil)).Elem(),
	"furnitureexcel": reflect.TypeOf((*FurnitureExcelDto)(nil)).Elem(),
	"furnituregroupexcel": reflect.TypeOf((*FurnitureGroupExcelDto)(nil)).Elem(),
	"furnituretemplateelementexcel": reflect.TypeOf((*FurnitureTemplateElementExcelDto)(nil)).Elem(),
	"furnituretemplateexcel": reflect.TypeOf((*FurnitureTemplateExcelDto)(nil)).Elem(),
	"gachacraftnodeexcel": reflect.TypeOf((*GachaCraftNodeExcelDto)(nil)).Elem(),
	"gachacraftnodegroupexcel": reflect.TypeOf((*GachaCraftNodeGroupExcelDto)(nil)).Elem(),
	"gachacraftopentagexcel": reflect.TypeOf((*GachaCraftOpenTagExcelDto)(nil)).Elem(),
	"gachaelementexcel": reflect.TypeOf((*GachaElementExcelDto)(nil)).Elem(),
	"gachaelementrecursiveexcel": reflect.TypeOf((*GachaElementRecursiveExcelDto)(nil)).Elem(),
	"gachagroupexcel": reflect.TypeOf((*GachaGroupExcelDto)(nil)).Elem(),
	"gachaselectpickupgroupexcel": reflect.TypeOf((*GachaSelectPickupGroupExcelDto)(nil)).Elem(),
	"goodsexcel": reflect.TypeOf((*GoodsExcelDto)(nil)).Elem(),
	"groundexcel": reflect.TypeOf((*GroundExcelDto)(nil)).Elem(),
	"groundmodulerewardexcel": reflect.TypeOf((*GroundModuleRewardExcelDto)(nil)).Elem(),
	"growthscorecalculationexcel": reflect.TypeOf((*GrowthScoreCalculationExcelDto)(nil)).Elem(),
	"guidemissionexcel": reflect.TypeOf((*GuideMissionExcelDto)(nil)).Elem(),
	"guidemissionopenstageconditionexcel": reflect.TypeOf((*GuideMissionOpenStageConditionExcelDto)(nil)).Elem(),
	"guidemissionseasonexcel": reflect.TypeOf((*GuideMissionSeasonExcelDto)(nil)).Elem(),
	"idcardbackgroundexcel": reflect.TypeOf((*IdCardBackgroundExcelDto)(nil)).Elem(),
	"informationexcel": reflect.TypeOf((*InformationExcelDto)(nil)).Elem(),
	"informationstrategyobjectexcel": reflect.TypeOf((*InformationStrategyObjectExcelDto)(nil)).Elem(),
	"itemexcel": reflect.TypeOf((*ItemExcelDto)(nil)).Elem(),
	"levelexpmastercoinexcel": reflect.TypeOf((*LevelExpMasterCoinExcelDto)(nil)).Elem(),
	"loadingimageexcel": reflect.TypeOf((*LoadingImageExcelDto)(nil)).Elem(),
	"localizecharprofilechangeexcel": reflect.TypeOf((*LocalizeCharProfileChangeExcelDto)(nil)).Elem(),
	"localizecodeinbuildexcel": reflect.TypeOf((*LocalizeCodeInBuildExcelDto)(nil)).Elem(),
	"localizeerrorexcel": reflect.TypeOf((*LocalizeErrorExcelDto)(nil)).Elem(),
	"localizeetcexcel": reflect.TypeOf((*LocalizeEtcExcelDto)(nil)).Elem(),
	"localizeexcel": reflect.TypeOf((*LocalizeExcelDto)(nil)).Elem(),
	"localizegachashopexcel": reflect.TypeOf((*LocalizeGachaShopExcelDto)(nil)).Elem(),
	"localizeskillexcel": reflect.TypeOf((*LocalizeSkillExcelDto)(nil)).Elem(),
	"logiceffectcommonvisualexcel": reflect.TypeOf((*LogicEffectCommonVisualExcelDto)(nil)).Elem(),
	"memorylobbyexcel": reflect.TypeOf((*MemoryLobbyExcelDto)(nil)).Elem(),
	"messagepopupexcel": reflect.TypeOf((*MessagePopupExcelDto)(nil)).Elem(),
	"minigameaudioanimatorexcel": reflect.TypeOf((*MiniGameAudioAnimatorExcelDto)(nil)).Elem(),
	"minigameccgcardexcel": reflect.TypeOf((*MinigameCCGCardExcelDto)(nil)).Elem(),
	"minigameccgcharacterexcel": reflect.TypeOf((*MinigameCCGCharacterExcelDto)(nil)).Elem(),
	"minigameccgenemyexcel": reflect.TypeOf((*MinigameCCGEnemyExcelDto)(nil)).Elem(),
	"minigameccgenemygroupexcel": reflect.TypeOf((*MinigameCCGEnemyGroupExcelDto)(nil)).Elem(),
	"minigameccginfoexcel": reflect.TypeOf((*MinigameCCGInfoExcelDto)(nil)).Elem(),
	"minigameccglevelexcel": reflect.TypeOf((*MinigameCCGLevelExcelDto)(nil)).Elem(),
	"minigameccglevelnodeexcel": reflect.TypeOf((*MinigameCCGLevelNodeExcelDto)(nil)).Elem(),
	"minigameccglevelstageexcel": reflect.TypeOf((*MinigameCCGLevelStageExcelDto)(nil)).Elem(),
	"minigameccglogiceffectexcel": reflect.TypeOf((*MinigameCCGLogicEffectExcelDto)(nil)).Elem(),
	"minigameccgopendialogexcel": reflect.TypeOf((*MinigameCCGOpenDialogExcelDto)(nil)).Elem(),
	"minigameccgperkexcel": reflect.TypeOf((*MinigameCCGPerkExcelDto)(nil)).Elem(),
	"minigameccgrewardcardexcel": reflect.TypeOf((*MinigameCCGRewardCardExcelDto)(nil)).Elem(),
	"minigameccgrewardcardrateexcel": reflect.TypeOf((*MinigameCCGRewardCardRateExcelDto)(nil)).Elem(),
	"minigameccgrewarditemexcel": reflect.TypeOf((*MinigameCCGRewardItemExcelDto)(nil)).Elem(),
	"minigameccgskillexcel": reflect.TypeOf((*MinigameCCGSkillExcelDto)(nil)).Elem(),
	"minigameccgstartdeckcardexcel": reflect.TypeOf((*MinigameCCGStartDeckCardExcelDto)(nil)).Elem(),
	"minigameccgstartdeckcharacterexcel": reflect.TypeOf((*MinigameCCGStartDeckCharacterExcelDto)(nil)).Elem(),
	"minigamedefensecharacterbanexcel": reflect.TypeOf((*MiniGameDefenseCharacterBanExcelDto)(nil)).Elem(),
	"minigamedefensefixedstatexcel": reflect.TypeOf((*MiniGameDefenseFixedStatExcelDto)(nil)).Elem(),
	"minigamedefenseinfoexcel": reflect.TypeOf((*MiniGameDefenseInfoExcelDto)(nil)).Elem(),
	"minigamedefensestageexcel": reflect.TypeOf((*MiniGameDefenseStageExcelDto)(nil)).Elem(),
	"minigamedreamcollectionscenarioexcel": reflect.TypeOf((*MiniGameDreamCollectionScenarioExcelDto)(nil)).Elem(),
	"minigamedreamdailypointexcel": reflect.TypeOf((*MiniGameDreamDailyPointExcelDto)(nil)).Elem(),
	"minigamedreamendingexcel": reflect.TypeOf((*MiniGameDreamEndingExcelDto)(nil)).Elem(),
	"minigamedreamendingrewardexcel": reflect.TypeOf((*MiniGameDreamEndingRewardExcelDto)(nil)).Elem(),
	"minigamedreaminfoexcel": reflect.TypeOf((*MiniGameDreamInfoExcelDto)(nil)).Elem(),
	"minigamedreamparameterexcel": reflect.TypeOf((*MiniGameDreamParameterExcelDto)(nil)).Elem(),
	"minigamedreamreplayscenarioexcel": reflect.TypeOf((*MiniGameDreamReplayScenarioExcelDto)(nil)).Elem(),
	"minigamedreamscheduleexcel": reflect.TypeOf((*MiniGameDreamScheduleExcelDto)(nil)).Elem(),
	"minigamedreamscheduleresultexcel": reflect.TypeOf((*MiniGameDreamScheduleResultExcelDto)(nil)).Elem(),
	"minigamedreamtimelineexcel": reflect.TypeOf((*MiniGameDreamTimelineExcelDto)(nil)).Elem(),
	"minigamedreamvoiceexcel": reflect.TypeOf((*MinigameDreamVoiceExcelDto)(nil)).Elem(),
	"minigamemissionexcel": reflect.TypeOf((*MiniGameMissionExcelDto)(nil)).Elem(),
	"minigameplayguideexcel": reflect.TypeOf((*MiniGamePlayGuideExcelDto)(nil)).Elem(),
	"minigamerhythmbgmexcel": reflect.TypeOf((*MiniGameRhythmBgmExcelDto)(nil)).Elem(),
	"minigamerhythmexcel": reflect.TypeOf((*MiniGameRhythmExcelDto)(nil)).Elem(),
	"minigameroadpuzzleadditionalrewardexcel": reflect.TypeOf((*MiniGameRoadPuzzleAdditionalRewardExcelDto)(nil)).Elem(),
	"minigameroadpuzzleinfoexcel": reflect.TypeOf((*MiniGameRoadPuzzleInfoExcelDto)(nil)).Elem(),
	"minigameroadpuzzlemapexcel": reflect.TypeOf((*MinigameRoadPuzzleMapExcelDto)(nil)).Elem(),
	"minigameroadpuzzlemaptileexcel": reflect.TypeOf((*MinigameRoadPuzzleMapTileExcelDto)(nil)).Elem(),
	"minigameroadpuzzlerailsetrewardexcel": reflect.TypeOf((*MiniGameRoadPuzzleRailSetRewardExcelDto)(nil)).Elem(),
	"minigameroadpuzzlerailtileexcel": reflect.TypeOf((*MinigameRoadPuzzleRailTileExcelDto)(nil)).Elem(),
	"minigameroadpuzzlerewardexcel": reflect.TypeOf((*MiniGameRoadPuzzleRewardExcelDto)(nil)).Elem(),
	"minigameroadpuzzleroadroundexcel": reflect.TypeOf((*MinigameRoadPuzzleRoadRoundExcelDto)(nil)).Elem(),
	"minigameroadpuzzlevoiceexcel": reflect.TypeOf((*MiniGameRoadPuzzleVoiceExcelDto)(nil)).Elem(),
	"minigameshootingcharacterexcel": reflect.TypeOf((*MiniGameShootingCharacterExcelDto)(nil)).Elem(),
	"minigameshootinggeasexcel": reflect.TypeOf((*MiniGameShootingGeasExcelDto)(nil)).Elem(),
	"minigameshootingstageexcel": reflect.TypeOf((*MiniGameShootingStageExcelDto)(nil)).Elem(),
	"minigameshootingstagerewardexcel": reflect.TypeOf((*MiniGameShootingStageRewardExcelDto)(nil)).Elem(),
	"minigametbgdiceexcel": reflect.TypeOf((*MinigameTBGDiceExcelDto)(nil)).Elem(),
	"minigametbgencounterexcel": reflect.TypeOf((*MinigameTBGEncounterExcelDto)(nil)).Elem(),
	"minigametbgencounteroptionexcel": reflect.TypeOf((*MinigameTBGEncounterOptionExcelDto)(nil)).Elem(),
	"minigametbgencounterrewardexcel": reflect.TypeOf((*MinigameTBGEncounterRewardExcelDto)(nil)).Elem(),
	"minigametbgitemexcel": reflect.TypeOf((*MinigameTBGItemExcelDto)(nil)).Elem(),
	"minigametbgobjectexcel": reflect.TypeOf((*MinigameTBGObjectExcelDto)(nil)).Elem(),
	"minigametbgseasonexcel": reflect.TypeOf((*MinigameTBGSeasonExcelDto)(nil)).Elem(),
	"minigametbgthemaexcel": reflect.TypeOf((*MinigameTBGThemaExcelDto)(nil)).Elem(),
	"minigametbgthemarewardexcel": reflect.TypeOf((*MiniGameTBGThemaRewardExcelDto)(nil)).Elem(),
	"minigametbgvoiceexcel": reflect.TypeOf((*MinigameTBGVoiceExcelDto)(nil)).Elem(),
	"missionemergencycompleteexcel": reflect.TypeOf((*MissionEmergencyCompleteExcelDto)(nil)).Elem(),
	"missionexcel": reflect.TypeOf((*MissionExcelDto)(nil)).Elem(),
	"multifloorraidrewardexcel": reflect.TypeOf((*MultiFloorRaidRewardExcelDto)(nil)).Elem(),
	"multifloorraidseasonmanageexcel": reflect.TypeOf((*MultiFloorRaidSeasonManageExcelDto)(nil)).Elem(),
	"multifloorraidstageexcel": reflect.TypeOf((*MultiFloorRaidStageExcelDto)(nil)).Elem(),
	"multifloorraidstatchangeexcel": reflect.TypeOf((*MultiFloorRaidStatChangeExcelDto)(nil)).Elem(),
	"obstaclestatexcel": reflect.TypeOf((*ObstacleStatExcelDto)(nil)).Elem(),
	"openconditionexcel": reflect.TypeOf((*OpenConditionExcelDto)(nil)).Elem(),
	"operatorexcel": reflect.TypeOf((*OperatorExcelDto)(nil)).Elem(),
	"parcelautosynthexcel": reflect.TypeOf((*ParcelAutoSynthExcelDto)(nil)).Elem(),
	"pickupduplicatebonusexcel": reflect.TypeOf((*PickupDuplicateBonusExcelDto)(nil)).Elem(),
	"pickupfirstgetbonusexcel": reflect.TypeOf((*PickupFirstGetBonusExcelDto)(nil)).Elem(),
	"possessioncheckexcel": reflect.TypeOf((*PossessionCheckExcelDto)(nil)).Elem(),
	"presetcharactergroupexcel": reflect.TypeOf((*PresetCharacterGroupExcelDto)(nil)).Elem(),
	"presetcharactergroupsettingexcel": reflect.TypeOf((*PresetCharacterGroupSettingExcelDto)(nil)).Elem(),
	"presetparcelsexcel": reflect.TypeOf((*PresetParcelsExcelDto)(nil)).Elem(),
	"productbattlepassexcel": reflect.TypeOf((*ProductBattlePassExcelDto)(nil)).Elem(),
	"productexcel": reflect.TypeOf((*ProductExcelDto)(nil)).Elem(),
	"productmonthlyexcel": reflect.TypeOf((*ProductMonthlyExcelDto)(nil)).Elem(),
	"productselectexcel": reflect.TypeOf((*ProductSelectExcelDto)(nil)).Elem(),
	"productselectiongroupexcel": reflect.TypeOf((*ProductSelectionGroupExcelDto)(nil)).Elem(),
	"raidrankingrewardexcel": reflect.TypeOf((*RaidRankingRewardExcelDto)(nil)).Elem(),
	"raidseasonmanageexcel": reflect.TypeOf((*RaidSeasonManageExcelDto)(nil)).Elem(),
	"raidstageexcel": reflect.TypeOf((*RaidStageExcelDto)(nil)).Elem(),
	"raidstagerewardexcel": reflect.TypeOf((*RaidStageRewardExcelDto)(nil)).Elem(),
	"raidstageseasonrewardexcel": reflect.TypeOf((*RaidStageSeasonRewardExcelDto)(nil)).Elem(),
	"recipeexcel": reflect.TypeOf((*RecipeExcelDto)(nil)).Elem(),
	"recipeingredientexcel": reflect.TypeOf((*RecipeIngredientExcelDto)(nil)).Elem(),
	"recipeselectionautouseexcel": reflect.TypeOf((*RecipeSelectionAutoUseExcelDto)(nil)).Elem(),
	"recipeselectiongroupexcel": reflect.TypeOf((*RecipeSelectionGroupExcelDto)(nil)).Elem(),
	"scenariobgeffectexcel": reflect.TypeOf((*ScenarioBGEffectExcelDto)(nil)).Elem(),
	"scenariobgnameexcel": reflect.TypeOf((*ScenarioBGNameExcelDto)(nil)).Elem(),
	"scenariocharacteremotionexcel": reflect.TypeOf((*ScenarioCharacterEmotionExcelDto)(nil)).Elem(),
	"scenariocharacternameexcel": reflect.TypeOf((*ScenarioCharacterNameExcelDto)(nil)).Elem(),
	"scenariocharactersituationsetexcel": reflect.TypeOf((*ScenarioCharacterSituationSetExcelDto)(nil)).Elem(),
	"scenariocontentcollectionexcel": reflect.TypeOf((*ScenarioContentCollectionExcelDto)(nil)).Elem(),
	"scenarioeffectexcel": reflect.TypeOf((*ScenarioEffectExcelDto)(nil)).Elem(),
	"scenariomodeexcel": reflect.TypeOf((*ScenarioModeExcelDto)(nil)).Elem(),
	"scenariomoderewardexcel": reflect.TypeOf((*ScenarioModeRewardExcelDto)(nil)).Elem(),
	"scenarioresourceinfoexcel": reflect.TypeOf((*ScenarioResourceInfoExcelDto)(nil)).Elem(),
	"scenarioscriptexcel": reflect.TypeOf((*ScenarioScriptExcelDto)(nil)).Elem(),
	"scenariotransitionexcel": reflect.TypeOf((*ScenarioTransitionExcelDto)(nil)).Elem(),
	"schooldungeonrewardexcel": reflect.TypeOf((*SchoolDungeonRewardExcelDto)(nil)).Elem(),
	"schooldungeonstageexcel": reflect.TypeOf((*SchoolDungeonStageExcelDto)(nil)).Elem(),
	"serviceactionexcel": reflect.TypeOf((*ServiceActionExcelDto)(nil)).Elem(),
	"shiftingcraftrecipeexcel": reflect.TypeOf((*ShiftingCraftRecipeExcelDto)(nil)).Elem(),
	"shopcashexcel": reflect.TypeOf((*ShopCashExcelDto)(nil)).Elem(),
	"shopcashscenarioresourceinfoexcel": reflect.TypeOf((*ShopCashScenarioResourceInfoExcelDto)(nil)).Elem(),
	"shopexcel": reflect.TypeOf((*ShopExcelDto)(nil)).Elem(),
	"shopfilterclassifiedexcel": reflect.TypeOf((*ShopFilterClassifiedExcelDto)(nil)).Elem(),
	"shopfreerecruitexcel": reflect.TypeOf((*ShopFreeRecruitExcelDto)(nil)).Elem(),
	"shopfreerecruitperiodexcel": reflect.TypeOf((*ShopFreeRecruitPeriodExcelDto)(nil)).Elem(),
	"shopinfoexcel": reflect.TypeOf((*ShopInfoExcelDto)(nil)).Elem(),
	"shoprecruitexcel": reflect.TypeOf((*ShopRecruitExcelDto)(nil)).Elem(),
	"shoprefreshexcel": reflect.TypeOf((*ShopRefreshExcelDto)(nil)).Elem(),
	"shoptabgroupexcel": reflect.TypeOf((*ShopTabGroupExcelDto)(nil)).Elem(),
	"shortcuttypeexcel": reflect.TypeOf((*ShortcutTypeExcelDto)(nil)).Elem(),
	"skilladditionaltooltipexcel": reflect.TypeOf((*SkillAdditionalTooltipExcelDto)(nil)).Elem(),
	"skillexcel": reflect.TypeOf((*SkillExcelDto)(nil)).Elem(),
	"skillselectextooltipexcel": reflect.TypeOf((*SkillSelectExTooltipExcelDto)(nil)).Elem(),
	"sounduiexcel": reflect.TypeOf((*SoundUIExcelDto)(nil)).Elem(),
	"spinelipsyncexcel": reflect.TypeOf((*SpineLipsyncExcelDto)(nil)).Elem(),
	"statlevelinterpolationexcel": reflect.TypeOf((*StatLevelInterpolationExcelDto)(nil)).Elem(),
	"stickergroupexcel": reflect.TypeOf((*StickerGroupExcelDto)(nil)).Elem(),
	"stickerpagecontentexcel": reflect.TypeOf((*StickerPageContentExcelDto)(nil)).Elem(),
	"storystrategyexcel": reflect.TypeOf((*StoryStrategyExcelDto)(nil)).Elem(),
	"strategyobjectbuffdefineexcel": reflect.TypeOf((*StrategyObjectBuffDefineExcelDto)(nil)).Elem(),
	"tacticentityeffectfilterexcel": reflect.TypeOf((*TacticEntityEffectFilterExcelDto)(nil)).Elem(),
	"timeattackdungeonexcel": reflect.TypeOf((*TimeAttackDungeonExcelDto)(nil)).Elem(),
	"timeattackdungeongeasexcel": reflect.TypeOf((*TimeAttackDungeonGeasExcelDto)(nil)).Elem(),
	"timeattackdungeonrewardexcel": reflect.TypeOf((*TimeAttackDungeonRewardExcelDto)(nil)).Elem(),
	"timeattackdungeonseasonmanageexcel": reflect.TypeOf((*TimeAttackDungeonSeasonManageExcelDto)(nil)).Elem(),
	"toastexcel": reflect.TypeOf((*ToastExcelDto)(nil)).Elem(),
	"trophycollectionexcel": reflect.TypeOf((*TrophyCollectionExcelDto)(nil)).Elem(),
	"tutorialcharacterdialogexcel": reflect.TypeOf((*TutorialCharacterDialogExcelDto)(nil)).Elem(),
	"tutorialexcel": reflect.TypeOf((*TutorialExcelDto)(nil)).Elem(),
	"tutorialfailureimageexcel": reflect.TypeOf((*TutorialFailureImageExcelDto)(nil)).Elem(),
	"undercoverstageexcel": reflect.TypeOf((*UnderCoverStageExcelDto)(nil)).Elem(),
	"videoexcel": reflect.TypeOf((*VideoExcelDto)(nil)).Elem(),
	"voicecommonexcel": reflect.TypeOf((*VoiceCommonExcelDto)(nil)).Elem(),
	"voiceexcel": reflect.TypeOf((*VoiceExcelDto)(nil)).Elem(),
	"voicelogiceffectexcel": reflect.TypeOf((*VoiceLogicEffectExcelDto)(nil)).Elem(),
	"voiceroomexceptionexcel": reflect.TypeOf((*VoiceRoomExceptionExcelDto)(nil)).Elem(),
	"voicespineexcel": reflect.TypeOf((*VoiceSpineExcelDto)(nil)).Elem(),
	"voicetimelineexcel": reflect.TypeOf((*VoiceTimelineExcelDto)(nil)).Elem(),
	"weekdungeonexcel": reflect.TypeOf((*WeekDungeonExcelDto)(nil)).Elem(),
	"weekdungeongroupbuffexcel": reflect.TypeOf((*WeekDungeonGroupBuffExcelDto)(nil)).Elem(),
	"weekdungeonopenscheduleexcel": reflect.TypeOf((*WeekDungeonOpenScheduleExcelDto)(nil)).Elem(),
	"weekdungeonrewardexcel": reflect.TypeOf((*WeekDungeonRewardExcelDto)(nil)).Elem(),
	"worldraidbossgroupexcel": reflect.TypeOf((*WorldRaidBossGroupExcelDto)(nil)).Elem(),
	"worldraidconditionexcel": reflect.TypeOf((*WorldRaidConditionExcelDto)(nil)).Elem(),
	"worldraidfavorbuffexcel": reflect.TypeOf((*WorldRaidFavorBuffExcelDto)(nil)).Elem(),
	"worldraidseasonmanageexcel": reflect.TypeOf((*WorldRaidSeasonManageExcelDto)(nil)).Elem(),
	"worldraidstageexcel": reflect.TypeOf((*WorldRaidStageExcelDto)(nil)).Elem(),
	"worldraidstagerewardexcel": reflect.TypeOf((*WorldRaidStageRewardExcelDto)(nil)).Elem(),
}

func GetFlatDataByName(name string) fbsutils.FlatData {
	if data, ok := fbs[name]; ok {
		return reflect.New(data).Interface().(fbsutils.FlatData)
	}
	return nil
}
