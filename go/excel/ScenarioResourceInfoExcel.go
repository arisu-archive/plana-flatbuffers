// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package excel

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type ScenarioResourceInfoExcel struct {
	_tab flatbuffers.Table
}

func GetRootAsScenarioResourceInfoExcel(buf []byte, offset flatbuffers.UOffsetT) *ScenarioResourceInfoExcel {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &ScenarioResourceInfoExcel{}
	x.Init(buf, n+offset)
	return x
}

func GetSizePrefixedRootAsScenarioResourceInfoExcel(buf []byte, offset flatbuffers.UOffsetT) *ScenarioResourceInfoExcel {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &ScenarioResourceInfoExcel{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func (rcv *ScenarioResourceInfoExcel) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *ScenarioResourceInfoExcel) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *ScenarioResourceInfoExcel) AudioName() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *ScenarioResourceInfoExcel) BgmId() int64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.GetInt64(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *ScenarioResourceInfoExcel) MutateBgmId(n int64) bool {
	return rcv._tab.MutateInt64Slot(6, n)
}

func (rcv *ScenarioResourceInfoExcel) Id() int64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.GetInt64(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *ScenarioResourceInfoExcel) MutateId(n int64) bool {
	return rcv._tab.MutateInt64Slot(8, n)
}

func (rcv *ScenarioResourceInfoExcel) LobbyAniPath() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *ScenarioResourceInfoExcel) LocalizeId() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(12))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *ScenarioResourceInfoExcel) MutateLocalizeId(n uint32) bool {
	return rcv._tab.MutateUint32Slot(12, n)
}

func (rcv *ScenarioResourceInfoExcel) MovieCgPath() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(14))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *ScenarioResourceInfoExcel) PriorityOrder() int64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(16))
	if o != 0 {
		return rcv._tab.GetInt64(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *ScenarioResourceInfoExcel) MutatePriorityOrder(n int64) bool {
	return rcv._tab.MutateInt64Slot(16, n)
}

func (rcv *ScenarioResourceInfoExcel) PvDisplayOrder() int64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(18))
	if o != 0 {
		return rcv._tab.GetInt64(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *ScenarioResourceInfoExcel) MutatePvDisplayOrder(n int64) bool {
	return rcv._tab.MutateInt64Slot(18, n)
}

func (rcv *ScenarioResourceInfoExcel) Ratio() int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(20))
	if o != 0 {
		return rcv._tab.GetInt32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *ScenarioResourceInfoExcel) MutateRatio(n int32) bool {
	return rcv._tab.MutateInt32Slot(20, n)
}

func (rcv *ScenarioResourceInfoExcel) ScenarioModeId() int64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(22))
	if o != 0 {
		return rcv._tab.GetInt64(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *ScenarioResourceInfoExcel) MutateScenarioModeId(n int64) bool {
	return rcv._tab.MutateInt64Slot(22, n)
}

func (rcv *ScenarioResourceInfoExcel) SpinePath() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(24))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *ScenarioResourceInfoExcel) VideoId() int64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(26))
	if o != 0 {
		return rcv._tab.GetInt64(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *ScenarioResourceInfoExcel) MutateVideoId(n int64) bool {
	return rcv._tab.MutateInt64Slot(26, n)
}

func ScenarioResourceInfoExcelStart(builder *flatbuffers.Builder) {
	builder.StartObject(12)
}
func ScenarioResourceInfoExcelAddAudioName(builder *flatbuffers.Builder, audioName flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(audioName), 0)
}
func ScenarioResourceInfoExcelAddBgmId(builder *flatbuffers.Builder, bgmId int64) {
	builder.PrependInt64Slot(1, bgmId, 0)
}
func ScenarioResourceInfoExcelAddId(builder *flatbuffers.Builder, id int64) {
	builder.PrependInt64Slot(2, id, 0)
}
func ScenarioResourceInfoExcelAddLobbyAniPath(builder *flatbuffers.Builder, lobbyAniPath flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(3, flatbuffers.UOffsetT(lobbyAniPath), 0)
}
func ScenarioResourceInfoExcelAddLocalizeId(builder *flatbuffers.Builder, localizeId uint32) {
	builder.PrependUint32Slot(4, localizeId, 0)
}
func ScenarioResourceInfoExcelAddMovieCgPath(builder *flatbuffers.Builder, movieCgPath flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(5, flatbuffers.UOffsetT(movieCgPath), 0)
}
func ScenarioResourceInfoExcelAddPriorityOrder(builder *flatbuffers.Builder, priorityOrder int64) {
	builder.PrependInt64Slot(6, priorityOrder, 0)
}
func ScenarioResourceInfoExcelAddPvDisplayOrder(builder *flatbuffers.Builder, pvDisplayOrder int64) {
	builder.PrependInt64Slot(7, pvDisplayOrder, 0)
}
func ScenarioResourceInfoExcelAddRatio(builder *flatbuffers.Builder, ratio int32) {
	builder.PrependInt32Slot(8, ratio, 0)
}
func ScenarioResourceInfoExcelAddScenarioModeId(builder *flatbuffers.Builder, scenarioModeId int64) {
	builder.PrependInt64Slot(9, scenarioModeId, 0)
}
func ScenarioResourceInfoExcelAddSpinePath(builder *flatbuffers.Builder, spinePath flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(10, flatbuffers.UOffsetT(spinePath), 0)
}
func ScenarioResourceInfoExcelAddVideoId(builder *flatbuffers.Builder, videoId int64) {
	builder.PrependInt64Slot(11, videoId, 0)
}
func ScenarioResourceInfoExcelEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
