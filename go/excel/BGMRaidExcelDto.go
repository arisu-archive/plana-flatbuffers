// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// BGMRaidExcelDto represents a FlatBuffers table
type BGMRaidExcelDto struct {
	fbsutils.FlatBuffer
	StageId    int64 `json:"stage_id"`
	PhaseIndex int64 `json:"phase_index"`
	BgmId      int64 `json:"bgm_id"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *BGMRaidExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	BGMRaidExcelStart(b)
	BGMRaidExcelAddStageId(b, fbsutils.Convert(t.StageId, t.FlatBuffer.TableKey))
	BGMRaidExcelAddPhaseIndex(b, fbsutils.Convert(t.PhaseIndex, t.FlatBuffer.TableKey))
	BGMRaidExcelAddBgmId(b, fbsutils.Convert(t.BgmId, t.FlatBuffer.TableKey))
	return BGMRaidExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *BGMRaidExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *BGMRaidExcelDto) UnmarshalMessage(e *BGMRaidExcel) error {
	t.StageId = fbsutils.Convert(e.StageId(), t.FlatBuffer.TableKey)
	t.PhaseIndex = fbsutils.Convert(e.PhaseIndex(), t.FlatBuffer.TableKey)
	t.BgmId = fbsutils.Convert(e.BgmId(), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *BGMRaidExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsBGMRaidExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (BGMRaidExcelDto) FlatDataName() string {
	return "BGMRaidExcel"
}
