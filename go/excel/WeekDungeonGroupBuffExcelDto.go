// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// WeekDungeonGroupBuffExcelDto represents a FlatBuffers table
type WeekDungeonGroupBuffExcelDto struct {
	fbsutils.FlatBuffer
	WeekDungeonBuffId      int64  `json:"week_dungeon_buff_id"`
	School                 School `json:"school"`
	RecommandLocalizeEtcId uint32 `json:"recommand_localize_etc_id"`
	FormationLocalizeEtcId uint32 `json:"formation_localize_etc_id"`
	SkillGroupId           string `json:"skill_group_id"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *WeekDungeonGroupBuffExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	__offset_skill_group_id := b.CreateString(fbsutils.Convert(t.SkillGroupId, t.FlatBuffer.TableKey))
	WeekDungeonGroupBuffExcelStart(b)
	WeekDungeonGroupBuffExcelAddWeekDungeonBuffId(b, fbsutils.Convert(t.WeekDungeonBuffId, t.FlatBuffer.TableKey))
	WeekDungeonGroupBuffExcelAddSchool(b, fbsutils.Convert(t.School, t.FlatBuffer.TableKey))
	WeekDungeonGroupBuffExcelAddRecommandLocalizeEtcId(b, fbsutils.Convert(t.RecommandLocalizeEtcId, t.FlatBuffer.TableKey))
	WeekDungeonGroupBuffExcelAddFormationLocalizeEtcId(b, fbsutils.Convert(t.FormationLocalizeEtcId, t.FlatBuffer.TableKey))
	WeekDungeonGroupBuffExcelAddSkillGroupId(b, __offset_skill_group_id)
	return WeekDungeonGroupBuffExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *WeekDungeonGroupBuffExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *WeekDungeonGroupBuffExcelDto) UnmarshalMessage(e *WeekDungeonGroupBuffExcel) error {
	t.WeekDungeonBuffId = fbsutils.Convert(e.WeekDungeonBuffId(), t.FlatBuffer.TableKey)
	t.School = School(fbsutils.Convert(int32(e.School()), t.FlatBuffer.TableKey))
	t.RecommandLocalizeEtcId = fbsutils.Convert(e.RecommandLocalizeEtcId(), t.FlatBuffer.TableKey)
	t.FormationLocalizeEtcId = fbsutils.Convert(e.FormationLocalizeEtcId(), t.FlatBuffer.TableKey)
	t.SkillGroupId = fbsutils.Convert(string(e.SkillGroupId()), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *WeekDungeonGroupBuffExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsWeekDungeonGroupBuffExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (WeekDungeonGroupBuffExcelDto) FlatDataName() string {
	return "WeekDungeonGroupBuffExcel"
}
