// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// MinigameCCGEnemyExcelDto represents a FlatBuffers table
type MinigameCCGEnemyExcelDto struct {
	fbsutils.FlatBuffer
	Id            int64            `json:"id"`
	GroupId       int64            `json:"group_id"`
	CharacterType CCGCharacterType `json:"character_type"`
	Order         int32            `json:"order"`
	CharacterId   int64            `json:"character_id"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *MinigameCCGEnemyExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	MinigameCCGEnemyExcelStart(b)
	MinigameCCGEnemyExcelAddId(b, fbsutils.Convert(t.Id, t.FlatBuffer.TableKey))
	MinigameCCGEnemyExcelAddGroupId(b, fbsutils.Convert(t.GroupId, t.FlatBuffer.TableKey))
	MinigameCCGEnemyExcelAddCharacterType(b, fbsutils.Convert(t.CharacterType, t.FlatBuffer.TableKey))
	MinigameCCGEnemyExcelAddOrder(b, fbsutils.Convert(t.Order, t.FlatBuffer.TableKey))
	MinigameCCGEnemyExcelAddCharacterId(b, fbsutils.Convert(t.CharacterId, t.FlatBuffer.TableKey))
	return MinigameCCGEnemyExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *MinigameCCGEnemyExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *MinigameCCGEnemyExcelDto) UnmarshalMessage(e *MinigameCCGEnemyExcel) error {
	t.Id = fbsutils.Convert(e.Id(), t.FlatBuffer.TableKey)
	t.GroupId = fbsutils.Convert(e.GroupId(), t.FlatBuffer.TableKey)
	t.CharacterType = CCGCharacterType(fbsutils.Convert(int32(e.CharacterType()), t.FlatBuffer.TableKey))
	t.Order = fbsutils.Convert(e.Order(), t.FlatBuffer.TableKey)
	t.CharacterId = fbsutils.Convert(e.CharacterId(), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *MinigameCCGEnemyExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsMinigameCCGEnemyExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (MinigameCCGEnemyExcelDto) FlatDataName() string {
	return "MinigameCCGEnemyExcel"
}
