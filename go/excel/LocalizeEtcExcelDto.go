// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// LocalizeEtcExcelDto represents a FlatBuffers table
type LocalizeEtcExcelDto struct {
	fbsutils.FlatBuffer
	Key           uint32 `json:"key"`
	NameKr        string `json:"name_kr"`
	DescriptionKr string `json:"description_kr"`
	NameJp        string `json:"name_jp"`
	DescriptionJp string `json:"description_jp"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *LocalizeEtcExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	__offset_name_kr := b.CreateString(fbsutils.Convert(t.NameKr, t.FlatBuffer.TableKey))
	__offset_description_kr := b.CreateString(fbsutils.Convert(t.DescriptionKr, t.FlatBuffer.TableKey))
	__offset_name_jp := b.CreateString(fbsutils.Convert(t.NameJp, t.FlatBuffer.TableKey))
	__offset_description_jp := b.CreateString(fbsutils.Convert(t.DescriptionJp, t.FlatBuffer.TableKey))
	LocalizeEtcExcelStart(b)
	LocalizeEtcExcelAddKey(b, fbsutils.Convert(t.Key, t.FlatBuffer.TableKey))
	LocalizeEtcExcelAddNameKr(b, __offset_name_kr)
	LocalizeEtcExcelAddDescriptionKr(b, __offset_description_kr)
	LocalizeEtcExcelAddNameJp(b, __offset_name_jp)
	LocalizeEtcExcelAddDescriptionJp(b, __offset_description_jp)
	return LocalizeEtcExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *LocalizeEtcExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *LocalizeEtcExcelDto) UnmarshalMessage(e *LocalizeEtcExcel) error {
	t.Key = fbsutils.Convert(e.Key(), t.FlatBuffer.TableKey)
	t.NameKr = fbsutils.Convert(string(e.NameKr()), t.FlatBuffer.TableKey)
	t.DescriptionKr = fbsutils.Convert(string(e.DescriptionKr()), t.FlatBuffer.TableKey)
	t.NameJp = fbsutils.Convert(string(e.NameJp()), t.FlatBuffer.TableKey)
	t.DescriptionJp = fbsutils.Convert(string(e.DescriptionJp()), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *LocalizeEtcExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsLocalizeEtcExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (LocalizeEtcExcelDto) FlatDataName() string {
	return "LocalizeEtcExcel"
}
