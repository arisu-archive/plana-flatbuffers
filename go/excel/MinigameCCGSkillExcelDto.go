// Code generated by fbsgen. DO NOT EDIT.
// Package excel contains generated code for FlatBuffers schema
package excel

import (
	fbsutils "github.com/arisu-archive/bluearchive-fbs-utils"
	flatbuffers "github.com/google/flatbuffers/go"
)

// MinigameCCGSkillExcelDto represents a FlatBuffers table
type MinigameCCGSkillExcelDto struct {
	fbsutils.FlatBuffer
	SkillIcon    string `json:"skill_icon"`
	Description  uint32 `json:"description"`
	Name         uint32 `json:"name"`
	DataLoadPath string `json:"data_load_path"`
	SkillType    string `json:"skill_type"`
	Id           int64  `json:"id"`
}

// MarshalModel marshals the struct into flatbuffers offset
func (t *MinigameCCGSkillExcelDto) MarshalModel(b *flatbuffers.Builder) flatbuffers.UOffsetT {
	MinigameCCGSkillExcelStart(b)
	MinigameCCGSkillExcelAddSkillIcon(b, b.CreateString(fbsutils.Convert(t.SkillIcon, t.FlatBuffer.TableKey)))
	MinigameCCGSkillExcelAddDescription(b, fbsutils.Convert(t.Description, t.FlatBuffer.TableKey))
	MinigameCCGSkillExcelAddName(b, fbsutils.Convert(t.Name, t.FlatBuffer.TableKey))
	MinigameCCGSkillExcelAddDataLoadPath(b, b.CreateString(fbsutils.Convert(t.DataLoadPath, t.FlatBuffer.TableKey)))
	MinigameCCGSkillExcelAddSkillType(b, b.CreateString(fbsutils.Convert(t.SkillType, t.FlatBuffer.TableKey)))
	MinigameCCGSkillExcelAddId(b, fbsutils.Convert(t.Id, t.FlatBuffer.TableKey))
	return MinigameCCGSkillExcelEnd(b)
}

// Marshal marshals the struct into a FlatBuffers buffer
func (t *MinigameCCGSkillExcelDto) Marshal() ([]byte, error) {
	b := flatbuffers.NewBuilder(0)
	b.Finish(t.MarshalModel(b))
	return b.FinishedBytes(), nil
}

// UnmarshalMessage unmarshals the struct from a FlatBuffers buffer
func (t *MinigameCCGSkillExcelDto) UnmarshalMessage(e *MinigameCCGSkillExcel) error {
	t.SkillIcon = fbsutils.Convert(string(e.SkillIcon()), t.FlatBuffer.TableKey)
	t.Description = fbsutils.Convert(e.Description(), t.FlatBuffer.TableKey)
	t.Name = fbsutils.Convert(e.Name(), t.FlatBuffer.TableKey)
	t.DataLoadPath = fbsutils.Convert(string(e.DataLoadPath()), t.FlatBuffer.TableKey)
	t.SkillType = fbsutils.Convert(string(e.SkillType()), t.FlatBuffer.TableKey)
	t.Id = fbsutils.Convert(e.Id(), t.FlatBuffer.TableKey)
	return nil
}

// Unmarshal unmarshals the struct from a FlatBuffers buffer
func (t *MinigameCCGSkillExcelDto) Unmarshal(data []byte) error {
	root := GetRootAsMinigameCCGSkillExcel(data, 0)
	err := t.UnmarshalMessage(root)
	if err != nil {
		return err
	}
	return nil
}

// Name returns the name of the flatbuffer table name
func (MinigameCCGSkillExcelDto) FlatDataName() string {
	return "MinigameCCGSkillExcel"
}
