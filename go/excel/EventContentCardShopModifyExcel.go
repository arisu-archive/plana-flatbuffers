// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package excel

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type EventContentCardShopModifyExcel struct {
	_tab flatbuffers.Table
}

func GetRootAsEventContentCardShopModifyExcel(buf []byte, offset flatbuffers.UOffsetT) *EventContentCardShopModifyExcel {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &EventContentCardShopModifyExcel{}
	x.Init(buf, n+offset)
	return x
}

func GetSizePrefixedRootAsEventContentCardShopModifyExcel(buf []byte, offset flatbuffers.UOffsetT) *EventContentCardShopModifyExcel {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &EventContentCardShopModifyExcel{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func (rcv *EventContentCardShopModifyExcel) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *EventContentCardShopModifyExcel) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *EventContentCardShopModifyExcel) UsePrefabName() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *EventContentCardShopModifyExcel) EventContentId() int64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.GetInt64(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *EventContentCardShopModifyExcel) MutateEventContentId(n int64) bool {
	return rcv._tab.MutateInt64Slot(6, n)
}

func EventContentCardShopModifyExcelStart(builder *flatbuffers.Builder) {
	builder.StartObject(2)
}
func EventContentCardShopModifyExcelAddUsePrefabName(builder *flatbuffers.Builder, usePrefabName flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(usePrefabName), 0)
}
func EventContentCardShopModifyExcelAddEventContentId(builder *flatbuffers.Builder, eventContentId int64) {
	builder.PrependInt64Slot(1, eventContentId, 0)
}
func EventContentCardShopModifyExcelEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
