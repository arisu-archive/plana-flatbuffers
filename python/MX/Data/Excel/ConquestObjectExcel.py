# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ConquestObjectExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ConquestObjectExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsConquestObjectExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # ConquestObjectExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ConquestObjectExcel
    def ConquestObjectType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConquestObjectExcel
    def ConquestRewardAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConquestObjectExcel
    def ConquestRewardId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConquestObjectExcel
    def ConquestRewardParcelType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConquestObjectExcel
    def Disposable(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # ConquestObjectExcel
    def EventContentId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConquestObjectExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConquestObjectExcel
    def Key(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # ConquestObjectExcel
    def Name(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ConquestObjectExcel
    def PrefabName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ConquestObjectExcel
    def StepIndex(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConquestObjectExcel
    def StepObjectCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def ConquestObjectExcelStart(builder): builder.StartObject(12)
def Start(builder):
    return ConquestObjectExcelStart(builder)
def ConquestObjectExcelAddConquestObjectType(builder, conquestObjectType): builder.PrependInt32Slot(0, conquestObjectType, 0)
def AddConquestObjectType(builder, conquestObjectType):
    return ConquestObjectExcelAddConquestObjectType(builder, conquestObjectType)
def ConquestObjectExcelAddConquestRewardAmount(builder, conquestRewardAmount): builder.PrependInt32Slot(1, conquestRewardAmount, 0)
def AddConquestRewardAmount(builder, conquestRewardAmount):
    return ConquestObjectExcelAddConquestRewardAmount(builder, conquestRewardAmount)
def ConquestObjectExcelAddConquestRewardId(builder, conquestRewardId): builder.PrependInt64Slot(2, conquestRewardId, 0)
def AddConquestRewardId(builder, conquestRewardId):
    return ConquestObjectExcelAddConquestRewardId(builder, conquestRewardId)
def ConquestObjectExcelAddConquestRewardParcelType(builder, conquestRewardParcelType): builder.PrependInt32Slot(3, conquestRewardParcelType, 0)
def AddConquestRewardParcelType(builder, conquestRewardParcelType):
    return ConquestObjectExcelAddConquestRewardParcelType(builder, conquestRewardParcelType)
def ConquestObjectExcelAddDisposable(builder, disposable): builder.PrependBoolSlot(4, disposable, 0)
def AddDisposable(builder, disposable):
    return ConquestObjectExcelAddDisposable(builder, disposable)
def ConquestObjectExcelAddEventContentId(builder, eventContentId): builder.PrependInt64Slot(5, eventContentId, 0)
def AddEventContentId(builder, eventContentId):
    return ConquestObjectExcelAddEventContentId(builder, eventContentId)
def ConquestObjectExcelAddId(builder, id): builder.PrependInt64Slot(6, id, 0)
def AddId(builder, id):
    return ConquestObjectExcelAddId(builder, id)
def ConquestObjectExcelAddKey(builder, key): builder.PrependUint32Slot(7, key, 0)
def AddKey(builder, key):
    return ConquestObjectExcelAddKey(builder, key)
def ConquestObjectExcelAddName(builder, name): builder.PrependUOffsetTRelativeSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(name), 0)
def AddName(builder, name):
    return ConquestObjectExcelAddName(builder, name)
def ConquestObjectExcelAddPrefabName(builder, prefabName): builder.PrependUOffsetTRelativeSlot(9, flatbuffers.number_types.UOffsetTFlags.py_type(prefabName), 0)
def AddPrefabName(builder, prefabName):
    return ConquestObjectExcelAddPrefabName(builder, prefabName)
def ConquestObjectExcelAddStepIndex(builder, stepIndex): builder.PrependInt32Slot(10, stepIndex, 0)
def AddStepIndex(builder, stepIndex):
    return ConquestObjectExcelAddStepIndex(builder, stepIndex)
def ConquestObjectExcelAddStepObjectCount(builder, stepObjectCount): builder.PrependInt32Slot(11, stepObjectCount, 0)
def AddStepObjectCount(builder, stepObjectCount):
    return ConquestObjectExcelAddStepObjectCount(builder, stepObjectCount)
def ConquestObjectExcelEnd(builder): return builder.EndObject()
def End(builder):
    return ConquestObjectExcelEnd(builder)