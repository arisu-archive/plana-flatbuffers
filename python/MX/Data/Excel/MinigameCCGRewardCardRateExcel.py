# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class MinigameCCGRewardCardRateExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = MinigameCCGRewardCardRateExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsMinigameCCGRewardCardRateExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # MinigameCCGRewardCardRateExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # MinigameCCGRewardCardRateExcel
    def CardRarity(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # MinigameCCGRewardCardRateExcel
    def RarityGroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # MinigameCCGRewardCardRateExcel
    def Rate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def MinigameCCGRewardCardRateExcelStart(builder): builder.StartObject(3)
def Start(builder):
    return MinigameCCGRewardCardRateExcelStart(builder)
def MinigameCCGRewardCardRateExcelAddCardRarity(builder, cardRarity): builder.PrependInt32Slot(0, cardRarity, 0)
def AddCardRarity(builder, cardRarity):
    return MinigameCCGRewardCardRateExcelAddCardRarity(builder, cardRarity)
def MinigameCCGRewardCardRateExcelAddRarityGroupId(builder, rarityGroupId): builder.PrependInt64Slot(1, rarityGroupId, 0)
def AddRarityGroupId(builder, rarityGroupId):
    return MinigameCCGRewardCardRateExcelAddRarityGroupId(builder, rarityGroupId)
def MinigameCCGRewardCardRateExcelAddRate(builder, rate): builder.PrependInt32Slot(2, rate, 0)
def AddRate(builder, rate):
    return MinigameCCGRewardCardRateExcelAddRate(builder, rate)
def MinigameCCGRewardCardRateExcelEnd(builder): return builder.EndObject()
def End(builder):
    return MinigameCCGRewardCardRateExcelEnd(builder)