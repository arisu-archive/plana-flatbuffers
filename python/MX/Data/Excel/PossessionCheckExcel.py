# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class PossessionCheckExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = PossessionCheckExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsPossessionCheckExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # PossessionCheckExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # PossessionCheckExcel
    def UniqueId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # PossessionCheckExcel
    def DefaultParcelType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # PossessionCheckExcel
    def DefaultParcelId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # PossessionCheckExcel
    def DefaultParcelAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # PossessionCheckExcel
    def ReplaceParcelType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # PossessionCheckExcel
    def ReplaceParcelId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # PossessionCheckExcel
    def ReplaceParcelAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def PossessionCheckExcelStart(builder):
    builder.StartObject(7)

def Start(builder):
    PossessionCheckExcelStart(builder)

def PossessionCheckExcelAddUniqueId(builder, uniqueId):
    builder.PrependInt64Slot(0, uniqueId, 0)

def AddUniqueId(builder, uniqueId):
    PossessionCheckExcelAddUniqueId(builder, uniqueId)

def PossessionCheckExcelAddDefaultParcelType(builder, defaultParcelType):
    builder.PrependInt32Slot(1, defaultParcelType, 0)

def AddDefaultParcelType(builder, defaultParcelType):
    PossessionCheckExcelAddDefaultParcelType(builder, defaultParcelType)

def PossessionCheckExcelAddDefaultParcelId(builder, defaultParcelId):
    builder.PrependInt64Slot(2, defaultParcelId, 0)

def AddDefaultParcelId(builder, defaultParcelId):
    PossessionCheckExcelAddDefaultParcelId(builder, defaultParcelId)

def PossessionCheckExcelAddDefaultParcelAmount(builder, defaultParcelAmount):
    builder.PrependInt32Slot(3, defaultParcelAmount, 0)

def AddDefaultParcelAmount(builder, defaultParcelAmount):
    PossessionCheckExcelAddDefaultParcelAmount(builder, defaultParcelAmount)

def PossessionCheckExcelAddReplaceParcelType(builder, replaceParcelType):
    builder.PrependInt32Slot(4, replaceParcelType, 0)

def AddReplaceParcelType(builder, replaceParcelType):
    PossessionCheckExcelAddReplaceParcelType(builder, replaceParcelType)

def PossessionCheckExcelAddReplaceParcelId(builder, replaceParcelId):
    builder.PrependInt64Slot(5, replaceParcelId, 0)

def AddReplaceParcelId(builder, replaceParcelId):
    PossessionCheckExcelAddReplaceParcelId(builder, replaceParcelId)

def PossessionCheckExcelAddReplaceParcelAmount(builder, replaceParcelAmount):
    builder.PrependInt32Slot(6, replaceParcelAmount, 0)

def AddReplaceParcelAmount(builder, replaceParcelAmount):
    PossessionCheckExcelAddReplaceParcelAmount(builder, replaceParcelAmount)

def PossessionCheckExcelEnd(builder):
    return builder.EndObject()

def End(builder):
    return PossessionCheckExcelEnd(builder)
