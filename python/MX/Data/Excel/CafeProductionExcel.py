# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class CafeProductionExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = CafeProductionExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsCafeProductionExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # CafeProductionExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # CafeProductionExcel
    def ParcelStorageMax(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CafeProductionExcel
    def ParcelProductionCorrectionValue(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CafeProductionExcel
    def ParcelProductionCoefficient(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CafeProductionExcel
    def CafeProductionParcelId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CafeProductionExcel
    def CafeProductionParcelType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CafeProductionExcel
    def Rank(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CafeProductionExcel
    def CafeId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def CafeProductionExcelStart(builder): builder.StartObject(7)
def Start(builder):
    return CafeProductionExcelStart(builder)
def CafeProductionExcelAddParcelStorageMax(builder, parcelStorageMax): builder.PrependInt64Slot(0, parcelStorageMax, 0)
def AddParcelStorageMax(builder, parcelStorageMax):
    return CafeProductionExcelAddParcelStorageMax(builder, parcelStorageMax)
def CafeProductionExcelAddParcelProductionCorrectionValue(builder, parcelProductionCorrectionValue): builder.PrependInt64Slot(1, parcelProductionCorrectionValue, 0)
def AddParcelProductionCorrectionValue(builder, parcelProductionCorrectionValue):
    return CafeProductionExcelAddParcelProductionCorrectionValue(builder, parcelProductionCorrectionValue)
def CafeProductionExcelAddParcelProductionCoefficient(builder, parcelProductionCoefficient): builder.PrependInt64Slot(2, parcelProductionCoefficient, 0)
def AddParcelProductionCoefficient(builder, parcelProductionCoefficient):
    return CafeProductionExcelAddParcelProductionCoefficient(builder, parcelProductionCoefficient)
def CafeProductionExcelAddCafeProductionParcelId(builder, cafeProductionParcelId): builder.PrependInt64Slot(3, cafeProductionParcelId, 0)
def AddCafeProductionParcelId(builder, cafeProductionParcelId):
    return CafeProductionExcelAddCafeProductionParcelId(builder, cafeProductionParcelId)
def CafeProductionExcelAddCafeProductionParcelType(builder, cafeProductionParcelType): builder.PrependInt32Slot(4, cafeProductionParcelType, 0)
def AddCafeProductionParcelType(builder, cafeProductionParcelType):
    return CafeProductionExcelAddCafeProductionParcelType(builder, cafeProductionParcelType)
def CafeProductionExcelAddRank(builder, rank): builder.PrependInt64Slot(5, rank, 0)
def AddRank(builder, rank):
    return CafeProductionExcelAddRank(builder, rank)
def CafeProductionExcelAddCafeId(builder, cafeId): builder.PrependInt64Slot(6, cafeId, 0)
def AddCafeId(builder, cafeId):
    return CafeProductionExcelAddCafeId(builder, cafeId)
def CafeProductionExcelEnd(builder): return builder.EndObject()
def End(builder):
    return CafeProductionExcelEnd(builder)