# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ArenaMapExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ArenaMapExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsArenaMapExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # ArenaMapExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ArenaMapExcel
    def GroundId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ArenaMapExcel
    def EndRank(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ArenaMapExcel
    def StartRank(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ArenaMapExcel
    def GroundGroupNameLocalizeKey(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ArenaMapExcel
    def GroundGroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ArenaMapExcel
    def ImagePath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ArenaMapExcel
    def TerrainTypeLocalizeKey(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ArenaMapExcel
    def TerrainType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ArenaMapExcel
    def UniqueId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def ArenaMapExcelStart(builder): builder.StartObject(9)
def Start(builder):
    return ArenaMapExcelStart(builder)
def ArenaMapExcelAddGroundId(builder, groundId): builder.PrependInt64Slot(0, groundId, 0)
def AddGroundId(builder, groundId):
    return ArenaMapExcelAddGroundId(builder, groundId)
def ArenaMapExcelAddEndRank(builder, endRank): builder.PrependInt64Slot(1, endRank, 0)
def AddEndRank(builder, endRank):
    return ArenaMapExcelAddEndRank(builder, endRank)
def ArenaMapExcelAddStartRank(builder, startRank): builder.PrependInt64Slot(2, startRank, 0)
def AddStartRank(builder, startRank):
    return ArenaMapExcelAddStartRank(builder, startRank)
def ArenaMapExcelAddGroundGroupNameLocalizeKey(builder, groundGroupNameLocalizeKey): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(groundGroupNameLocalizeKey), 0)
def AddGroundGroupNameLocalizeKey(builder, groundGroupNameLocalizeKey):
    return ArenaMapExcelAddGroundGroupNameLocalizeKey(builder, groundGroupNameLocalizeKey)
def ArenaMapExcelAddGroundGroupId(builder, groundGroupId): builder.PrependInt64Slot(4, groundGroupId, 0)
def AddGroundGroupId(builder, groundGroupId):
    return ArenaMapExcelAddGroundGroupId(builder, groundGroupId)
def ArenaMapExcelAddImagePath(builder, imagePath): builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(imagePath), 0)
def AddImagePath(builder, imagePath):
    return ArenaMapExcelAddImagePath(builder, imagePath)
def ArenaMapExcelAddTerrainTypeLocalizeKey(builder, terrainTypeLocalizeKey): builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(terrainTypeLocalizeKey), 0)
def AddTerrainTypeLocalizeKey(builder, terrainTypeLocalizeKey):
    return ArenaMapExcelAddTerrainTypeLocalizeKey(builder, terrainTypeLocalizeKey)
def ArenaMapExcelAddTerrainType(builder, terrainType): builder.PrependInt64Slot(7, terrainType, 0)
def AddTerrainType(builder, terrainType):
    return ArenaMapExcelAddTerrainType(builder, terrainType)
def ArenaMapExcelAddUniqueId(builder, uniqueId): builder.PrependInt64Slot(8, uniqueId, 0)
def AddUniqueId(builder, uniqueId):
    return ArenaMapExcelAddUniqueId(builder, uniqueId)
def ArenaMapExcelEnd(builder): return builder.EndObject()
def End(builder):
    return ArenaMapExcelEnd(builder)