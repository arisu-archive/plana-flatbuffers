# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class EventContentMeetupInfoExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = EventContentMeetupInfoExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsEventContentMeetupInfoExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # EventContentMeetupInfoExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # EventContentMeetupInfoExcel
    def CostAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # EventContentMeetupInfoExcel
    def CostId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EventContentMeetupInfoExcel
    def CostParcelType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # EventContentMeetupInfoExcel
    def EventContentId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def EventContentMeetupInfoExcelStart(builder): builder.StartObject(4)
def Start(builder):
    return EventContentMeetupInfoExcelStart(builder)
def EventContentMeetupInfoExcelAddCostAmount(builder, costAmount): builder.PrependInt32Slot(0, costAmount, 0)
def AddCostAmount(builder, costAmount):
    return EventContentMeetupInfoExcelAddCostAmount(builder, costAmount)
def EventContentMeetupInfoExcelAddCostId(builder, costId): builder.PrependInt64Slot(1, costId, 0)
def AddCostId(builder, costId):
    return EventContentMeetupInfoExcelAddCostId(builder, costId)
def EventContentMeetupInfoExcelAddCostParcelType(builder, costParcelType): builder.PrependInt32Slot(2, costParcelType, 0)
def AddCostParcelType(builder, costParcelType):
    return EventContentMeetupInfoExcelAddCostParcelType(builder, costParcelType)
def EventContentMeetupInfoExcelAddEventContentId(builder, eventContentId): builder.PrependInt64Slot(3, eventContentId, 0)
def AddEventContentId(builder, eventContentId):
    return EventContentMeetupInfoExcelAddEventContentId(builder, eventContentId)
def EventContentMeetupInfoExcelEnd(builder): return builder.EndObject()
def End(builder):
    return EventContentMeetupInfoExcelEnd(builder)