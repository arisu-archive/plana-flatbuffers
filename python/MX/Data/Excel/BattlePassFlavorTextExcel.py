# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class BattlePassFlavorTextExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = BattlePassFlavorTextExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsBattlePassFlavorTextExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # BattlePassFlavorTextExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # BattlePassFlavorTextExcel
    def LocalizeCodeId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # BattlePassFlavorTextExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # BattlePassFlavorTextExcel
    def GroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def BattlePassFlavorTextExcelStart(builder): builder.StartObject(3)
def Start(builder):
    return BattlePassFlavorTextExcelStart(builder)
def BattlePassFlavorTextExcelAddLocalizeCodeId(builder, localizeCodeId): builder.PrependUint32Slot(0, localizeCodeId, 0)
def AddLocalizeCodeId(builder, localizeCodeId):
    return BattlePassFlavorTextExcelAddLocalizeCodeId(builder, localizeCodeId)
def BattlePassFlavorTextExcelAddId(builder, id): builder.PrependInt64Slot(1, id, 0)
def AddId(builder, id):
    return BattlePassFlavorTextExcelAddId(builder, id)
def BattlePassFlavorTextExcelAddGroupId(builder, groupId): builder.PrependInt64Slot(2, groupId, 0)
def AddGroupId(builder, groupId):
    return BattlePassFlavorTextExcelAddGroupId(builder, groupId)
def BattlePassFlavorTextExcelEnd(builder): return builder.EndObject()
def End(builder):
    return BattlePassFlavorTextExcelEnd(builder)