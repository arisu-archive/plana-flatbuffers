# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class CharacterDialogExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = CharacterDialogExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsCharacterDialogExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # CharacterDialogExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # CharacterDialogExcel
    def LocalizeCvGroup(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CharacterDialogExcel
    def UnlockEquipWeapon(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # CharacterDialogExcel
    def UnlockFavorRank(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CharacterDialogExcel
    def CvCollectionType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CharacterDialogExcel
    def CollectionVisible(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # CharacterDialogExcel
    def PosY(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # CharacterDialogExcel
    def PosX(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # CharacterDialogExcel
    def ApplyPosition(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # CharacterDialogExcel
    def VoiceId(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # CharacterDialogExcel
    def VoiceIdAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Uint32Flags, o)
        return 0

    # CharacterDialogExcel
    def VoiceIdLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # CharacterDialogExcel
    def VoiceIdIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        return o == 0

    # CharacterDialogExcel
    def LocalizeJp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CharacterDialogExcel
    def LocalizeKr(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CharacterDialogExcel
    def AnimationName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CharacterDialogExcel
    def Duration(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CharacterDialogExcel
    def ActionName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CharacterDialogExcel
    def DialogType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CharacterDialogExcel
    def GroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CharacterDialogExcel
    def EndDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CharacterDialogExcel
    def StartDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(38))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CharacterDialogExcel
    def Anniversary(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(40))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CharacterDialogExcel
    def DialogCondition(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(42))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CharacterDialogExcel
    def DialogCategory(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(44))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CharacterDialogExcel
    def ProductionStep(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(46))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CharacterDialogExcel
    def DisplayOrder(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(48))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CharacterDialogExcel
    def CostumeUniqueId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(50))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CharacterDialogExcel
    def CharacterId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(52))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def CharacterDialogExcelStart(builder): builder.StartObject(25)
def Start(builder):
    return CharacterDialogExcelStart(builder)
def CharacterDialogExcelAddLocalizeCvGroup(builder, localizeCvGroup): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(localizeCvGroup), 0)
def AddLocalizeCvGroup(builder, localizeCvGroup):
    return CharacterDialogExcelAddLocalizeCvGroup(builder, localizeCvGroup)
def CharacterDialogExcelAddUnlockEquipWeapon(builder, unlockEquipWeapon): builder.PrependBoolSlot(1, unlockEquipWeapon, 0)
def AddUnlockEquipWeapon(builder, unlockEquipWeapon):
    return CharacterDialogExcelAddUnlockEquipWeapon(builder, unlockEquipWeapon)
def CharacterDialogExcelAddUnlockFavorRank(builder, unlockFavorRank): builder.PrependInt64Slot(2, unlockFavorRank, 0)
def AddUnlockFavorRank(builder, unlockFavorRank):
    return CharacterDialogExcelAddUnlockFavorRank(builder, unlockFavorRank)
def CharacterDialogExcelAddCvCollectionType(builder, cvCollectionType): builder.PrependInt32Slot(3, cvCollectionType, 0)
def AddCvCollectionType(builder, cvCollectionType):
    return CharacterDialogExcelAddCvCollectionType(builder, cvCollectionType)
def CharacterDialogExcelAddCollectionVisible(builder, collectionVisible): builder.PrependBoolSlot(4, collectionVisible, 0)
def AddCollectionVisible(builder, collectionVisible):
    return CharacterDialogExcelAddCollectionVisible(builder, collectionVisible)
def CharacterDialogExcelAddPosY(builder, posY): builder.PrependFloat32Slot(5, posY, 0.0)
def AddPosY(builder, posY):
    return CharacterDialogExcelAddPosY(builder, posY)
def CharacterDialogExcelAddPosX(builder, posX): builder.PrependFloat32Slot(6, posX, 0.0)
def AddPosX(builder, posX):
    return CharacterDialogExcelAddPosX(builder, posX)
def CharacterDialogExcelAddApplyPosition(builder, applyPosition): builder.PrependBoolSlot(7, applyPosition, 0)
def AddApplyPosition(builder, applyPosition):
    return CharacterDialogExcelAddApplyPosition(builder, applyPosition)
def CharacterDialogExcelAddVoiceId(builder, voiceId): builder.PrependUOffsetTRelativeSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(voiceId), 0)
def AddVoiceId(builder, voiceId):
    return CharacterDialogExcelAddVoiceId(builder, voiceId)
def CharacterDialogExcelStartVoiceIdVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def StartVoiceIdVector(builder, numElems):
    return CharacterDialogExcelStartVoiceIdVector(builder, numElems)
def CharacterDialogExcelAddLocalizeJp(builder, localizeJp): builder.PrependUOffsetTRelativeSlot(9, flatbuffers.number_types.UOffsetTFlags.py_type(localizeJp), 0)
def AddLocalizeJp(builder, localizeJp):
    return CharacterDialogExcelAddLocalizeJp(builder, localizeJp)
def CharacterDialogExcelAddLocalizeKr(builder, localizeKr): builder.PrependUOffsetTRelativeSlot(10, flatbuffers.number_types.UOffsetTFlags.py_type(localizeKr), 0)
def AddLocalizeKr(builder, localizeKr):
    return CharacterDialogExcelAddLocalizeKr(builder, localizeKr)
def CharacterDialogExcelAddAnimationName(builder, animationName): builder.PrependUOffsetTRelativeSlot(11, flatbuffers.number_types.UOffsetTFlags.py_type(animationName), 0)
def AddAnimationName(builder, animationName):
    return CharacterDialogExcelAddAnimationName(builder, animationName)
def CharacterDialogExcelAddDuration(builder, duration): builder.PrependInt64Slot(12, duration, 0)
def AddDuration(builder, duration):
    return CharacterDialogExcelAddDuration(builder, duration)
def CharacterDialogExcelAddActionName(builder, actionName): builder.PrependUOffsetTRelativeSlot(13, flatbuffers.number_types.UOffsetTFlags.py_type(actionName), 0)
def AddActionName(builder, actionName):
    return CharacterDialogExcelAddActionName(builder, actionName)
def CharacterDialogExcelAddDialogType(builder, dialogType): builder.PrependInt32Slot(14, dialogType, 0)
def AddDialogType(builder, dialogType):
    return CharacterDialogExcelAddDialogType(builder, dialogType)
def CharacterDialogExcelAddGroupId(builder, groupId): builder.PrependInt64Slot(15, groupId, 0)
def AddGroupId(builder, groupId):
    return CharacterDialogExcelAddGroupId(builder, groupId)
def CharacterDialogExcelAddEndDate(builder, endDate): builder.PrependUOffsetTRelativeSlot(16, flatbuffers.number_types.UOffsetTFlags.py_type(endDate), 0)
def AddEndDate(builder, endDate):
    return CharacterDialogExcelAddEndDate(builder, endDate)
def CharacterDialogExcelAddStartDate(builder, startDate): builder.PrependUOffsetTRelativeSlot(17, flatbuffers.number_types.UOffsetTFlags.py_type(startDate), 0)
def AddStartDate(builder, startDate):
    return CharacterDialogExcelAddStartDate(builder, startDate)
def CharacterDialogExcelAddAnniversary(builder, anniversary): builder.PrependInt32Slot(18, anniversary, 0)
def AddAnniversary(builder, anniversary):
    return CharacterDialogExcelAddAnniversary(builder, anniversary)
def CharacterDialogExcelAddDialogCondition(builder, dialogCondition): builder.PrependInt32Slot(19, dialogCondition, 0)
def AddDialogCondition(builder, dialogCondition):
    return CharacterDialogExcelAddDialogCondition(builder, dialogCondition)
def CharacterDialogExcelAddDialogCategory(builder, dialogCategory): builder.PrependInt32Slot(20, dialogCategory, 0)
def AddDialogCategory(builder, dialogCategory):
    return CharacterDialogExcelAddDialogCategory(builder, dialogCategory)
def CharacterDialogExcelAddProductionStep(builder, productionStep): builder.PrependInt32Slot(21, productionStep, 0)
def AddProductionStep(builder, productionStep):
    return CharacterDialogExcelAddProductionStep(builder, productionStep)
def CharacterDialogExcelAddDisplayOrder(builder, displayOrder): builder.PrependInt64Slot(22, displayOrder, 0)
def AddDisplayOrder(builder, displayOrder):
    return CharacterDialogExcelAddDisplayOrder(builder, displayOrder)
def CharacterDialogExcelAddCostumeUniqueId(builder, costumeUniqueId): builder.PrependInt64Slot(23, costumeUniqueId, 0)
def AddCostumeUniqueId(builder, costumeUniqueId):
    return CharacterDialogExcelAddCostumeUniqueId(builder, costumeUniqueId)
def CharacterDialogExcelAddCharacterId(builder, characterId): builder.PrependInt64Slot(24, characterId, 0)
def AddCharacterId(builder, characterId):
    return CharacterDialogExcelAddCharacterId(builder, characterId)
def CharacterDialogExcelEnd(builder): return builder.EndObject()
def End(builder):
    return CharacterDialogExcelEnd(builder)