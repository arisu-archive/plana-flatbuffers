# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class MinigameCCGEnemyExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = MinigameCCGEnemyExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsMinigameCCGEnemyExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # MinigameCCGEnemyExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # MinigameCCGEnemyExcel
    def CharacterId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # MinigameCCGEnemyExcel
    def Order(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # MinigameCCGEnemyExcel
    def CharacterType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # MinigameCCGEnemyExcel
    def GroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # MinigameCCGEnemyExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def MinigameCCGEnemyExcelStart(builder): builder.StartObject(5)
def Start(builder):
    return MinigameCCGEnemyExcelStart(builder)
def MinigameCCGEnemyExcelAddCharacterId(builder, characterId): builder.PrependInt64Slot(0, characterId, 0)
def AddCharacterId(builder, characterId):
    return MinigameCCGEnemyExcelAddCharacterId(builder, characterId)
def MinigameCCGEnemyExcelAddOrder(builder, order): builder.PrependInt32Slot(1, order, 0)
def AddOrder(builder, order):
    return MinigameCCGEnemyExcelAddOrder(builder, order)
def MinigameCCGEnemyExcelAddCharacterType(builder, characterType): builder.PrependInt32Slot(2, characterType, 0)
def AddCharacterType(builder, characterType):
    return MinigameCCGEnemyExcelAddCharacterType(builder, characterType)
def MinigameCCGEnemyExcelAddGroupId(builder, groupId): builder.PrependInt64Slot(3, groupId, 0)
def AddGroupId(builder, groupId):
    return MinigameCCGEnemyExcelAddGroupId(builder, groupId)
def MinigameCCGEnemyExcelAddId(builder, id): builder.PrependInt64Slot(4, id, 0)
def AddId(builder, id):
    return MinigameCCGEnemyExcelAddId(builder, id)
def MinigameCCGEnemyExcelEnd(builder): return builder.EndObject()
def End(builder):
    return MinigameCCGEnemyExcelEnd(builder)