# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class LocalizeErrorExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = LocalizeErrorExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsLocalizeErrorExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # LocalizeErrorExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # LocalizeErrorExcel
    def Jp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # LocalizeErrorExcel
    def Kr(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # LocalizeErrorExcel
    def ErrorLevel(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # LocalizeErrorExcel
    def Key(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

def LocalizeErrorExcelStart(builder): builder.StartObject(4)
def Start(builder):
    return LocalizeErrorExcelStart(builder)
def LocalizeErrorExcelAddJp(builder, jp): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(jp), 0)
def AddJp(builder, jp):
    return LocalizeErrorExcelAddJp(builder, jp)
def LocalizeErrorExcelAddKr(builder, kr): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(kr), 0)
def AddKr(builder, kr):
    return LocalizeErrorExcelAddKr(builder, kr)
def LocalizeErrorExcelAddErrorLevel(builder, errorLevel): builder.PrependInt32Slot(2, errorLevel, 0)
def AddErrorLevel(builder, errorLevel):
    return LocalizeErrorExcelAddErrorLevel(builder, errorLevel)
def LocalizeErrorExcelAddKey(builder, key): builder.PrependUint32Slot(3, key, 0)
def AddKey(builder, key):
    return LocalizeErrorExcelAddKey(builder, key)
def LocalizeErrorExcelEnd(builder): return builder.EndObject()
def End(builder):
    return LocalizeErrorExcelEnd(builder)