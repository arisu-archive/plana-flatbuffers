# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class StickerGroupExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = StickerGroupExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsStickerGroupExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # StickerGroupExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # StickerGroupExcel
    def StickerGroupCoverpath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # StickerGroupExcel
    def LocalizeDescription(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # StickerGroupExcel
    def LocalizeTitle(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # StickerGroupExcel
    def PageCompleteRewardAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # StickerGroupExcel
    def PageCompleteRewardParcelId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # StickerGroupExcel
    def PageCompleteRewardParcelType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # StickerGroupExcel
    def PageCompleteSlot(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # StickerGroupExcel
    def StickerGroupIconpath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # StickerGroupExcel
    def UniqueLayoutPath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # StickerGroupExcel
    def Layout(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # StickerGroupExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def StickerGroupExcelStart(builder): builder.StartObject(11)
def Start(builder):
    return StickerGroupExcelStart(builder)
def StickerGroupExcelAddStickerGroupCoverpath(builder, stickerGroupCoverpath): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(stickerGroupCoverpath), 0)
def AddStickerGroupCoverpath(builder, stickerGroupCoverpath):
    return StickerGroupExcelAddStickerGroupCoverpath(builder, stickerGroupCoverpath)
def StickerGroupExcelAddLocalizeDescription(builder, localizeDescription): builder.PrependUint32Slot(1, localizeDescription, 0)
def AddLocalizeDescription(builder, localizeDescription):
    return StickerGroupExcelAddLocalizeDescription(builder, localizeDescription)
def StickerGroupExcelAddLocalizeTitle(builder, localizeTitle): builder.PrependUint32Slot(2, localizeTitle, 0)
def AddLocalizeTitle(builder, localizeTitle):
    return StickerGroupExcelAddLocalizeTitle(builder, localizeTitle)
def StickerGroupExcelAddPageCompleteRewardAmount(builder, pageCompleteRewardAmount): builder.PrependInt32Slot(3, pageCompleteRewardAmount, 0)
def AddPageCompleteRewardAmount(builder, pageCompleteRewardAmount):
    return StickerGroupExcelAddPageCompleteRewardAmount(builder, pageCompleteRewardAmount)
def StickerGroupExcelAddPageCompleteRewardParcelId(builder, pageCompleteRewardParcelId): builder.PrependInt64Slot(4, pageCompleteRewardParcelId, 0)
def AddPageCompleteRewardParcelId(builder, pageCompleteRewardParcelId):
    return StickerGroupExcelAddPageCompleteRewardParcelId(builder, pageCompleteRewardParcelId)
def StickerGroupExcelAddPageCompleteRewardParcelType(builder, pageCompleteRewardParcelType): builder.PrependInt32Slot(5, pageCompleteRewardParcelType, 0)
def AddPageCompleteRewardParcelType(builder, pageCompleteRewardParcelType):
    return StickerGroupExcelAddPageCompleteRewardParcelType(builder, pageCompleteRewardParcelType)
def StickerGroupExcelAddPageCompleteSlot(builder, pageCompleteSlot): builder.PrependInt64Slot(6, pageCompleteSlot, 0)
def AddPageCompleteSlot(builder, pageCompleteSlot):
    return StickerGroupExcelAddPageCompleteSlot(builder, pageCompleteSlot)
def StickerGroupExcelAddStickerGroupIconpath(builder, stickerGroupIconpath): builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(stickerGroupIconpath), 0)
def AddStickerGroupIconpath(builder, stickerGroupIconpath):
    return StickerGroupExcelAddStickerGroupIconpath(builder, stickerGroupIconpath)
def StickerGroupExcelAddUniqueLayoutPath(builder, uniqueLayoutPath): builder.PrependUOffsetTRelativeSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(uniqueLayoutPath), 0)
def AddUniqueLayoutPath(builder, uniqueLayoutPath):
    return StickerGroupExcelAddUniqueLayoutPath(builder, uniqueLayoutPath)
def StickerGroupExcelAddLayout(builder, layout): builder.PrependUOffsetTRelativeSlot(9, flatbuffers.number_types.UOffsetTFlags.py_type(layout), 0)
def AddLayout(builder, layout):
    return StickerGroupExcelAddLayout(builder, layout)
def StickerGroupExcelAddId(builder, id): builder.PrependInt64Slot(10, id, 0)
def AddId(builder, id):
    return StickerGroupExcelAddId(builder, id)
def StickerGroupExcelEnd(builder): return builder.EndObject()
def End(builder):
    return StickerGroupExcelEnd(builder)