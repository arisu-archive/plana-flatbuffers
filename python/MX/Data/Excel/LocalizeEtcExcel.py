# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class LocalizeEtcExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = LocalizeEtcExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsLocalizeEtcExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # LocalizeEtcExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # LocalizeEtcExcel
    def DescriptionJp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # LocalizeEtcExcel
    def DescriptionKr(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # LocalizeEtcExcel
    def Key(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # LocalizeEtcExcel
    def NameJp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # LocalizeEtcExcel
    def NameKr(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def LocalizeEtcExcelStart(builder): builder.StartObject(5)
def Start(builder):
    return LocalizeEtcExcelStart(builder)
def LocalizeEtcExcelAddDescriptionJp(builder, descriptionJp): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(descriptionJp), 0)
def AddDescriptionJp(builder, descriptionJp):
    return LocalizeEtcExcelAddDescriptionJp(builder, descriptionJp)
def LocalizeEtcExcelAddDescriptionKr(builder, descriptionKr): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(descriptionKr), 0)
def AddDescriptionKr(builder, descriptionKr):
    return LocalizeEtcExcelAddDescriptionKr(builder, descriptionKr)
def LocalizeEtcExcelAddKey(builder, key): builder.PrependUint32Slot(2, key, 0)
def AddKey(builder, key):
    return LocalizeEtcExcelAddKey(builder, key)
def LocalizeEtcExcelAddNameJp(builder, nameJp): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(nameJp), 0)
def AddNameJp(builder, nameJp):
    return LocalizeEtcExcelAddNameJp(builder, nameJp)
def LocalizeEtcExcelAddNameKr(builder, nameKr): builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(nameKr), 0)
def AddNameKr(builder, nameKr):
    return LocalizeEtcExcelAddNameKr(builder, nameKr)
def LocalizeEtcExcelEnd(builder): return builder.EndObject()
def End(builder):
    return LocalizeEtcExcelEnd(builder)