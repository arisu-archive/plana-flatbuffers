# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ContentEnterCostReduceExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ContentEnterCostReduceExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsContentEnterCostReduceExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # ContentEnterCostReduceExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ContentEnterCostReduceExcel
    def EnterCostReduceGroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ContentEnterCostReduceExcel
    def ContentType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ContentEnterCostReduceExcel
    def StageId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ContentEnterCostReduceExcel
    def ReduceEnterCostType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ContentEnterCostReduceExcel
    def ReduceEnterCostId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ContentEnterCostReduceExcel
    def ReduceAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def ContentEnterCostReduceExcelStart(builder):
    builder.StartObject(6)

def Start(builder):
    ContentEnterCostReduceExcelStart(builder)

def ContentEnterCostReduceExcelAddEnterCostReduceGroupId(builder, enterCostReduceGroupId):
    builder.PrependInt64Slot(0, enterCostReduceGroupId, 0)

def AddEnterCostReduceGroupId(builder, enterCostReduceGroupId):
    ContentEnterCostReduceExcelAddEnterCostReduceGroupId(builder, enterCostReduceGroupId)

def ContentEnterCostReduceExcelAddContentType(builder, contentType):
    builder.PrependInt32Slot(1, contentType, 0)

def AddContentType(builder, contentType):
    ContentEnterCostReduceExcelAddContentType(builder, contentType)

def ContentEnterCostReduceExcelAddStageId(builder, stageId):
    builder.PrependInt64Slot(2, stageId, 0)

def AddStageId(builder, stageId):
    ContentEnterCostReduceExcelAddStageId(builder, stageId)

def ContentEnterCostReduceExcelAddReduceEnterCostType(builder, reduceEnterCostType):
    builder.PrependInt32Slot(3, reduceEnterCostType, 0)

def AddReduceEnterCostType(builder, reduceEnterCostType):
    ContentEnterCostReduceExcelAddReduceEnterCostType(builder, reduceEnterCostType)

def ContentEnterCostReduceExcelAddReduceEnterCostId(builder, reduceEnterCostId):
    builder.PrependInt64Slot(4, reduceEnterCostId, 0)

def AddReduceEnterCostId(builder, reduceEnterCostId):
    ContentEnterCostReduceExcelAddReduceEnterCostId(builder, reduceEnterCostId)

def ContentEnterCostReduceExcelAddReduceAmount(builder, reduceAmount):
    builder.PrependInt64Slot(5, reduceAmount, 0)

def AddReduceAmount(builder, reduceAmount):
    ContentEnterCostReduceExcelAddReduceAmount(builder, reduceAmount)

def ContentEnterCostReduceExcelEnd(builder):
    return builder.EndObject()

def End(builder):
    return ContentEnterCostReduceExcelEnd(builder)
