# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class EventContentSpecialOperationsExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = EventContentSpecialOperationsExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsEventContentSpecialOperationsExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # EventContentSpecialOperationsExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # EventContentSpecialOperationsExcel
    def EventContentId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EventContentSpecialOperationsExcel
    def PointItemId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def EventContentSpecialOperationsExcelStart(builder): builder.StartObject(2)
def Start(builder):
    return EventContentSpecialOperationsExcelStart(builder)
def EventContentSpecialOperationsExcelAddEventContentId(builder, eventContentId): builder.PrependInt64Slot(0, eventContentId, 0)
def AddEventContentId(builder, eventContentId):
    return EventContentSpecialOperationsExcelAddEventContentId(builder, eventContentId)
def EventContentSpecialOperationsExcelAddPointItemId(builder, pointItemId): builder.PrependInt64Slot(1, pointItemId, 0)
def AddPointItemId(builder, pointItemId):
    return EventContentSpecialOperationsExcelAddPointItemId(builder, pointItemId)
def EventContentSpecialOperationsExcelEnd(builder): return builder.EndObject()
def End(builder):
    return EventContentSpecialOperationsExcelEnd(builder)