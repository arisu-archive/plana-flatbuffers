# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class PickupFirstGetBonusExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = PickupFirstGetBonusExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsPickupFirstGetBonusExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # PickupFirstGetBonusExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # PickupFirstGetBonusExcel
    def ShopRecruitId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # PickupFirstGetBonusExcel
    def RecruitSellectionShopId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # PickupFirstGetBonusExcel
    def PickupCharacterId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # PickupFirstGetBonusExcel
    def RewardParcelType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # PickupFirstGetBonusExcel
    def RewardParcelId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # PickupFirstGetBonusExcel
    def RewardParcelAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def PickupFirstGetBonusExcelStart(builder):
    builder.StartObject(6)

def Start(builder):
    PickupFirstGetBonusExcelStart(builder)

def PickupFirstGetBonusExcelAddShopRecruitId(builder, shopRecruitId):
    builder.PrependInt64Slot(0, shopRecruitId, 0)

def AddShopRecruitId(builder, shopRecruitId):
    PickupFirstGetBonusExcelAddShopRecruitId(builder, shopRecruitId)

def PickupFirstGetBonusExcelAddRecruitSellectionShopId(builder, recruitSellectionShopId):
    builder.PrependInt64Slot(1, recruitSellectionShopId, 0)

def AddRecruitSellectionShopId(builder, recruitSellectionShopId):
    PickupFirstGetBonusExcelAddRecruitSellectionShopId(builder, recruitSellectionShopId)

def PickupFirstGetBonusExcelAddPickupCharacterId(builder, pickupCharacterId):
    builder.PrependInt64Slot(2, pickupCharacterId, 0)

def AddPickupCharacterId(builder, pickupCharacterId):
    PickupFirstGetBonusExcelAddPickupCharacterId(builder, pickupCharacterId)

def PickupFirstGetBonusExcelAddRewardParcelType(builder, rewardParcelType):
    builder.PrependInt32Slot(3, rewardParcelType, 0)

def AddRewardParcelType(builder, rewardParcelType):
    PickupFirstGetBonusExcelAddRewardParcelType(builder, rewardParcelType)

def PickupFirstGetBonusExcelAddRewardParcelId(builder, rewardParcelId):
    builder.PrependInt64Slot(4, rewardParcelId, 0)

def AddRewardParcelId(builder, rewardParcelId):
    PickupFirstGetBonusExcelAddRewardParcelId(builder, rewardParcelId)

def PickupFirstGetBonusExcelAddRewardParcelAmount(builder, rewardParcelAmount):
    builder.PrependInt64Slot(5, rewardParcelAmount, 0)

def AddRewardParcelAmount(builder, rewardParcelAmount):
    PickupFirstGetBonusExcelAddRewardParcelAmount(builder, rewardParcelAmount)

def PickupFirstGetBonusExcelEnd(builder):
    return builder.EndObject()

def End(builder):
    return PickupFirstGetBonusExcelEnd(builder)
