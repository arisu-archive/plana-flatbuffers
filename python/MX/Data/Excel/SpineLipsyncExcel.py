# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class SpineLipsyncExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = SpineLipsyncExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsSpineLipsyncExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # SpineLipsyncExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # SpineLipsyncExcel
    def VoiceId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # SpineLipsyncExcel
    def AnimJson(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def SpineLipsyncExcelStart(builder): builder.StartObject(2)
def Start(builder):
    return SpineLipsyncExcelStart(builder)
def SpineLipsyncExcelAddVoiceId(builder, voiceId): builder.PrependUint32Slot(0, voiceId, 0)
def AddVoiceId(builder, voiceId):
    return SpineLipsyncExcelAddVoiceId(builder, voiceId)
def SpineLipsyncExcelAddAnimJson(builder, animJson): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(animJson), 0)
def AddAnimJson(builder, animJson):
    return SpineLipsyncExcelAddAnimJson(builder, animJson)
def SpineLipsyncExcelEnd(builder): return builder.EndObject()
def End(builder):
    return SpineLipsyncExcelEnd(builder)