# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class GachaCraftNodeGroupExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = GachaCraftNodeGroupExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsGachaCraftNodeGroupExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # GachaCraftNodeGroupExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # GachaCraftNodeGroupExcel
    def NodeId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeGroupExcel
    def GachaGroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GachaCraftNodeGroupExcel
    def ProbWeight(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def GachaCraftNodeGroupExcelStart(builder): builder.StartObject(3)
def Start(builder):
    return GachaCraftNodeGroupExcelStart(builder)
def GachaCraftNodeGroupExcelAddNodeId(builder, nodeId): builder.PrependInt64Slot(0, nodeId, 0)
def AddNodeId(builder, nodeId):
    return GachaCraftNodeGroupExcelAddNodeId(builder, nodeId)
def GachaCraftNodeGroupExcelAddGachaGroupId(builder, gachaGroupId): builder.PrependInt64Slot(1, gachaGroupId, 0)
def AddGachaGroupId(builder, gachaGroupId):
    return GachaCraftNodeGroupExcelAddGachaGroupId(builder, gachaGroupId)
def GachaCraftNodeGroupExcelAddProbWeight(builder, probWeight): builder.PrependInt64Slot(2, probWeight, 0)
def AddProbWeight(builder, probWeight):
    return GachaCraftNodeGroupExcelAddProbWeight(builder, probWeight)
def GachaCraftNodeGroupExcelEnd(builder): return builder.EndObject()
def End(builder):
    return GachaCraftNodeGroupExcelEnd(builder)