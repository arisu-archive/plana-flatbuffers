# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class EliminateRaidStageRewardExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = EliminateRaidStageRewardExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsEliminateRaidStageRewardExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # EliminateRaidStageRewardExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # EliminateRaidStageRewardExcel
    def ClearStageRewardAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EliminateRaidStageRewardExcel
    def ClearStageRewardParcelType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # EliminateRaidStageRewardExcel
    def ClearStageRewardParcelUniqueId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EliminateRaidStageRewardExcel
    def ClearStageRewardProb(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EliminateRaidStageRewardExcel
    def GroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EliminateRaidStageRewardExcel
    def IsClearStageRewardHideInfo(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

def EliminateRaidStageRewardExcelStart(builder): builder.StartObject(6)
def Start(builder):
    return EliminateRaidStageRewardExcelStart(builder)
def EliminateRaidStageRewardExcelAddClearStageRewardAmount(builder, clearStageRewardAmount): builder.PrependInt64Slot(0, clearStageRewardAmount, 0)
def AddClearStageRewardAmount(builder, clearStageRewardAmount):
    return EliminateRaidStageRewardExcelAddClearStageRewardAmount(builder, clearStageRewardAmount)
def EliminateRaidStageRewardExcelAddClearStageRewardParcelType(builder, clearStageRewardParcelType): builder.PrependInt32Slot(1, clearStageRewardParcelType, 0)
def AddClearStageRewardParcelType(builder, clearStageRewardParcelType):
    return EliminateRaidStageRewardExcelAddClearStageRewardParcelType(builder, clearStageRewardParcelType)
def EliminateRaidStageRewardExcelAddClearStageRewardParcelUniqueId(builder, clearStageRewardParcelUniqueId): builder.PrependInt64Slot(2, clearStageRewardParcelUniqueId, 0)
def AddClearStageRewardParcelUniqueId(builder, clearStageRewardParcelUniqueId):
    return EliminateRaidStageRewardExcelAddClearStageRewardParcelUniqueId(builder, clearStageRewardParcelUniqueId)
def EliminateRaidStageRewardExcelAddClearStageRewardProb(builder, clearStageRewardProb): builder.PrependInt64Slot(3, clearStageRewardProb, 0)
def AddClearStageRewardProb(builder, clearStageRewardProb):
    return EliminateRaidStageRewardExcelAddClearStageRewardProb(builder, clearStageRewardProb)
def EliminateRaidStageRewardExcelAddGroupId(builder, groupId): builder.PrependInt64Slot(4, groupId, 0)
def AddGroupId(builder, groupId):
    return EliminateRaidStageRewardExcelAddGroupId(builder, groupId)
def EliminateRaidStageRewardExcelAddIsClearStageRewardHideInfo(builder, isClearStageRewardHideInfo): builder.PrependBoolSlot(5, isClearStageRewardHideInfo, 0)
def AddIsClearStageRewardHideInfo(builder, isClearStageRewardHideInfo):
    return EliminateRaidStageRewardExcelAddIsClearStageRewardHideInfo(builder, isClearStageRewardHideInfo)
def EliminateRaidStageRewardExcelEnd(builder): return builder.EndObject()
def End(builder):
    return EliminateRaidStageRewardExcelEnd(builder)