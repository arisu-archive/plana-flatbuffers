# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ScenarioCharacterEmotionExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ScenarioCharacterEmotionExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsScenarioCharacterEmotionExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # ScenarioCharacterEmotionExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ScenarioCharacterEmotionExcel
    def Name(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # ScenarioCharacterEmotionExcel
    def EmoticonName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def ScenarioCharacterEmotionExcelStart(builder): builder.StartObject(2)
def Start(builder):
    return ScenarioCharacterEmotionExcelStart(builder)
def ScenarioCharacterEmotionExcelAddName(builder, name): builder.PrependUint32Slot(0, name, 0)
def AddName(builder, name):
    return ScenarioCharacterEmotionExcelAddName(builder, name)
def ScenarioCharacterEmotionExcelAddEmoticonName(builder, emoticonName): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(emoticonName), 0)
def AddEmoticonName(builder, emoticonName):
    return ScenarioCharacterEmotionExcelAddEmoticonName(builder, emoticonName)
def ScenarioCharacterEmotionExcelEnd(builder): return builder.EndObject()
def End(builder):
    return ScenarioCharacterEmotionExcelEnd(builder)