# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class TimeAttackDungeonExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = TimeAttackDungeonExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsTimeAttackDungeonExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # TimeAttackDungeonExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # TimeAttackDungeonExcel
    def IconPath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # TimeAttackDungeonExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # TimeAttackDungeonExcel
    def InformationGroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # TimeAttackDungeonExcel
    def LocalizeEtcKey(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # TimeAttackDungeonExcel
    def TimeAttackDungeonType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def TimeAttackDungeonExcelStart(builder): builder.StartObject(5)
def Start(builder):
    return TimeAttackDungeonExcelStart(builder)
def TimeAttackDungeonExcelAddIconPath(builder, iconPath): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(iconPath), 0)
def AddIconPath(builder, iconPath):
    return TimeAttackDungeonExcelAddIconPath(builder, iconPath)
def TimeAttackDungeonExcelAddId(builder, id): builder.PrependInt64Slot(1, id, 0)
def AddId(builder, id):
    return TimeAttackDungeonExcelAddId(builder, id)
def TimeAttackDungeonExcelAddInformationGroupId(builder, informationGroupId): builder.PrependInt64Slot(2, informationGroupId, 0)
def AddInformationGroupId(builder, informationGroupId):
    return TimeAttackDungeonExcelAddInformationGroupId(builder, informationGroupId)
def TimeAttackDungeonExcelAddLocalizeEtcKey(builder, localizeEtcKey): builder.PrependUint32Slot(3, localizeEtcKey, 0)
def AddLocalizeEtcKey(builder, localizeEtcKey):
    return TimeAttackDungeonExcelAddLocalizeEtcKey(builder, localizeEtcKey)
def TimeAttackDungeonExcelAddTimeAttackDungeonType(builder, timeAttackDungeonType): builder.PrependInt32Slot(4, timeAttackDungeonType, 0)
def AddTimeAttackDungeonType(builder, timeAttackDungeonType):
    return TimeAttackDungeonExcelAddTimeAttackDungeonType(builder, timeAttackDungeonType)
def TimeAttackDungeonExcelEnd(builder): return builder.EndObject()
def End(builder):
    return TimeAttackDungeonExcelEnd(builder)