# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class StickerPageContentExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = StickerPageContentExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsStickerPageContentExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # StickerPageContentExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # StickerPageContentExcel
    def StickerDetailPath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # StickerPageContentExcel
    def IconPath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # StickerPageContentExcel
    def PackedStickerIconPath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # StickerPageContentExcel
    def PackedStickerIconLocalizeEtcId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # StickerPageContentExcel
    def StickerGetConditionParameterTag(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # StickerPageContentExcel
    def StickerGetConditionParameterTagAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int32Flags, o)
        return 0

    # StickerPageContentExcel
    def StickerGetConditionParameterTagLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # StickerPageContentExcel
    def StickerGetConditionParameterTagIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        return o == 0

    # StickerPageContentExcel
    def StickerGetConditionParameter(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int64Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 8))
        return 0

    # StickerPageContentExcel
    def StickerGetConditionParameterAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int64Flags, o)
        return 0

    # StickerPageContentExcel
    def StickerGetConditionParameterLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # StickerPageContentExcel
    def StickerGetConditionParameterIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        return o == 0

    # StickerPageContentExcel
    def StickerGetConditionCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # StickerPageContentExcel
    def GetStickerConditionType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # StickerPageContentExcel
    def StickerCheckPassType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # StickerPageContentExcel
    def StickerGetConditionType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # StickerPageContentExcel
    def StickerSlot(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # StickerPageContentExcel
    def StickerPageId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # StickerPageContentExcel
    def StickerGroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # StickerPageContentExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def StickerPageContentExcelStart(builder): builder.StartObject(14)
def Start(builder):
    return StickerPageContentExcelStart(builder)
def StickerPageContentExcelAddStickerDetailPath(builder, stickerDetailPath): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(stickerDetailPath), 0)
def AddStickerDetailPath(builder, stickerDetailPath):
    return StickerPageContentExcelAddStickerDetailPath(builder, stickerDetailPath)
def StickerPageContentExcelAddIconPath(builder, iconPath): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(iconPath), 0)
def AddIconPath(builder, iconPath):
    return StickerPageContentExcelAddIconPath(builder, iconPath)
def StickerPageContentExcelAddPackedStickerIconPath(builder, packedStickerIconPath): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(packedStickerIconPath), 0)
def AddPackedStickerIconPath(builder, packedStickerIconPath):
    return StickerPageContentExcelAddPackedStickerIconPath(builder, packedStickerIconPath)
def StickerPageContentExcelAddPackedStickerIconLocalizeEtcId(builder, packedStickerIconLocalizeEtcId): builder.PrependUint32Slot(3, packedStickerIconLocalizeEtcId, 0)
def AddPackedStickerIconLocalizeEtcId(builder, packedStickerIconLocalizeEtcId):
    return StickerPageContentExcelAddPackedStickerIconLocalizeEtcId(builder, packedStickerIconLocalizeEtcId)
def StickerPageContentExcelAddStickerGetConditionParameterTag(builder, stickerGetConditionParameterTag): builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(stickerGetConditionParameterTag), 0)
def AddStickerGetConditionParameterTag(builder, stickerGetConditionParameterTag):
    return StickerPageContentExcelAddStickerGetConditionParameterTag(builder, stickerGetConditionParameterTag)
def StickerPageContentExcelStartStickerGetConditionParameterTagVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def StartStickerGetConditionParameterTagVector(builder, numElems):
    return StickerPageContentExcelStartStickerGetConditionParameterTagVector(builder, numElems)
def StickerPageContentExcelAddStickerGetConditionParameter(builder, stickerGetConditionParameter): builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(stickerGetConditionParameter), 0)
def AddStickerGetConditionParameter(builder, stickerGetConditionParameter):
    return StickerPageContentExcelAddStickerGetConditionParameter(builder, stickerGetConditionParameter)
def StickerPageContentExcelStartStickerGetConditionParameterVector(builder, numElems): return builder.StartVector(8, numElems, 8)
def StartStickerGetConditionParameterVector(builder, numElems):
    return StickerPageContentExcelStartStickerGetConditionParameterVector(builder, numElems)
def StickerPageContentExcelAddStickerGetConditionCount(builder, stickerGetConditionCount): builder.PrependInt64Slot(6, stickerGetConditionCount, 0)
def AddStickerGetConditionCount(builder, stickerGetConditionCount):
    return StickerPageContentExcelAddStickerGetConditionCount(builder, stickerGetConditionCount)
def StickerPageContentExcelAddGetStickerConditionType(builder, getStickerConditionType): builder.PrependInt32Slot(7, getStickerConditionType, 0)
def AddGetStickerConditionType(builder, getStickerConditionType):
    return StickerPageContentExcelAddGetStickerConditionType(builder, getStickerConditionType)
def StickerPageContentExcelAddStickerCheckPassType(builder, stickerCheckPassType): builder.PrependInt32Slot(8, stickerCheckPassType, 0)
def AddStickerCheckPassType(builder, stickerCheckPassType):
    return StickerPageContentExcelAddStickerCheckPassType(builder, stickerCheckPassType)
def StickerPageContentExcelAddStickerGetConditionType(builder, stickerGetConditionType): builder.PrependInt32Slot(9, stickerGetConditionType, 0)
def AddStickerGetConditionType(builder, stickerGetConditionType):
    return StickerPageContentExcelAddStickerGetConditionType(builder, stickerGetConditionType)
def StickerPageContentExcelAddStickerSlot(builder, stickerSlot): builder.PrependInt64Slot(10, stickerSlot, 0)
def AddStickerSlot(builder, stickerSlot):
    return StickerPageContentExcelAddStickerSlot(builder, stickerSlot)
def StickerPageContentExcelAddStickerPageId(builder, stickerPageId): builder.PrependInt64Slot(11, stickerPageId, 0)
def AddStickerPageId(builder, stickerPageId):
    return StickerPageContentExcelAddStickerPageId(builder, stickerPageId)
def StickerPageContentExcelAddStickerGroupId(builder, stickerGroupId): builder.PrependInt64Slot(12, stickerGroupId, 0)
def AddStickerGroupId(builder, stickerGroupId):
    return StickerPageContentExcelAddStickerGroupId(builder, stickerGroupId)
def StickerPageContentExcelAddId(builder, id): builder.PrependInt64Slot(13, id, 0)
def AddId(builder, id):
    return StickerPageContentExcelAddId(builder, id)
def StickerPageContentExcelEnd(builder): return builder.EndObject()
def End(builder):
    return StickerPageContentExcelEnd(builder)