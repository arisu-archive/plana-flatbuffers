# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class EventContentChangeScenarioExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = EventContentChangeScenarioExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsEventContentChangeScenarioExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # EventContentChangeScenarioExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # EventContentChangeScenarioExcel
    def ChangeCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EventContentChangeScenarioExcel
    def ChangeType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # EventContentChangeScenarioExcel
    def EventContentId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EventContentChangeScenarioExcel
    def ScenarioGroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def EventContentChangeScenarioExcelStart(builder): builder.StartObject(4)
def Start(builder):
    return EventContentChangeScenarioExcelStart(builder)
def EventContentChangeScenarioExcelAddChangeCount(builder, changeCount): builder.PrependInt64Slot(0, changeCount, 0)
def AddChangeCount(builder, changeCount):
    return EventContentChangeScenarioExcelAddChangeCount(builder, changeCount)
def EventContentChangeScenarioExcelAddChangeType(builder, changeType): builder.PrependInt32Slot(1, changeType, 0)
def AddChangeType(builder, changeType):
    return EventContentChangeScenarioExcelAddChangeType(builder, changeType)
def EventContentChangeScenarioExcelAddEventContentId(builder, eventContentId): builder.PrependInt64Slot(2, eventContentId, 0)
def AddEventContentId(builder, eventContentId):
    return EventContentChangeScenarioExcelAddEventContentId(builder, eventContentId)
def EventContentChangeScenarioExcelAddScenarioGroupId(builder, scenarioGroupId): builder.PrependInt64Slot(3, scenarioGroupId, 0)
def AddScenarioGroupId(builder, scenarioGroupId):
    return EventContentChangeScenarioExcelAddScenarioGroupId(builder, scenarioGroupId)
def EventContentChangeScenarioExcelEnd(builder): return builder.EndObject()
def End(builder):
    return EventContentChangeScenarioExcelEnd(builder)