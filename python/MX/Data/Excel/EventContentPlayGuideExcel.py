# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class EventContentPlayGuideExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = EventContentPlayGuideExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsEventContentPlayGuideExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # EventContentPlayGuideExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # EventContentPlayGuideExcel
    def GuideText(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # EventContentPlayGuideExcel
    def GuideImagePath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # EventContentPlayGuideExcel
    def GuideTitle(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # EventContentPlayGuideExcel
    def DisplayOrder(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # EventContentPlayGuideExcel
    def EventContentId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EventContentPlayGuideExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def EventContentPlayGuideExcelStart(builder): builder.StartObject(6)
def Start(builder):
    return EventContentPlayGuideExcelStart(builder)
def EventContentPlayGuideExcelAddGuideText(builder, guideText): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(guideText), 0)
def AddGuideText(builder, guideText):
    return EventContentPlayGuideExcelAddGuideText(builder, guideText)
def EventContentPlayGuideExcelAddGuideImagePath(builder, guideImagePath): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(guideImagePath), 0)
def AddGuideImagePath(builder, guideImagePath):
    return EventContentPlayGuideExcelAddGuideImagePath(builder, guideImagePath)
def EventContentPlayGuideExcelAddGuideTitle(builder, guideTitle): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(guideTitle), 0)
def AddGuideTitle(builder, guideTitle):
    return EventContentPlayGuideExcelAddGuideTitle(builder, guideTitle)
def EventContentPlayGuideExcelAddDisplayOrder(builder, displayOrder): builder.PrependInt32Slot(3, displayOrder, 0)
def AddDisplayOrder(builder, displayOrder):
    return EventContentPlayGuideExcelAddDisplayOrder(builder, displayOrder)
def EventContentPlayGuideExcelAddEventContentId(builder, eventContentId): builder.PrependInt64Slot(4, eventContentId, 0)
def AddEventContentId(builder, eventContentId):
    return EventContentPlayGuideExcelAddEventContentId(builder, eventContentId)
def EventContentPlayGuideExcelAddId(builder, id): builder.PrependInt64Slot(5, id, 0)
def AddId(builder, id):
    return EventContentPlayGuideExcelAddId(builder, id)
def EventContentPlayGuideExcelEnd(builder): return builder.EndObject()
def End(builder):
    return EventContentPlayGuideExcelEnd(builder)