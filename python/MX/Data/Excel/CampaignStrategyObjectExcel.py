# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class CampaignStrategyObjectExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = CampaignStrategyObjectExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsCampaignStrategyObjectExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # CampaignStrategyObjectExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # CampaignStrategyObjectExcel
    def BuffId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CampaignStrategyObjectExcel
    def Disposable(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # CampaignStrategyObjectExcel
    def HealValue(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CampaignStrategyObjectExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CampaignStrategyObjectExcel
    def Key(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # CampaignStrategyObjectExcel
    def Name(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CampaignStrategyObjectExcel
    def PortalId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CampaignStrategyObjectExcel
    def PrefabName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CampaignStrategyObjectExcel
    def StrategyObjectType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CampaignStrategyObjectExcel
    def StrategyRewardAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CampaignStrategyObjectExcel
    def StrategyRewardId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CampaignStrategyObjectExcel
    def StrategyRewardName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CampaignStrategyObjectExcel
    def StrategyRewardParcelType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CampaignStrategyObjectExcel
    def StrategySightRange(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CampaignStrategyObjectExcel
    def SwithId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def CampaignStrategyObjectExcelStart(builder): builder.StartObject(15)
def Start(builder):
    return CampaignStrategyObjectExcelStart(builder)
def CampaignStrategyObjectExcelAddBuffId(builder, buffId): builder.PrependInt32Slot(0, buffId, 0)
def AddBuffId(builder, buffId):
    return CampaignStrategyObjectExcelAddBuffId(builder, buffId)
def CampaignStrategyObjectExcelAddDisposable(builder, disposable): builder.PrependBoolSlot(1, disposable, 0)
def AddDisposable(builder, disposable):
    return CampaignStrategyObjectExcelAddDisposable(builder, disposable)
def CampaignStrategyObjectExcelAddHealValue(builder, healValue): builder.PrependInt32Slot(2, healValue, 0)
def AddHealValue(builder, healValue):
    return CampaignStrategyObjectExcelAddHealValue(builder, healValue)
def CampaignStrategyObjectExcelAddId(builder, id): builder.PrependInt64Slot(3, id, 0)
def AddId(builder, id):
    return CampaignStrategyObjectExcelAddId(builder, id)
def CampaignStrategyObjectExcelAddKey(builder, key): builder.PrependUint32Slot(4, key, 0)
def AddKey(builder, key):
    return CampaignStrategyObjectExcelAddKey(builder, key)
def CampaignStrategyObjectExcelAddName(builder, name): builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(name), 0)
def AddName(builder, name):
    return CampaignStrategyObjectExcelAddName(builder, name)
def CampaignStrategyObjectExcelAddPortalId(builder, portalId): builder.PrependInt32Slot(6, portalId, 0)
def AddPortalId(builder, portalId):
    return CampaignStrategyObjectExcelAddPortalId(builder, portalId)
def CampaignStrategyObjectExcelAddPrefabName(builder, prefabName): builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(prefabName), 0)
def AddPrefabName(builder, prefabName):
    return CampaignStrategyObjectExcelAddPrefabName(builder, prefabName)
def CampaignStrategyObjectExcelAddStrategyObjectType(builder, strategyObjectType): builder.PrependInt32Slot(8, strategyObjectType, 0)
def AddStrategyObjectType(builder, strategyObjectType):
    return CampaignStrategyObjectExcelAddStrategyObjectType(builder, strategyObjectType)
def CampaignStrategyObjectExcelAddStrategyRewardAmount(builder, strategyRewardAmount): builder.PrependInt32Slot(9, strategyRewardAmount, 0)
def AddStrategyRewardAmount(builder, strategyRewardAmount):
    return CampaignStrategyObjectExcelAddStrategyRewardAmount(builder, strategyRewardAmount)
def CampaignStrategyObjectExcelAddStrategyRewardId(builder, strategyRewardId): builder.PrependInt64Slot(10, strategyRewardId, 0)
def AddStrategyRewardId(builder, strategyRewardId):
    return CampaignStrategyObjectExcelAddStrategyRewardId(builder, strategyRewardId)
def CampaignStrategyObjectExcelAddStrategyRewardName(builder, strategyRewardName): builder.PrependUOffsetTRelativeSlot(11, flatbuffers.number_types.UOffsetTFlags.py_type(strategyRewardName), 0)
def AddStrategyRewardName(builder, strategyRewardName):
    return CampaignStrategyObjectExcelAddStrategyRewardName(builder, strategyRewardName)
def CampaignStrategyObjectExcelAddStrategyRewardParcelType(builder, strategyRewardParcelType): builder.PrependInt32Slot(12, strategyRewardParcelType, 0)
def AddStrategyRewardParcelType(builder, strategyRewardParcelType):
    return CampaignStrategyObjectExcelAddStrategyRewardParcelType(builder, strategyRewardParcelType)
def CampaignStrategyObjectExcelAddStrategySightRange(builder, strategySightRange): builder.PrependInt64Slot(13, strategySightRange, 0)
def AddStrategySightRange(builder, strategySightRange):
    return CampaignStrategyObjectExcelAddStrategySightRange(builder, strategySightRange)
def CampaignStrategyObjectExcelAddSwithId(builder, swithId): builder.PrependInt32Slot(14, swithId, 0)
def AddSwithId(builder, swithId):
    return CampaignStrategyObjectExcelAddSwithId(builder, swithId)
def CampaignStrategyObjectExcelEnd(builder): return builder.EndObject()
def End(builder):
    return CampaignStrategyObjectExcelEnd(builder)