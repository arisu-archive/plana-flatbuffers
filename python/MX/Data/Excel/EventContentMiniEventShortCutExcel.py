# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class EventContentMiniEventShortCutExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = EventContentMiniEventShortCutExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsEventContentMiniEventShortCutExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # EventContentMiniEventShortCutExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # EventContentMiniEventShortCutExcel
    def ShortcutUi(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # EventContentMiniEventShortCutExcel
    def ShorcutContentType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # EventContentMiniEventShortCutExcel
    def LocalizeEtcId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # EventContentMiniEventShortCutExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def EventContentMiniEventShortCutExcelStart(builder): builder.StartObject(4)
def Start(builder):
    return EventContentMiniEventShortCutExcelStart(builder)
def EventContentMiniEventShortCutExcelAddShortcutUi(builder, shortcutUi): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(shortcutUi), 0)
def AddShortcutUi(builder, shortcutUi):
    return EventContentMiniEventShortCutExcelAddShortcutUi(builder, shortcutUi)
def EventContentMiniEventShortCutExcelAddShorcutContentType(builder, shorcutContentType): builder.PrependInt32Slot(1, shorcutContentType, 0)
def AddShorcutContentType(builder, shorcutContentType):
    return EventContentMiniEventShortCutExcelAddShorcutContentType(builder, shorcutContentType)
def EventContentMiniEventShortCutExcelAddLocalizeEtcId(builder, localizeEtcId): builder.PrependUint32Slot(2, localizeEtcId, 0)
def AddLocalizeEtcId(builder, localizeEtcId):
    return EventContentMiniEventShortCutExcelAddLocalizeEtcId(builder, localizeEtcId)
def EventContentMiniEventShortCutExcelAddId(builder, id): builder.PrependInt32Slot(3, id, 0)
def AddId(builder, id):
    return EventContentMiniEventShortCutExcelAddId(builder, id)
def EventContentMiniEventShortCutExcelEnd(builder): return builder.EndObject()
def End(builder):
    return EventContentMiniEventShortCutExcelEnd(builder)