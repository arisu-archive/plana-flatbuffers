# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class BattlePassExpLimitExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = BattlePassExpLimitExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsBattlePassExpLimitExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # BattlePassExpLimitExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # BattlePassExpLimitExcel
    def BattlePassId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # BattlePassExpLimitExcel
    def LimitStartTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # BattlePassExpLimitExcel
    def LimitEndTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # BattlePassExpLimitExcel
    def ExpLimitAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def BattlePassExpLimitExcelStart(builder): builder.StartObject(4)
def Start(builder):
    return BattlePassExpLimitExcelStart(builder)
def BattlePassExpLimitExcelAddBattlePassId(builder, battlePassId): builder.PrependInt64Slot(0, battlePassId, 0)
def AddBattlePassId(builder, battlePassId):
    return BattlePassExpLimitExcelAddBattlePassId(builder, battlePassId)
def BattlePassExpLimitExcelAddLimitStartTime(builder, limitStartTime): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(limitStartTime), 0)
def AddLimitStartTime(builder, limitStartTime):
    return BattlePassExpLimitExcelAddLimitStartTime(builder, limitStartTime)
def BattlePassExpLimitExcelAddLimitEndTime(builder, limitEndTime): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(limitEndTime), 0)
def AddLimitEndTime(builder, limitEndTime):
    return BattlePassExpLimitExcelAddLimitEndTime(builder, limitEndTime)
def BattlePassExpLimitExcelAddExpLimitAmount(builder, expLimitAmount): builder.PrependInt64Slot(3, expLimitAmount, 0)
def AddExpLimitAmount(builder, expLimitAmount):
    return BattlePassExpLimitExcelAddExpLimitAmount(builder, expLimitAmount)
def BattlePassExpLimitExcelEnd(builder): return builder.EndObject()
def End(builder):
    return BattlePassExpLimitExcelEnd(builder)