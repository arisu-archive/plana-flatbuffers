# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class LoadingImageExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = LoadingImageExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsLoadingImageExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # LoadingImageExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # LoadingImageExcel
    def DisplayWeight(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # LoadingImageExcel
    def ImagePathJp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # LoadingImageExcel
    def ImagePathKr(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # LoadingImageExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def LoadingImageExcelStart(builder): builder.StartObject(4)
def Start(builder):
    return LoadingImageExcelStart(builder)
def LoadingImageExcelAddDisplayWeight(builder, displayWeight): builder.PrependInt32Slot(0, displayWeight, 0)
def AddDisplayWeight(builder, displayWeight):
    return LoadingImageExcelAddDisplayWeight(builder, displayWeight)
def LoadingImageExcelAddImagePathJp(builder, imagePathJp): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(imagePathJp), 0)
def AddImagePathJp(builder, imagePathJp):
    return LoadingImageExcelAddImagePathJp(builder, imagePathJp)
def LoadingImageExcelAddImagePathKr(builder, imagePathKr): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(imagePathKr), 0)
def AddImagePathKr(builder, imagePathKr):
    return LoadingImageExcelAddImagePathKr(builder, imagePathKr)
def LoadingImageExcelAddId(builder, id): builder.PrependInt64Slot(3, id, 0)
def AddId(builder, id):
    return LoadingImageExcelAddId(builder, id)
def LoadingImageExcelEnd(builder): return builder.EndObject()
def End(builder):
    return LoadingImageExcelEnd(builder)