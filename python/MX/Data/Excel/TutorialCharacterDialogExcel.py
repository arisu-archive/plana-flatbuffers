# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class TutorialCharacterDialogExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = TutorialCharacterDialogExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsTutorialCharacterDialogExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # TutorialCharacterDialogExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # TutorialCharacterDialogExcel
    def TalkId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # TutorialCharacterDialogExcel
    def AnimationName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # TutorialCharacterDialogExcel
    def LocalizeKr(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # TutorialCharacterDialogExcel
    def LocalizeJp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # TutorialCharacterDialogExcel
    def VoiceId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

def TutorialCharacterDialogExcelStart(builder):
    builder.StartObject(5)

def Start(builder):
    TutorialCharacterDialogExcelStart(builder)

def TutorialCharacterDialogExcelAddTalkId(builder, talkId):
    builder.PrependInt64Slot(0, talkId, 0)

def AddTalkId(builder, talkId):
    TutorialCharacterDialogExcelAddTalkId(builder, talkId)

def TutorialCharacterDialogExcelAddAnimationName(builder, animationName):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(animationName), 0)

def AddAnimationName(builder, animationName):
    TutorialCharacterDialogExcelAddAnimationName(builder, animationName)

def TutorialCharacterDialogExcelAddLocalizeKr(builder, localizeKr):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(localizeKr), 0)

def AddLocalizeKr(builder, localizeKr):
    TutorialCharacterDialogExcelAddLocalizeKr(builder, localizeKr)

def TutorialCharacterDialogExcelAddLocalizeJp(builder, localizeJp):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(localizeJp), 0)

def AddLocalizeJp(builder, localizeJp):
    TutorialCharacterDialogExcelAddLocalizeJp(builder, localizeJp)

def TutorialCharacterDialogExcelAddVoiceId(builder, voiceId):
    builder.PrependUint32Slot(4, voiceId, 0)

def AddVoiceId(builder, voiceId):
    TutorialCharacterDialogExcelAddVoiceId(builder, voiceId)

def TutorialCharacterDialogExcelEnd(builder):
    return builder.EndObject()

def End(builder):
    return TutorialCharacterDialogExcelEnd(builder)
