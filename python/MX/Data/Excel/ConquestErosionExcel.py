# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ConquestErosionExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ConquestErosionExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsConquestErosionExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # ConquestErosionExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ConquestErosionExcel
    def ConquestRewardId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConquestErosionExcel
    def ErosionBattleConditionParcelAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConquestErosionExcel
    def ErosionBattleConditionParcelUniqueId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConquestErosionExcel
    def ErosionBattleConditionParcelType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConquestErosionExcel
    def PhaseBeforeExposeConditionParameter(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # ConquestErosionExcel
    def PhaseBeforeExposeConditionParameterLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # ConquestErosionExcel
    def PhaseBeforeExposeConditionParameterIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        return o == 0

    # ConquestErosionExcel
    def PhaseBeforeExposeConditionType(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # ConquestErosionExcel
    def PhaseBeforeExposeConditionTypeAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int32Flags, o)
        return 0

    # ConquestErosionExcel
    def PhaseBeforeExposeConditionTypeLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # ConquestErosionExcel
    def PhaseBeforeExposeConditionTypeIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        return o == 0

    # ConquestErosionExcel
    def PhaseStartConditionParameter(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # ConquestErosionExcel
    def PhaseStartConditionParameterLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # ConquestErosionExcel
    def PhaseStartConditionParameterIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        return o == 0

    # ConquestErosionExcel
    def PhaseStartConditionType(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # ConquestErosionExcel
    def PhaseStartConditionTypeAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int32Flags, o)
        return 0

    # ConquestErosionExcel
    def PhaseStartConditionTypeLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # ConquestErosionExcel
    def PhaseStartConditionTypeIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        return o == 0

    # ConquestErosionExcel
    def StepIndex(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConquestErosionExcel
    def PhaseAlarm(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # ConquestErosionExcel
    def Phase(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConquestErosionExcel
    def ErosionType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ConquestErosionExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ConquestErosionExcel
    def EventContentId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def ConquestErosionExcelStart(builder): builder.StartObject(14)
def Start(builder):
    return ConquestErosionExcelStart(builder)
def ConquestErosionExcelAddConquestRewardId(builder, conquestRewardId): builder.PrependInt64Slot(0, conquestRewardId, 0)
def AddConquestRewardId(builder, conquestRewardId):
    return ConquestErosionExcelAddConquestRewardId(builder, conquestRewardId)
def ConquestErosionExcelAddErosionBattleConditionParcelAmount(builder, erosionBattleConditionParcelAmount): builder.PrependInt64Slot(1, erosionBattleConditionParcelAmount, 0)
def AddErosionBattleConditionParcelAmount(builder, erosionBattleConditionParcelAmount):
    return ConquestErosionExcelAddErosionBattleConditionParcelAmount(builder, erosionBattleConditionParcelAmount)
def ConquestErosionExcelAddErosionBattleConditionParcelUniqueId(builder, erosionBattleConditionParcelUniqueId): builder.PrependInt64Slot(2, erosionBattleConditionParcelUniqueId, 0)
def AddErosionBattleConditionParcelUniqueId(builder, erosionBattleConditionParcelUniqueId):
    return ConquestErosionExcelAddErosionBattleConditionParcelUniqueId(builder, erosionBattleConditionParcelUniqueId)
def ConquestErosionExcelAddErosionBattleConditionParcelType(builder, erosionBattleConditionParcelType): builder.PrependInt32Slot(3, erosionBattleConditionParcelType, 0)
def AddErosionBattleConditionParcelType(builder, erosionBattleConditionParcelType):
    return ConquestErosionExcelAddErosionBattleConditionParcelType(builder, erosionBattleConditionParcelType)
def ConquestErosionExcelAddPhaseBeforeExposeConditionParameter(builder, phaseBeforeExposeConditionParameter): builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(phaseBeforeExposeConditionParameter), 0)
def AddPhaseBeforeExposeConditionParameter(builder, phaseBeforeExposeConditionParameter):
    return ConquestErosionExcelAddPhaseBeforeExposeConditionParameter(builder, phaseBeforeExposeConditionParameter)
def ConquestErosionExcelStartPhaseBeforeExposeConditionParameterVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def StartPhaseBeforeExposeConditionParameterVector(builder, numElems):
    return ConquestErosionExcelStartPhaseBeforeExposeConditionParameterVector(builder, numElems)
def ConquestErosionExcelAddPhaseBeforeExposeConditionType(builder, phaseBeforeExposeConditionType): builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(phaseBeforeExposeConditionType), 0)
def AddPhaseBeforeExposeConditionType(builder, phaseBeforeExposeConditionType):
    return ConquestErosionExcelAddPhaseBeforeExposeConditionType(builder, phaseBeforeExposeConditionType)
def ConquestErosionExcelStartPhaseBeforeExposeConditionTypeVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def StartPhaseBeforeExposeConditionTypeVector(builder, numElems):
    return ConquestErosionExcelStartPhaseBeforeExposeConditionTypeVector(builder, numElems)
def ConquestErosionExcelAddPhaseStartConditionParameter(builder, phaseStartConditionParameter): builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(phaseStartConditionParameter), 0)
def AddPhaseStartConditionParameter(builder, phaseStartConditionParameter):
    return ConquestErosionExcelAddPhaseStartConditionParameter(builder, phaseStartConditionParameter)
def ConquestErosionExcelStartPhaseStartConditionParameterVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def StartPhaseStartConditionParameterVector(builder, numElems):
    return ConquestErosionExcelStartPhaseStartConditionParameterVector(builder, numElems)
def ConquestErosionExcelAddPhaseStartConditionType(builder, phaseStartConditionType): builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(phaseStartConditionType), 0)
def AddPhaseStartConditionType(builder, phaseStartConditionType):
    return ConquestErosionExcelAddPhaseStartConditionType(builder, phaseStartConditionType)
def ConquestErosionExcelStartPhaseStartConditionTypeVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def StartPhaseStartConditionTypeVector(builder, numElems):
    return ConquestErosionExcelStartPhaseStartConditionTypeVector(builder, numElems)
def ConquestErosionExcelAddStepIndex(builder, stepIndex): builder.PrependInt32Slot(8, stepIndex, 0)
def AddStepIndex(builder, stepIndex):
    return ConquestErosionExcelAddStepIndex(builder, stepIndex)
def ConquestErosionExcelAddPhaseAlarm(builder, phaseAlarm): builder.PrependBoolSlot(9, phaseAlarm, 0)
def AddPhaseAlarm(builder, phaseAlarm):
    return ConquestErosionExcelAddPhaseAlarm(builder, phaseAlarm)
def ConquestErosionExcelAddPhase(builder, phase): builder.PrependInt32Slot(10, phase, 0)
def AddPhase(builder, phase):
    return ConquestErosionExcelAddPhase(builder, phase)
def ConquestErosionExcelAddErosionType(builder, erosionType): builder.PrependInt32Slot(11, erosionType, 0)
def AddErosionType(builder, erosionType):
    return ConquestErosionExcelAddErosionType(builder, erosionType)
def ConquestErosionExcelAddId(builder, id): builder.PrependInt64Slot(12, id, 0)
def AddId(builder, id):
    return ConquestErosionExcelAddId(builder, id)
def ConquestErosionExcelAddEventContentId(builder, eventContentId): builder.PrependInt64Slot(13, eventContentId, 0)
def AddEventContentId(builder, eventContentId):
    return ConquestErosionExcelAddEventContentId(builder, eventContentId)
def ConquestErosionExcelEnd(builder): return builder.EndObject()
def End(builder):
    return ConquestErosionExcelEnd(builder)