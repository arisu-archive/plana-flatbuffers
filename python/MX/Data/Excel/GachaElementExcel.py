# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class GachaElementExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = GachaElementExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsGachaElementExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # GachaElementExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # GachaElementExcel
    def State(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaElementExcel
    def Prob(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaElementExcel
    def ParcelAmountMax(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaElementExcel
    def ParcelAmountMin(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaElementExcel
    def Rarity(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaElementExcel
    def ParcelId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GachaElementExcel
    def ParcelType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GachaElementExcel
    def GachaGroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GachaElementExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def GachaElementExcelStart(builder): builder.StartObject(9)
def Start(builder):
    return GachaElementExcelStart(builder)
def GachaElementExcelAddState(builder, state): builder.PrependInt32Slot(0, state, 0)
def AddState(builder, state):
    return GachaElementExcelAddState(builder, state)
def GachaElementExcelAddProb(builder, prob): builder.PrependInt32Slot(1, prob, 0)
def AddProb(builder, prob):
    return GachaElementExcelAddProb(builder, prob)
def GachaElementExcelAddParcelAmountMax(builder, parcelAmountMax): builder.PrependInt32Slot(2, parcelAmountMax, 0)
def AddParcelAmountMax(builder, parcelAmountMax):
    return GachaElementExcelAddParcelAmountMax(builder, parcelAmountMax)
def GachaElementExcelAddParcelAmountMin(builder, parcelAmountMin): builder.PrependInt32Slot(3, parcelAmountMin, 0)
def AddParcelAmountMin(builder, parcelAmountMin):
    return GachaElementExcelAddParcelAmountMin(builder, parcelAmountMin)
def GachaElementExcelAddRarity(builder, rarity): builder.PrependInt32Slot(4, rarity, 0)
def AddRarity(builder, rarity):
    return GachaElementExcelAddRarity(builder, rarity)
def GachaElementExcelAddParcelId(builder, parcelId): builder.PrependInt64Slot(5, parcelId, 0)
def AddParcelId(builder, parcelId):
    return GachaElementExcelAddParcelId(builder, parcelId)
def GachaElementExcelAddParcelType(builder, parcelType): builder.PrependInt32Slot(6, parcelType, 0)
def AddParcelType(builder, parcelType):
    return GachaElementExcelAddParcelType(builder, parcelType)
def GachaElementExcelAddGachaGroupId(builder, gachaGroupId): builder.PrependInt64Slot(7, gachaGroupId, 0)
def AddGachaGroupId(builder, gachaGroupId):
    return GachaElementExcelAddGachaGroupId(builder, gachaGroupId)
def GachaElementExcelAddId(builder, id): builder.PrependInt64Slot(8, id, 0)
def AddId(builder, id):
    return GachaElementExcelAddId(builder, id)
def GachaElementExcelEnd(builder): return builder.EndObject()
def End(builder):
    return GachaElementExcelEnd(builder)