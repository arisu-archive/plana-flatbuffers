# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class BattlePassLevelExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = BattlePassLevelExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsBattlePassLevelExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # BattlePassLevelExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # BattlePassLevelExcel
    def BattlePassId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # BattlePassLevelExcel
    def Level(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # BattlePassLevelExcel
    def IsPickUpReward(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

def BattlePassLevelExcelStart(builder):
    builder.StartObject(3)

def Start(builder):
    BattlePassLevelExcelStart(builder)

def BattlePassLevelExcelAddBattlePassId(builder, battlePassId):
    builder.PrependInt64Slot(0, battlePassId, 0)

def AddBattlePassId(builder, battlePassId):
    BattlePassLevelExcelAddBattlePassId(builder, battlePassId)

def BattlePassLevelExcelAddLevel(builder, level):
    builder.PrependInt64Slot(1, level, 0)

def AddLevel(builder, level):
    BattlePassLevelExcelAddLevel(builder, level)

def BattlePassLevelExcelAddIsPickUpReward(builder, isPickUpReward):
    builder.PrependBoolSlot(2, isPickUpReward, 0)

def AddIsPickUpReward(builder, isPickUpReward):
    BattlePassLevelExcelAddIsPickUpReward(builder, isPickUpReward)

def BattlePassLevelExcelEnd(builder):
    return builder.EndObject()

def End(builder):
    return BattlePassLevelExcelEnd(builder)
