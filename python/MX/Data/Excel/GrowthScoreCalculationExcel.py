# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class GrowthScoreCalculationExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = GrowthScoreCalculationExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsGrowthScoreCalculationExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # GrowthScoreCalculationExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # GrowthScoreCalculationExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GrowthScoreCalculationExcel
    def IncludeGrowthFactor(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GrowthScoreCalculationExcel
    def ConversionCoefficient(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def GrowthScoreCalculationExcelStart(builder): builder.StartObject(3)
def Start(builder):
    return GrowthScoreCalculationExcelStart(builder)
def GrowthScoreCalculationExcelAddId(builder, id): builder.PrependInt64Slot(0, id, 0)
def AddId(builder, id):
    return GrowthScoreCalculationExcelAddId(builder, id)
def GrowthScoreCalculationExcelAddIncludeGrowthFactor(builder, includeGrowthFactor): builder.PrependInt32Slot(1, includeGrowthFactor, 0)
def AddIncludeGrowthFactor(builder, includeGrowthFactor):
    return GrowthScoreCalculationExcelAddIncludeGrowthFactor(builder, includeGrowthFactor)
def GrowthScoreCalculationExcelAddConversionCoefficient(builder, conversionCoefficient): builder.PrependInt64Slot(2, conversionCoefficient, 0)
def AddConversionCoefficient(builder, conversionCoefficient):
    return GrowthScoreCalculationExcelAddConversionCoefficient(builder, conversionCoefficient)
def GrowthScoreCalculationExcelEnd(builder): return builder.EndObject()
def End(builder):
    return GrowthScoreCalculationExcelEnd(builder)