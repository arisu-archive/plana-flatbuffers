# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class GuideMissionSeasonExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = GuideMissionSeasonExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsGuideMissionSeasonExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # GuideMissionSeasonExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # GuideMissionSeasonExcel
    def AccountType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GuideMissionSeasonExcel
    def BackgroundImage(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # GuideMissionSeasonExcel
    def BannerOpenDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # GuideMissionSeasonExcel
    def CloseBannerAfterCompletion(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # GuideMissionSeasonExcel
    def Enabled(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # GuideMissionSeasonExcel
    def EndDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # GuideMissionSeasonExcel
    def ExpiryDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GuideMissionSeasonExcel
    def IconOrder(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GuideMissionSeasonExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GuideMissionSeasonExcel
    def InfomationLocalizeCode(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # GuideMissionSeasonExcel
    def IsPermanent(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # GuideMissionSeasonExcel
    def LobbyBannerImage(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # GuideMissionSeasonExcel
    def MaximumLoginCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GuideMissionSeasonExcel
    def PermanentInfomationLocalizeCode(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # GuideMissionSeasonExcel
    def PreSeasonId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GuideMissionSeasonExcel
    def RequirementParcelAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GuideMissionSeasonExcel
    def RequirementParcelId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GuideMissionSeasonExcel
    def RequirementParcelImage(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(38))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # GuideMissionSeasonExcel
    def RequirementParcelType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(40))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GuideMissionSeasonExcel
    def RewardImage(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(42))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # GuideMissionSeasonExcel
    def SpineCharacterId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(44))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GuideMissionSeasonExcel
    def StartableEndDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(46))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # GuideMissionSeasonExcel
    def StartDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(48))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # GuideMissionSeasonExcel
    def TabType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(50))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GuideMissionSeasonExcel
    def TitleImage(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(52))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # GuideMissionSeasonExcel
    def TitleLocalizeCode(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(54))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def GuideMissionSeasonExcelStart(builder): builder.StartObject(26)
def Start(builder):
    return GuideMissionSeasonExcelStart(builder)
def GuideMissionSeasonExcelAddAccountType(builder, accountType): builder.PrependInt32Slot(0, accountType, 0)
def AddAccountType(builder, accountType):
    return GuideMissionSeasonExcelAddAccountType(builder, accountType)
def GuideMissionSeasonExcelAddBackgroundImage(builder, backgroundImage): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(backgroundImage), 0)
def AddBackgroundImage(builder, backgroundImage):
    return GuideMissionSeasonExcelAddBackgroundImage(builder, backgroundImage)
def GuideMissionSeasonExcelAddBannerOpenDate(builder, bannerOpenDate): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(bannerOpenDate), 0)
def AddBannerOpenDate(builder, bannerOpenDate):
    return GuideMissionSeasonExcelAddBannerOpenDate(builder, bannerOpenDate)
def GuideMissionSeasonExcelAddCloseBannerAfterCompletion(builder, closeBannerAfterCompletion): builder.PrependBoolSlot(3, closeBannerAfterCompletion, 0)
def AddCloseBannerAfterCompletion(builder, closeBannerAfterCompletion):
    return GuideMissionSeasonExcelAddCloseBannerAfterCompletion(builder, closeBannerAfterCompletion)
def GuideMissionSeasonExcelAddEnabled(builder, enabled): builder.PrependBoolSlot(4, enabled, 0)
def AddEnabled(builder, enabled):
    return GuideMissionSeasonExcelAddEnabled(builder, enabled)
def GuideMissionSeasonExcelAddEndDate(builder, endDate): builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(endDate), 0)
def AddEndDate(builder, endDate):
    return GuideMissionSeasonExcelAddEndDate(builder, endDate)
def GuideMissionSeasonExcelAddExpiryDate(builder, expiryDate): builder.PrependInt64Slot(6, expiryDate, 0)
def AddExpiryDate(builder, expiryDate):
    return GuideMissionSeasonExcelAddExpiryDate(builder, expiryDate)
def GuideMissionSeasonExcelAddIconOrder(builder, iconOrder): builder.PrependInt64Slot(7, iconOrder, 0)
def AddIconOrder(builder, iconOrder):
    return GuideMissionSeasonExcelAddIconOrder(builder, iconOrder)
def GuideMissionSeasonExcelAddId(builder, id): builder.PrependInt64Slot(8, id, 0)
def AddId(builder, id):
    return GuideMissionSeasonExcelAddId(builder, id)
def GuideMissionSeasonExcelAddInfomationLocalizeCode(builder, infomationLocalizeCode): builder.PrependUOffsetTRelativeSlot(9, flatbuffers.number_types.UOffsetTFlags.py_type(infomationLocalizeCode), 0)
def AddInfomationLocalizeCode(builder, infomationLocalizeCode):
    return GuideMissionSeasonExcelAddInfomationLocalizeCode(builder, infomationLocalizeCode)
def GuideMissionSeasonExcelAddIsPermanent(builder, isPermanent): builder.PrependBoolSlot(10, isPermanent, 0)
def AddIsPermanent(builder, isPermanent):
    return GuideMissionSeasonExcelAddIsPermanent(builder, isPermanent)
def GuideMissionSeasonExcelAddLobbyBannerImage(builder, lobbyBannerImage): builder.PrependUOffsetTRelativeSlot(11, flatbuffers.number_types.UOffsetTFlags.py_type(lobbyBannerImage), 0)
def AddLobbyBannerImage(builder, lobbyBannerImage):
    return GuideMissionSeasonExcelAddLobbyBannerImage(builder, lobbyBannerImage)
def GuideMissionSeasonExcelAddMaximumLoginCount(builder, maximumLoginCount): builder.PrependInt64Slot(12, maximumLoginCount, 0)
def AddMaximumLoginCount(builder, maximumLoginCount):
    return GuideMissionSeasonExcelAddMaximumLoginCount(builder, maximumLoginCount)
def GuideMissionSeasonExcelAddPermanentInfomationLocalizeCode(builder, permanentInfomationLocalizeCode): builder.PrependUOffsetTRelativeSlot(13, flatbuffers.number_types.UOffsetTFlags.py_type(permanentInfomationLocalizeCode), 0)
def AddPermanentInfomationLocalizeCode(builder, permanentInfomationLocalizeCode):
    return GuideMissionSeasonExcelAddPermanentInfomationLocalizeCode(builder, permanentInfomationLocalizeCode)
def GuideMissionSeasonExcelAddPreSeasonId(builder, preSeasonId): builder.PrependInt64Slot(14, preSeasonId, 0)
def AddPreSeasonId(builder, preSeasonId):
    return GuideMissionSeasonExcelAddPreSeasonId(builder, preSeasonId)
def GuideMissionSeasonExcelAddRequirementParcelAmount(builder, requirementParcelAmount): builder.PrependInt32Slot(15, requirementParcelAmount, 0)
def AddRequirementParcelAmount(builder, requirementParcelAmount):
    return GuideMissionSeasonExcelAddRequirementParcelAmount(builder, requirementParcelAmount)
def GuideMissionSeasonExcelAddRequirementParcelId(builder, requirementParcelId): builder.PrependInt64Slot(16, requirementParcelId, 0)
def AddRequirementParcelId(builder, requirementParcelId):
    return GuideMissionSeasonExcelAddRequirementParcelId(builder, requirementParcelId)
def GuideMissionSeasonExcelAddRequirementParcelImage(builder, requirementParcelImage): builder.PrependUOffsetTRelativeSlot(17, flatbuffers.number_types.UOffsetTFlags.py_type(requirementParcelImage), 0)
def AddRequirementParcelImage(builder, requirementParcelImage):
    return GuideMissionSeasonExcelAddRequirementParcelImage(builder, requirementParcelImage)
def GuideMissionSeasonExcelAddRequirementParcelType(builder, requirementParcelType): builder.PrependInt32Slot(18, requirementParcelType, 0)
def AddRequirementParcelType(builder, requirementParcelType):
    return GuideMissionSeasonExcelAddRequirementParcelType(builder, requirementParcelType)
def GuideMissionSeasonExcelAddRewardImage(builder, rewardImage): builder.PrependUOffsetTRelativeSlot(19, flatbuffers.number_types.UOffsetTFlags.py_type(rewardImage), 0)
def AddRewardImage(builder, rewardImage):
    return GuideMissionSeasonExcelAddRewardImage(builder, rewardImage)
def GuideMissionSeasonExcelAddSpineCharacterId(builder, spineCharacterId): builder.PrependInt64Slot(20, spineCharacterId, 0)
def AddSpineCharacterId(builder, spineCharacterId):
    return GuideMissionSeasonExcelAddSpineCharacterId(builder, spineCharacterId)
def GuideMissionSeasonExcelAddStartableEndDate(builder, startableEndDate): builder.PrependUOffsetTRelativeSlot(21, flatbuffers.number_types.UOffsetTFlags.py_type(startableEndDate), 0)
def AddStartableEndDate(builder, startableEndDate):
    return GuideMissionSeasonExcelAddStartableEndDate(builder, startableEndDate)
def GuideMissionSeasonExcelAddStartDate(builder, startDate): builder.PrependUOffsetTRelativeSlot(22, flatbuffers.number_types.UOffsetTFlags.py_type(startDate), 0)
def AddStartDate(builder, startDate):
    return GuideMissionSeasonExcelAddStartDate(builder, startDate)
def GuideMissionSeasonExcelAddTabType(builder, tabType): builder.PrependInt32Slot(23, tabType, 0)
def AddTabType(builder, tabType):
    return GuideMissionSeasonExcelAddTabType(builder, tabType)
def GuideMissionSeasonExcelAddTitleImage(builder, titleImage): builder.PrependUOffsetTRelativeSlot(24, flatbuffers.number_types.UOffsetTFlags.py_type(titleImage), 0)
def AddTitleImage(builder, titleImage):
    return GuideMissionSeasonExcelAddTitleImage(builder, titleImage)
def GuideMissionSeasonExcelAddTitleLocalizeCode(builder, titleLocalizeCode): builder.PrependUOffsetTRelativeSlot(25, flatbuffers.number_types.UOffsetTFlags.py_type(titleLocalizeCode), 0)
def AddTitleLocalizeCode(builder, titleLocalizeCode):
    return GuideMissionSeasonExcelAddTitleLocalizeCode(builder, titleLocalizeCode)
def GuideMissionSeasonExcelEnd(builder): return builder.EndObject()
def End(builder):
    return GuideMissionSeasonExcelEnd(builder)