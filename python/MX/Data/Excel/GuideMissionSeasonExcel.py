# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class GuideMissionSeasonExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = GuideMissionSeasonExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsGuideMissionSeasonExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # GuideMissionSeasonExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # GuideMissionSeasonExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GuideMissionSeasonExcel
    def TitleLocalizeCode(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # GuideMissionSeasonExcel
    def PermanentInfomationLocalizeCode(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # GuideMissionSeasonExcel
    def InfomationLocalizeCode(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # GuideMissionSeasonExcel
    def AccountType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GuideMissionSeasonExcel
    def Enabled(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # GuideMissionSeasonExcel
    def BannerOpenDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # GuideMissionSeasonExcel
    def StartDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # GuideMissionSeasonExcel
    def StartableEndDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # GuideMissionSeasonExcel
    def EndDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # GuideMissionSeasonExcel
    def CloseBannerAfterCompletion(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # GuideMissionSeasonExcel
    def MaximumLoginCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GuideMissionSeasonExcel
    def ExpiryDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GuideMissionSeasonExcel
    def IconOrder(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GuideMissionSeasonExcel
    def SpineCharacterId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GuideMissionSeasonExcel
    def RequirementParcelImage(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # GuideMissionSeasonExcel
    def RewardImage(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # GuideMissionSeasonExcel
    def LobbyBannerImage(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(38))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # GuideMissionSeasonExcel
    def BackgroundImage(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(40))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # GuideMissionSeasonExcel
    def TitleImage(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(42))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # GuideMissionSeasonExcel
    def RequirementParcelType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(44))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GuideMissionSeasonExcel
    def RequirementParcelId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(46))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # GuideMissionSeasonExcel
    def RequirementParcelAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(48))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GuideMissionSeasonExcel
    def TabType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(50))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # GuideMissionSeasonExcel
    def IsPermanent(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(52))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # GuideMissionSeasonExcel
    def PreSeasonId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(54))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def GuideMissionSeasonExcelStart(builder):
    builder.StartObject(26)

def Start(builder):
    GuideMissionSeasonExcelStart(builder)

def GuideMissionSeasonExcelAddId(builder, id):
    builder.PrependInt64Slot(0, id, 0)

def AddId(builder, id):
    GuideMissionSeasonExcelAddId(builder, id)

def GuideMissionSeasonExcelAddTitleLocalizeCode(builder, titleLocalizeCode):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(titleLocalizeCode), 0)

def AddTitleLocalizeCode(builder, titleLocalizeCode):
    GuideMissionSeasonExcelAddTitleLocalizeCode(builder, titleLocalizeCode)

def GuideMissionSeasonExcelAddPermanentInfomationLocalizeCode(builder, permanentInfomationLocalizeCode):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(permanentInfomationLocalizeCode), 0)

def AddPermanentInfomationLocalizeCode(builder, permanentInfomationLocalizeCode):
    GuideMissionSeasonExcelAddPermanentInfomationLocalizeCode(builder, permanentInfomationLocalizeCode)

def GuideMissionSeasonExcelAddInfomationLocalizeCode(builder, infomationLocalizeCode):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(infomationLocalizeCode), 0)

def AddInfomationLocalizeCode(builder, infomationLocalizeCode):
    GuideMissionSeasonExcelAddInfomationLocalizeCode(builder, infomationLocalizeCode)

def GuideMissionSeasonExcelAddAccountType(builder, accountType):
    builder.PrependInt32Slot(4, accountType, 0)

def AddAccountType(builder, accountType):
    GuideMissionSeasonExcelAddAccountType(builder, accountType)

def GuideMissionSeasonExcelAddEnabled(builder, enabled):
    builder.PrependBoolSlot(5, enabled, 0)

def AddEnabled(builder, enabled):
    GuideMissionSeasonExcelAddEnabled(builder, enabled)

def GuideMissionSeasonExcelAddBannerOpenDate(builder, bannerOpenDate):
    builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(bannerOpenDate), 0)

def AddBannerOpenDate(builder, bannerOpenDate):
    GuideMissionSeasonExcelAddBannerOpenDate(builder, bannerOpenDate)

def GuideMissionSeasonExcelAddStartDate(builder, startDate):
    builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(startDate), 0)

def AddStartDate(builder, startDate):
    GuideMissionSeasonExcelAddStartDate(builder, startDate)

def GuideMissionSeasonExcelAddStartableEndDate(builder, startableEndDate):
    builder.PrependUOffsetTRelativeSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(startableEndDate), 0)

def AddStartableEndDate(builder, startableEndDate):
    GuideMissionSeasonExcelAddStartableEndDate(builder, startableEndDate)

def GuideMissionSeasonExcelAddEndDate(builder, endDate):
    builder.PrependUOffsetTRelativeSlot(9, flatbuffers.number_types.UOffsetTFlags.py_type(endDate), 0)

def AddEndDate(builder, endDate):
    GuideMissionSeasonExcelAddEndDate(builder, endDate)

def GuideMissionSeasonExcelAddCloseBannerAfterCompletion(builder, closeBannerAfterCompletion):
    builder.PrependBoolSlot(10, closeBannerAfterCompletion, 0)

def AddCloseBannerAfterCompletion(builder, closeBannerAfterCompletion):
    GuideMissionSeasonExcelAddCloseBannerAfterCompletion(builder, closeBannerAfterCompletion)

def GuideMissionSeasonExcelAddMaximumLoginCount(builder, maximumLoginCount):
    builder.PrependInt64Slot(11, maximumLoginCount, 0)

def AddMaximumLoginCount(builder, maximumLoginCount):
    GuideMissionSeasonExcelAddMaximumLoginCount(builder, maximumLoginCount)

def GuideMissionSeasonExcelAddExpiryDate(builder, expiryDate):
    builder.PrependInt64Slot(12, expiryDate, 0)

def AddExpiryDate(builder, expiryDate):
    GuideMissionSeasonExcelAddExpiryDate(builder, expiryDate)

def GuideMissionSeasonExcelAddIconOrder(builder, iconOrder):
    builder.PrependInt64Slot(13, iconOrder, 0)

def AddIconOrder(builder, iconOrder):
    GuideMissionSeasonExcelAddIconOrder(builder, iconOrder)

def GuideMissionSeasonExcelAddSpineCharacterId(builder, spineCharacterId):
    builder.PrependInt64Slot(14, spineCharacterId, 0)

def AddSpineCharacterId(builder, spineCharacterId):
    GuideMissionSeasonExcelAddSpineCharacterId(builder, spineCharacterId)

def GuideMissionSeasonExcelAddRequirementParcelImage(builder, requirementParcelImage):
    builder.PrependUOffsetTRelativeSlot(15, flatbuffers.number_types.UOffsetTFlags.py_type(requirementParcelImage), 0)

def AddRequirementParcelImage(builder, requirementParcelImage):
    GuideMissionSeasonExcelAddRequirementParcelImage(builder, requirementParcelImage)

def GuideMissionSeasonExcelAddRewardImage(builder, rewardImage):
    builder.PrependUOffsetTRelativeSlot(16, flatbuffers.number_types.UOffsetTFlags.py_type(rewardImage), 0)

def AddRewardImage(builder, rewardImage):
    GuideMissionSeasonExcelAddRewardImage(builder, rewardImage)

def GuideMissionSeasonExcelAddLobbyBannerImage(builder, lobbyBannerImage):
    builder.PrependUOffsetTRelativeSlot(17, flatbuffers.number_types.UOffsetTFlags.py_type(lobbyBannerImage), 0)

def AddLobbyBannerImage(builder, lobbyBannerImage):
    GuideMissionSeasonExcelAddLobbyBannerImage(builder, lobbyBannerImage)

def GuideMissionSeasonExcelAddBackgroundImage(builder, backgroundImage):
    builder.PrependUOffsetTRelativeSlot(18, flatbuffers.number_types.UOffsetTFlags.py_type(backgroundImage), 0)

def AddBackgroundImage(builder, backgroundImage):
    GuideMissionSeasonExcelAddBackgroundImage(builder, backgroundImage)

def GuideMissionSeasonExcelAddTitleImage(builder, titleImage):
    builder.PrependUOffsetTRelativeSlot(19, flatbuffers.number_types.UOffsetTFlags.py_type(titleImage), 0)

def AddTitleImage(builder, titleImage):
    GuideMissionSeasonExcelAddTitleImage(builder, titleImage)

def GuideMissionSeasonExcelAddRequirementParcelType(builder, requirementParcelType):
    builder.PrependInt32Slot(20, requirementParcelType, 0)

def AddRequirementParcelType(builder, requirementParcelType):
    GuideMissionSeasonExcelAddRequirementParcelType(builder, requirementParcelType)

def GuideMissionSeasonExcelAddRequirementParcelId(builder, requirementParcelId):
    builder.PrependInt64Slot(21, requirementParcelId, 0)

def AddRequirementParcelId(builder, requirementParcelId):
    GuideMissionSeasonExcelAddRequirementParcelId(builder, requirementParcelId)

def GuideMissionSeasonExcelAddRequirementParcelAmount(builder, requirementParcelAmount):
    builder.PrependInt32Slot(22, requirementParcelAmount, 0)

def AddRequirementParcelAmount(builder, requirementParcelAmount):
    GuideMissionSeasonExcelAddRequirementParcelAmount(builder, requirementParcelAmount)

def GuideMissionSeasonExcelAddTabType(builder, tabType):
    builder.PrependInt32Slot(23, tabType, 0)

def AddTabType(builder, tabType):
    GuideMissionSeasonExcelAddTabType(builder, tabType)

def GuideMissionSeasonExcelAddIsPermanent(builder, isPermanent):
    builder.PrependBoolSlot(24, isPermanent, 0)

def AddIsPermanent(builder, isPermanent):
    GuideMissionSeasonExcelAddIsPermanent(builder, isPermanent)

def GuideMissionSeasonExcelAddPreSeasonId(builder, preSeasonId):
    builder.PrependInt64Slot(25, preSeasonId, 0)

def AddPreSeasonId(builder, preSeasonId):
    GuideMissionSeasonExcelAddPreSeasonId(builder, preSeasonId)

def GuideMissionSeasonExcelEnd(builder):
    return builder.EndObject()

def End(builder):
    return GuideMissionSeasonExcelEnd(builder)
