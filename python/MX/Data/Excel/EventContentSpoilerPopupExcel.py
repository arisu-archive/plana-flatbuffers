# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class EventContentSpoilerPopupExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = EventContentSpoilerPopupExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsEventContentSpoilerPopupExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # EventContentSpoilerPopupExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # EventContentSpoilerPopupExcel
    def ConditionScenarioModeId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EventContentSpoilerPopupExcel
    def IsWarningPopUp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # EventContentSpoilerPopupExcel
    def SpoilerPopupDescription(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # EventContentSpoilerPopupExcel
    def SpoilerPopupTitle(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # EventContentSpoilerPopupExcel
    def EventContentId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def EventContentSpoilerPopupExcelStart(builder): builder.StartObject(5)
def Start(builder):
    return EventContentSpoilerPopupExcelStart(builder)
def EventContentSpoilerPopupExcelAddConditionScenarioModeId(builder, conditionScenarioModeId): builder.PrependInt64Slot(0, conditionScenarioModeId, 0)
def AddConditionScenarioModeId(builder, conditionScenarioModeId):
    return EventContentSpoilerPopupExcelAddConditionScenarioModeId(builder, conditionScenarioModeId)
def EventContentSpoilerPopupExcelAddIsWarningPopUp(builder, isWarningPopUp): builder.PrependBoolSlot(1, isWarningPopUp, 0)
def AddIsWarningPopUp(builder, isWarningPopUp):
    return EventContentSpoilerPopupExcelAddIsWarningPopUp(builder, isWarningPopUp)
def EventContentSpoilerPopupExcelAddSpoilerPopupDescription(builder, spoilerPopupDescription): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(spoilerPopupDescription), 0)
def AddSpoilerPopupDescription(builder, spoilerPopupDescription):
    return EventContentSpoilerPopupExcelAddSpoilerPopupDescription(builder, spoilerPopupDescription)
def EventContentSpoilerPopupExcelAddSpoilerPopupTitle(builder, spoilerPopupTitle): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(spoilerPopupTitle), 0)
def AddSpoilerPopupTitle(builder, spoilerPopupTitle):
    return EventContentSpoilerPopupExcelAddSpoilerPopupTitle(builder, spoilerPopupTitle)
def EventContentSpoilerPopupExcelAddEventContentId(builder, eventContentId): builder.PrependInt64Slot(4, eventContentId, 0)
def AddEventContentId(builder, eventContentId):
    return EventContentSpoilerPopupExcelAddEventContentId(builder, eventContentId)
def EventContentSpoilerPopupExcelEnd(builder): return builder.EndObject()
def End(builder):
    return EventContentSpoilerPopupExcelEnd(builder)