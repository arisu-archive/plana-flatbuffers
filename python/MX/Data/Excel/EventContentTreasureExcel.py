# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class EventContentTreasureExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = EventContentTreasureExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsEventContentTreasureExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # EventContentTreasureExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # EventContentTreasureExcel
    def EventContentId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EventContentTreasureExcel
    def TitleLocalize(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # EventContentTreasureExcel
    def LoopRound(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # EventContentTreasureExcel
    def UsePrefabName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # EventContentTreasureExcel
    def TreasureBgImagePath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def EventContentTreasureExcelStart(builder):
    builder.StartObject(5)

def Start(builder):
    EventContentTreasureExcelStart(builder)

def EventContentTreasureExcelAddEventContentId(builder, eventContentId):
    builder.PrependInt64Slot(0, eventContentId, 0)

def AddEventContentId(builder, eventContentId):
    EventContentTreasureExcelAddEventContentId(builder, eventContentId)

def EventContentTreasureExcelAddTitleLocalize(builder, titleLocalize):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(titleLocalize), 0)

def AddTitleLocalize(builder, titleLocalize):
    EventContentTreasureExcelAddTitleLocalize(builder, titleLocalize)

def EventContentTreasureExcelAddLoopRound(builder, loopRound):
    builder.PrependInt32Slot(2, loopRound, 0)

def AddLoopRound(builder, loopRound):
    EventContentTreasureExcelAddLoopRound(builder, loopRound)

def EventContentTreasureExcelAddUsePrefabName(builder, usePrefabName):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(usePrefabName), 0)

def AddUsePrefabName(builder, usePrefabName):
    EventContentTreasureExcelAddUsePrefabName(builder, usePrefabName)

def EventContentTreasureExcelAddTreasureBgImagePath(builder, treasureBgImagePath):
    builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(treasureBgImagePath), 0)

def AddTreasureBgImagePath(builder, treasureBgImagePath):
    EventContentTreasureExcelAddTreasureBgImagePath(builder, treasureBgImagePath)

def EventContentTreasureExcelEnd(builder):
    return builder.EndObject()

def End(builder):
    return EventContentTreasureExcelEnd(builder)
