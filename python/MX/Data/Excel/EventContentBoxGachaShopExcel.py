# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class EventContentBoxGachaShopExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = EventContentBoxGachaShopExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsEventContentBoxGachaShopExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # EventContentBoxGachaShopExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # EventContentBoxGachaShopExcel
    def DisplayOrder(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EventContentBoxGachaShopExcel
    def EventContentId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EventContentBoxGachaShopExcel
    def GoodsId(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int64Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 8))
        return 0

    # EventContentBoxGachaShopExcel
    def GoodsIdAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int64Flags, o)
        return 0

    # EventContentBoxGachaShopExcel
    def GoodsIdLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # EventContentBoxGachaShopExcel
    def GoodsIdIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        return o == 0

    # EventContentBoxGachaShopExcel
    def GroupElementAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EventContentBoxGachaShopExcel
    def GroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EventContentBoxGachaShopExcel
    def IsLegacy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # EventContentBoxGachaShopExcel
    def IsPrize(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # EventContentBoxGachaShopExcel
    def Round(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def EventContentBoxGachaShopExcelStart(builder): builder.StartObject(8)
def Start(builder):
    return EventContentBoxGachaShopExcelStart(builder)
def EventContentBoxGachaShopExcelAddDisplayOrder(builder, displayOrder): builder.PrependInt64Slot(0, displayOrder, 0)
def AddDisplayOrder(builder, displayOrder):
    return EventContentBoxGachaShopExcelAddDisplayOrder(builder, displayOrder)
def EventContentBoxGachaShopExcelAddEventContentId(builder, eventContentId): builder.PrependInt64Slot(1, eventContentId, 0)
def AddEventContentId(builder, eventContentId):
    return EventContentBoxGachaShopExcelAddEventContentId(builder, eventContentId)
def EventContentBoxGachaShopExcelAddGoodsId(builder, goodsId): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(goodsId), 0)
def AddGoodsId(builder, goodsId):
    return EventContentBoxGachaShopExcelAddGoodsId(builder, goodsId)
def EventContentBoxGachaShopExcelStartGoodsIdVector(builder, numElems): return builder.StartVector(8, numElems, 8)
def StartGoodsIdVector(builder, numElems):
    return EventContentBoxGachaShopExcelStartGoodsIdVector(builder, numElems)
def EventContentBoxGachaShopExcelAddGroupElementAmount(builder, groupElementAmount): builder.PrependInt64Slot(3, groupElementAmount, 0)
def AddGroupElementAmount(builder, groupElementAmount):
    return EventContentBoxGachaShopExcelAddGroupElementAmount(builder, groupElementAmount)
def EventContentBoxGachaShopExcelAddGroupId(builder, groupId): builder.PrependInt64Slot(4, groupId, 0)
def AddGroupId(builder, groupId):
    return EventContentBoxGachaShopExcelAddGroupId(builder, groupId)
def EventContentBoxGachaShopExcelAddIsLegacy(builder, isLegacy): builder.PrependBoolSlot(5, isLegacy, 0)
def AddIsLegacy(builder, isLegacy):
    return EventContentBoxGachaShopExcelAddIsLegacy(builder, isLegacy)
def EventContentBoxGachaShopExcelAddIsPrize(builder, isPrize): builder.PrependBoolSlot(6, isPrize, 0)
def AddIsPrize(builder, isPrize):
    return EventContentBoxGachaShopExcelAddIsPrize(builder, isPrize)
def EventContentBoxGachaShopExcelAddRound(builder, round): builder.PrependInt64Slot(7, round, 0)
def AddRound(builder, round):
    return EventContentBoxGachaShopExcelAddRound(builder, round)
def EventContentBoxGachaShopExcelEnd(builder): return builder.EndObject()
def End(builder):
    return EventContentBoxGachaShopExcelEnd(builder)