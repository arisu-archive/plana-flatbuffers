# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class EventContentLocationExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = EventContentLocationExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsEventContentLocationExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # EventContentLocationExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # EventContentLocationExcel
    def EventContentId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EventContentLocationExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EventContentLocationExcel
    def LocalizeEtcId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # EventContentLocationExcel
    def PrefabPath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # EventContentLocationExcel
    def LocationResetScheduleCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # EventContentLocationExcel
    def ScheduleEventPointCostParcelType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # EventContentLocationExcel
    def ScheduleEventPointCostParcelId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EventContentLocationExcel
    def ScheduleEventPointCostParcelAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EventContentLocationExcel
    def RewardParcelType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # EventContentLocationExcel
    def RewardParcelId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EventContentLocationExcel
    def InformationGroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def EventContentLocationExcelStart(builder):
    builder.StartObject(11)

def Start(builder):
    EventContentLocationExcelStart(builder)

def EventContentLocationExcelAddEventContentId(builder, eventContentId):
    builder.PrependInt64Slot(0, eventContentId, 0)

def AddEventContentId(builder, eventContentId):
    EventContentLocationExcelAddEventContentId(builder, eventContentId)

def EventContentLocationExcelAddId(builder, id):
    builder.PrependInt64Slot(1, id, 0)

def AddId(builder, id):
    EventContentLocationExcelAddId(builder, id)

def EventContentLocationExcelAddLocalizeEtcId(builder, localizeEtcId):
    builder.PrependUint32Slot(2, localizeEtcId, 0)

def AddLocalizeEtcId(builder, localizeEtcId):
    EventContentLocationExcelAddLocalizeEtcId(builder, localizeEtcId)

def EventContentLocationExcelAddPrefabPath(builder, prefabPath):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(prefabPath), 0)

def AddPrefabPath(builder, prefabPath):
    EventContentLocationExcelAddPrefabPath(builder, prefabPath)

def EventContentLocationExcelAddLocationResetScheduleCount(builder, locationResetScheduleCount):
    builder.PrependInt32Slot(4, locationResetScheduleCount, 0)

def AddLocationResetScheduleCount(builder, locationResetScheduleCount):
    EventContentLocationExcelAddLocationResetScheduleCount(builder, locationResetScheduleCount)

def EventContentLocationExcelAddScheduleEventPointCostParcelType(builder, scheduleEventPointCostParcelType):
    builder.PrependInt32Slot(5, scheduleEventPointCostParcelType, 0)

def AddScheduleEventPointCostParcelType(builder, scheduleEventPointCostParcelType):
    EventContentLocationExcelAddScheduleEventPointCostParcelType(builder, scheduleEventPointCostParcelType)

def EventContentLocationExcelAddScheduleEventPointCostParcelId(builder, scheduleEventPointCostParcelId):
    builder.PrependInt64Slot(6, scheduleEventPointCostParcelId, 0)

def AddScheduleEventPointCostParcelId(builder, scheduleEventPointCostParcelId):
    EventContentLocationExcelAddScheduleEventPointCostParcelId(builder, scheduleEventPointCostParcelId)

def EventContentLocationExcelAddScheduleEventPointCostParcelAmount(builder, scheduleEventPointCostParcelAmount):
    builder.PrependInt64Slot(7, scheduleEventPointCostParcelAmount, 0)

def AddScheduleEventPointCostParcelAmount(builder, scheduleEventPointCostParcelAmount):
    EventContentLocationExcelAddScheduleEventPointCostParcelAmount(builder, scheduleEventPointCostParcelAmount)

def EventContentLocationExcelAddRewardParcelType(builder, rewardParcelType):
    builder.PrependInt32Slot(8, rewardParcelType, 0)

def AddRewardParcelType(builder, rewardParcelType):
    EventContentLocationExcelAddRewardParcelType(builder, rewardParcelType)

def EventContentLocationExcelAddRewardParcelId(builder, rewardParcelId):
    builder.PrependInt64Slot(9, rewardParcelId, 0)

def AddRewardParcelId(builder, rewardParcelId):
    EventContentLocationExcelAddRewardParcelId(builder, rewardParcelId)

def EventContentLocationExcelAddInformationGroupId(builder, informationGroupId):
    builder.PrependInt64Slot(10, informationGroupId, 0)

def AddInformationGroupId(builder, informationGroupId):
    EventContentLocationExcelAddInformationGroupId(builder, informationGroupId)

def EventContentLocationExcelEnd(builder):
    return builder.EndObject()

def End(builder):
    return EventContentLocationExcelEnd(builder)
