# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class SkillSelectExTooltipExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = SkillSelectExTooltipExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsSkillSelectExTooltipExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # SkillSelectExTooltipExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # SkillSelectExTooltipExcel
    def SkillUseConditionLocalizeId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # SkillSelectExTooltipExcel
    def SelectableExSkillGroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # SkillSelectExTooltipExcel
    def GroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def SkillSelectExTooltipExcelStart(builder): builder.StartObject(3)
def Start(builder):
    return SkillSelectExTooltipExcelStart(builder)
def SkillSelectExTooltipExcelAddSkillUseConditionLocalizeId(builder, skillUseConditionLocalizeId): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(skillUseConditionLocalizeId), 0)
def AddSkillUseConditionLocalizeId(builder, skillUseConditionLocalizeId):
    return SkillSelectExTooltipExcelAddSkillUseConditionLocalizeId(builder, skillUseConditionLocalizeId)
def SkillSelectExTooltipExcelAddSelectableExSkillGroupId(builder, selectableExSkillGroupId): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(selectableExSkillGroupId), 0)
def AddSelectableExSkillGroupId(builder, selectableExSkillGroupId):
    return SkillSelectExTooltipExcelAddSelectableExSkillGroupId(builder, selectableExSkillGroupId)
def SkillSelectExTooltipExcelAddGroupId(builder, groupId): builder.PrependInt64Slot(2, groupId, 0)
def AddGroupId(builder, groupId):
    return SkillSelectExTooltipExcelAddGroupId(builder, groupId)
def SkillSelectExTooltipExcelEnd(builder): return builder.EndObject()
def End(builder):
    return SkillSelectExTooltipExcelEnd(builder)