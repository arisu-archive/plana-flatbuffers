# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ShopRecruitExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ShopRecruitExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsShopRecruitExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # ShopRecruitExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ShopRecruitExcel
    def MaxSelectCharacterNum(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ShopRecruitExcel
    def SelectAbleGachaGroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ShopRecruitExcel
    def DirectPayAppleShopCashId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ShopRecruitExcel
    def DirectPayAndroidShopCashId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ShopRecruitExcel
    def DirectPayInvisibleTokenId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ShopRecruitExcel
    def IsSelectRecruit(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # ShopRecruitExcel
    def IsNewbie(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # ShopRecruitExcel
    def PurchaseCountResetType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ShopRecruitExcel
    def PurchaseCountLimit(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ShopRecruitExcel
    def PurchaseCooltimeMin(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ShopRecruitExcel
    def RecruitSellectionShopId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ShopRecruitExcel
    def RecruitCoinId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ShopRecruitExcel
    def SalePeriodTo(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ShopRecruitExcel
    def SalePeriodFrom(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ShopRecruitExcel
    def SalePeriodVisible(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # ShopRecruitExcel
    def InfoCharacterId(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int64Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 8))
        return 0

    # ShopRecruitExcel
    def InfoCharacterIdAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int64Flags, o)
        return 0

    # ShopRecruitExcel
    def InfoCharacterIdLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # ShopRecruitExcel
    def InfoCharacterIdIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        return o == 0

    # ShopRecruitExcel
    def LinkedRobbyBannerId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ShopRecruitExcel
    def VideoId(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(38))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int64Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 8))
        return 0

    # ShopRecruitExcel
    def VideoIdAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(38))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int64Flags, o)
        return 0

    # ShopRecruitExcel
    def VideoIdLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(38))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # ShopRecruitExcel
    def VideoIdIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(38))
        return o == 0

    # ShopRecruitExcel
    def GachaBannerPath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(40))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ShopRecruitExcel
    def DisplayOrder(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(42))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ShopRecruitExcel
    def DisplayTag(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(44))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ShopRecruitExcel
    def GoodsDevName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(46))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ShopRecruitExcel
    def TenGachaGoodsId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(48))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ShopRecruitExcel
    def OneGachaGoodsId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(50))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ShopRecruitExcel
    def IsLegacy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(52))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # ShopRecruitExcel
    def CategoryType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(54))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ShopRecruitExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(56))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def ShopRecruitExcelStart(builder): builder.StartObject(27)
def Start(builder):
    return ShopRecruitExcelStart(builder)
def ShopRecruitExcelAddMaxSelectCharacterNum(builder, maxSelectCharacterNum): builder.PrependInt64Slot(0, maxSelectCharacterNum, 0)
def AddMaxSelectCharacterNum(builder, maxSelectCharacterNum):
    return ShopRecruitExcelAddMaxSelectCharacterNum(builder, maxSelectCharacterNum)
def ShopRecruitExcelAddSelectAbleGachaGroupId(builder, selectAbleGachaGroupId): builder.PrependInt64Slot(1, selectAbleGachaGroupId, 0)
def AddSelectAbleGachaGroupId(builder, selectAbleGachaGroupId):
    return ShopRecruitExcelAddSelectAbleGachaGroupId(builder, selectAbleGachaGroupId)
def ShopRecruitExcelAddDirectPayAppleShopCashId(builder, directPayAppleShopCashId): builder.PrependInt64Slot(2, directPayAppleShopCashId, 0)
def AddDirectPayAppleShopCashId(builder, directPayAppleShopCashId):
    return ShopRecruitExcelAddDirectPayAppleShopCashId(builder, directPayAppleShopCashId)
def ShopRecruitExcelAddDirectPayAndroidShopCashId(builder, directPayAndroidShopCashId): builder.PrependInt64Slot(3, directPayAndroidShopCashId, 0)
def AddDirectPayAndroidShopCashId(builder, directPayAndroidShopCashId):
    return ShopRecruitExcelAddDirectPayAndroidShopCashId(builder, directPayAndroidShopCashId)
def ShopRecruitExcelAddDirectPayInvisibleTokenId(builder, directPayInvisibleTokenId): builder.PrependInt64Slot(4, directPayInvisibleTokenId, 0)
def AddDirectPayInvisibleTokenId(builder, directPayInvisibleTokenId):
    return ShopRecruitExcelAddDirectPayInvisibleTokenId(builder, directPayInvisibleTokenId)
def ShopRecruitExcelAddIsSelectRecruit(builder, isSelectRecruit): builder.PrependBoolSlot(5, isSelectRecruit, 0)
def AddIsSelectRecruit(builder, isSelectRecruit):
    return ShopRecruitExcelAddIsSelectRecruit(builder, isSelectRecruit)
def ShopRecruitExcelAddIsNewbie(builder, isNewbie): builder.PrependBoolSlot(6, isNewbie, 0)
def AddIsNewbie(builder, isNewbie):
    return ShopRecruitExcelAddIsNewbie(builder, isNewbie)
def ShopRecruitExcelAddPurchaseCountResetType(builder, purchaseCountResetType): builder.PrependInt32Slot(7, purchaseCountResetType, 0)
def AddPurchaseCountResetType(builder, purchaseCountResetType):
    return ShopRecruitExcelAddPurchaseCountResetType(builder, purchaseCountResetType)
def ShopRecruitExcelAddPurchaseCountLimit(builder, purchaseCountLimit): builder.PrependInt64Slot(8, purchaseCountLimit, 0)
def AddPurchaseCountLimit(builder, purchaseCountLimit):
    return ShopRecruitExcelAddPurchaseCountLimit(builder, purchaseCountLimit)
def ShopRecruitExcelAddPurchaseCooltimeMin(builder, purchaseCooltimeMin): builder.PrependInt64Slot(9, purchaseCooltimeMin, 0)
def AddPurchaseCooltimeMin(builder, purchaseCooltimeMin):
    return ShopRecruitExcelAddPurchaseCooltimeMin(builder, purchaseCooltimeMin)
def ShopRecruitExcelAddRecruitSellectionShopId(builder, recruitSellectionShopId): builder.PrependInt64Slot(10, recruitSellectionShopId, 0)
def AddRecruitSellectionShopId(builder, recruitSellectionShopId):
    return ShopRecruitExcelAddRecruitSellectionShopId(builder, recruitSellectionShopId)
def ShopRecruitExcelAddRecruitCoinId(builder, recruitCoinId): builder.PrependInt64Slot(11, recruitCoinId, 0)
def AddRecruitCoinId(builder, recruitCoinId):
    return ShopRecruitExcelAddRecruitCoinId(builder, recruitCoinId)
def ShopRecruitExcelAddSalePeriodTo(builder, salePeriodTo): builder.PrependUOffsetTRelativeSlot(12, flatbuffers.number_types.UOffsetTFlags.py_type(salePeriodTo), 0)
def AddSalePeriodTo(builder, salePeriodTo):
    return ShopRecruitExcelAddSalePeriodTo(builder, salePeriodTo)
def ShopRecruitExcelAddSalePeriodFrom(builder, salePeriodFrom): builder.PrependUOffsetTRelativeSlot(13, flatbuffers.number_types.UOffsetTFlags.py_type(salePeriodFrom), 0)
def AddSalePeriodFrom(builder, salePeriodFrom):
    return ShopRecruitExcelAddSalePeriodFrom(builder, salePeriodFrom)
def ShopRecruitExcelAddSalePeriodVisible(builder, salePeriodVisible): builder.PrependBoolSlot(14, salePeriodVisible, 0)
def AddSalePeriodVisible(builder, salePeriodVisible):
    return ShopRecruitExcelAddSalePeriodVisible(builder, salePeriodVisible)
def ShopRecruitExcelAddInfoCharacterId(builder, infoCharacterId): builder.PrependUOffsetTRelativeSlot(15, flatbuffers.number_types.UOffsetTFlags.py_type(infoCharacterId), 0)
def AddInfoCharacterId(builder, infoCharacterId):
    return ShopRecruitExcelAddInfoCharacterId(builder, infoCharacterId)
def ShopRecruitExcelStartInfoCharacterIdVector(builder, numElems): return builder.StartVector(8, numElems, 8)
def StartInfoCharacterIdVector(builder, numElems):
    return ShopRecruitExcelStartInfoCharacterIdVector(builder, numElems)
def ShopRecruitExcelAddLinkedRobbyBannerId(builder, linkedRobbyBannerId): builder.PrependInt64Slot(16, linkedRobbyBannerId, 0)
def AddLinkedRobbyBannerId(builder, linkedRobbyBannerId):
    return ShopRecruitExcelAddLinkedRobbyBannerId(builder, linkedRobbyBannerId)
def ShopRecruitExcelAddVideoId(builder, videoId): builder.PrependUOffsetTRelativeSlot(17, flatbuffers.number_types.UOffsetTFlags.py_type(videoId), 0)
def AddVideoId(builder, videoId):
    return ShopRecruitExcelAddVideoId(builder, videoId)
def ShopRecruitExcelStartVideoIdVector(builder, numElems): return builder.StartVector(8, numElems, 8)
def StartVideoIdVector(builder, numElems):
    return ShopRecruitExcelStartVideoIdVector(builder, numElems)
def ShopRecruitExcelAddGachaBannerPath(builder, gachaBannerPath): builder.PrependUOffsetTRelativeSlot(18, flatbuffers.number_types.UOffsetTFlags.py_type(gachaBannerPath), 0)
def AddGachaBannerPath(builder, gachaBannerPath):
    return ShopRecruitExcelAddGachaBannerPath(builder, gachaBannerPath)
def ShopRecruitExcelAddDisplayOrder(builder, displayOrder): builder.PrependInt64Slot(19, displayOrder, 0)
def AddDisplayOrder(builder, displayOrder):
    return ShopRecruitExcelAddDisplayOrder(builder, displayOrder)
def ShopRecruitExcelAddDisplayTag(builder, displayTag): builder.PrependInt32Slot(20, displayTag, 0)
def AddDisplayTag(builder, displayTag):
    return ShopRecruitExcelAddDisplayTag(builder, displayTag)
def ShopRecruitExcelAddGoodsDevName(builder, goodsDevName): builder.PrependUOffsetTRelativeSlot(21, flatbuffers.number_types.UOffsetTFlags.py_type(goodsDevName), 0)
def AddGoodsDevName(builder, goodsDevName):
    return ShopRecruitExcelAddGoodsDevName(builder, goodsDevName)
def ShopRecruitExcelAddTenGachaGoodsId(builder, tenGachaGoodsId): builder.PrependInt64Slot(22, tenGachaGoodsId, 0)
def AddTenGachaGoodsId(builder, tenGachaGoodsId):
    return ShopRecruitExcelAddTenGachaGoodsId(builder, tenGachaGoodsId)
def ShopRecruitExcelAddOneGachaGoodsId(builder, oneGachaGoodsId): builder.PrependInt64Slot(23, oneGachaGoodsId, 0)
def AddOneGachaGoodsId(builder, oneGachaGoodsId):
    return ShopRecruitExcelAddOneGachaGoodsId(builder, oneGachaGoodsId)
def ShopRecruitExcelAddIsLegacy(builder, isLegacy): builder.PrependBoolSlot(24, isLegacy, 0)
def AddIsLegacy(builder, isLegacy):
    return ShopRecruitExcelAddIsLegacy(builder, isLegacy)
def ShopRecruitExcelAddCategoryType(builder, categoryType): builder.PrependInt32Slot(25, categoryType, 0)
def AddCategoryType(builder, categoryType):
    return ShopRecruitExcelAddCategoryType(builder, categoryType)
def ShopRecruitExcelAddId(builder, id): builder.PrependInt64Slot(26, id, 0)
def AddId(builder, id):
    return ShopRecruitExcelAddId(builder, id)
def ShopRecruitExcelEnd(builder): return builder.EndObject()
def End(builder):
    return ShopRecruitExcelEnd(builder)