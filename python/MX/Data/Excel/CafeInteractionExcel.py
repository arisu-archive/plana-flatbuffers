# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class CafeInteractionExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = CafeInteractionExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsCafeInteractionExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # CafeInteractionExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # CafeInteractionExcel
    def CafeCharacterState(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # CafeInteractionExcel
    def CafeCharacterStateLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # CafeInteractionExcel
    def CafeCharacterStateIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        return o == 0

    # CafeInteractionExcel
    def FavorEmoticonRewardAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CafeInteractionExcel
    def FavorEmoticonRewardId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CafeInteractionExcel
    def FavorEmoticonRewardParcelType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CafeInteractionExcel
    def BubbleDuration(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int64Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 8))
        return 0

    # CafeInteractionExcel
    def BubbleDurationAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int64Flags, o)
        return 0

    # CafeInteractionExcel
    def BubbleDurationLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # CafeInteractionExcel
    def BubbleDurationIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        return o == 0

    # CafeInteractionExcel
    def BubbleType(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # CafeInteractionExcel
    def BubbleTypeAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int32Flags, o)
        return 0

    # CafeInteractionExcel
    def BubbleTypeLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # CafeInteractionExcel
    def BubbleTypeIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        return o == 0

    # CafeInteractionExcel
    def IgnoreIfUnobtainedEndDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CafeInteractionExcel
    def IgnoreIfUnobtainedStartDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # CafeInteractionExcel
    def IgnoreIfUnobtained(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # CafeInteractionExcel
    def CharacterId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def CafeInteractionExcelStart(builder): builder.StartObject(10)
def Start(builder):
    return CafeInteractionExcelStart(builder)
def CafeInteractionExcelAddCafeCharacterState(builder, cafeCharacterState): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(cafeCharacterState), 0)
def AddCafeCharacterState(builder, cafeCharacterState):
    return CafeInteractionExcelAddCafeCharacterState(builder, cafeCharacterState)
def CafeInteractionExcelStartCafeCharacterStateVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def StartCafeCharacterStateVector(builder, numElems):
    return CafeInteractionExcelStartCafeCharacterStateVector(builder, numElems)
def CafeInteractionExcelAddFavorEmoticonRewardAmount(builder, favorEmoticonRewardAmount): builder.PrependInt64Slot(1, favorEmoticonRewardAmount, 0)
def AddFavorEmoticonRewardAmount(builder, favorEmoticonRewardAmount):
    return CafeInteractionExcelAddFavorEmoticonRewardAmount(builder, favorEmoticonRewardAmount)
def CafeInteractionExcelAddFavorEmoticonRewardId(builder, favorEmoticonRewardId): builder.PrependInt64Slot(2, favorEmoticonRewardId, 0)
def AddFavorEmoticonRewardId(builder, favorEmoticonRewardId):
    return CafeInteractionExcelAddFavorEmoticonRewardId(builder, favorEmoticonRewardId)
def CafeInteractionExcelAddFavorEmoticonRewardParcelType(builder, favorEmoticonRewardParcelType): builder.PrependInt32Slot(3, favorEmoticonRewardParcelType, 0)
def AddFavorEmoticonRewardParcelType(builder, favorEmoticonRewardParcelType):
    return CafeInteractionExcelAddFavorEmoticonRewardParcelType(builder, favorEmoticonRewardParcelType)
def CafeInteractionExcelAddBubbleDuration(builder, bubbleDuration): builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(bubbleDuration), 0)
def AddBubbleDuration(builder, bubbleDuration):
    return CafeInteractionExcelAddBubbleDuration(builder, bubbleDuration)
def CafeInteractionExcelStartBubbleDurationVector(builder, numElems): return builder.StartVector(8, numElems, 8)
def StartBubbleDurationVector(builder, numElems):
    return CafeInteractionExcelStartBubbleDurationVector(builder, numElems)
def CafeInteractionExcelAddBubbleType(builder, bubbleType): builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(bubbleType), 0)
def AddBubbleType(builder, bubbleType):
    return CafeInteractionExcelAddBubbleType(builder, bubbleType)
def CafeInteractionExcelStartBubbleTypeVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def StartBubbleTypeVector(builder, numElems):
    return CafeInteractionExcelStartBubbleTypeVector(builder, numElems)
def CafeInteractionExcelAddIgnoreIfUnobtainedEndDate(builder, ignoreIfUnobtainedEndDate): builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(ignoreIfUnobtainedEndDate), 0)
def AddIgnoreIfUnobtainedEndDate(builder, ignoreIfUnobtainedEndDate):
    return CafeInteractionExcelAddIgnoreIfUnobtainedEndDate(builder, ignoreIfUnobtainedEndDate)
def CafeInteractionExcelAddIgnoreIfUnobtainedStartDate(builder, ignoreIfUnobtainedStartDate): builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(ignoreIfUnobtainedStartDate), 0)
def AddIgnoreIfUnobtainedStartDate(builder, ignoreIfUnobtainedStartDate):
    return CafeInteractionExcelAddIgnoreIfUnobtainedStartDate(builder, ignoreIfUnobtainedStartDate)
def CafeInteractionExcelAddIgnoreIfUnobtained(builder, ignoreIfUnobtained): builder.PrependBoolSlot(8, ignoreIfUnobtained, 0)
def AddIgnoreIfUnobtained(builder, ignoreIfUnobtained):
    return CafeInteractionExcelAddIgnoreIfUnobtained(builder, ignoreIfUnobtained)
def CafeInteractionExcelAddCharacterId(builder, characterId): builder.PrependInt64Slot(9, characterId, 0)
def AddCharacterId(builder, characterId):
    return CafeInteractionExcelAddCharacterId(builder, characterId)
def CafeInteractionExcelEnd(builder): return builder.EndObject()
def End(builder):
    return CafeInteractionExcelEnd(builder)