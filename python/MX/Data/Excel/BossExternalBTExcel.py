# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class BossExternalBTExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = BossExternalBTExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsBossExternalBTExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # BossExternalBTExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # BossExternalBTExcel
    def BehaviorArgument(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # BossExternalBTExcel
    def ExternalBehavior(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # BossExternalBTExcel
    def BehaviorRate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # BossExternalBTExcel
    def TriggerArgument(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # BossExternalBTExcel
    def ExternalBtTrigger(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # BossExternalBTExcel
    def ExternalBtNodeType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # BossExternalBTExcel
    def AiPhase(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # BossExternalBTExcel
    def ExternalBtId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def BossExternalBTExcelStart(builder): builder.StartObject(8)
def Start(builder):
    return BossExternalBTExcelStart(builder)
def BossExternalBTExcelAddBehaviorArgument(builder, behaviorArgument): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(behaviorArgument), 0)
def AddBehaviorArgument(builder, behaviorArgument):
    return BossExternalBTExcelAddBehaviorArgument(builder, behaviorArgument)
def BossExternalBTExcelAddExternalBehavior(builder, externalBehavior): builder.PrependInt32Slot(1, externalBehavior, 0)
def AddExternalBehavior(builder, externalBehavior):
    return BossExternalBTExcelAddExternalBehavior(builder, externalBehavior)
def BossExternalBTExcelAddBehaviorRate(builder, behaviorRate): builder.PrependInt64Slot(2, behaviorRate, 0)
def AddBehaviorRate(builder, behaviorRate):
    return BossExternalBTExcelAddBehaviorRate(builder, behaviorRate)
def BossExternalBTExcelAddTriggerArgument(builder, triggerArgument): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(triggerArgument), 0)
def AddTriggerArgument(builder, triggerArgument):
    return BossExternalBTExcelAddTriggerArgument(builder, triggerArgument)
def BossExternalBTExcelAddExternalBtTrigger(builder, externalBtTrigger): builder.PrependInt32Slot(4, externalBtTrigger, 0)
def AddExternalBtTrigger(builder, externalBtTrigger):
    return BossExternalBTExcelAddExternalBtTrigger(builder, externalBtTrigger)
def BossExternalBTExcelAddExternalBtNodeType(builder, externalBtNodeType): builder.PrependInt32Slot(5, externalBtNodeType, 0)
def AddExternalBtNodeType(builder, externalBtNodeType):
    return BossExternalBTExcelAddExternalBtNodeType(builder, externalBtNodeType)
def BossExternalBTExcelAddAiPhase(builder, aiPhase): builder.PrependInt64Slot(6, aiPhase, 0)
def AddAiPhase(builder, aiPhase):
    return BossExternalBTExcelAddAiPhase(builder, aiPhase)
def BossExternalBTExcelAddExternalBtId(builder, externalBtId): builder.PrependInt64Slot(7, externalBtId, 0)
def AddExternalBtId(builder, externalBtId):
    return BossExternalBTExcelAddExternalBtId(builder, externalBtId)
def BossExternalBTExcelEnd(builder): return builder.EndObject()
def End(builder):
    return BossExternalBTExcelEnd(builder)