# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class MultiFloorRaidSeasonManageExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = MultiFloorRaidSeasonManageExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsMultiFloorRaidSeasonManageExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # MultiFloorRaidSeasonManageExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # MultiFloorRaidSeasonManageExcel
    def PlayTip(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # MultiFloorRaidSeasonManageExcel
    def LevelImgPath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # MultiFloorRaidSeasonManageExcel
    def LobbyImgPath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # MultiFloorRaidSeasonManageExcel
    def EnterScenarioKey(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # MultiFloorRaidSeasonManageExcel
    def OpenRaidBossGroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # MultiFloorRaidSeasonManageExcel
    def SettlementEndDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # MultiFloorRaidSeasonManageExcel
    def SeasonEndDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # MultiFloorRaidSeasonManageExcel
    def EndNoteLabelStartDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # MultiFloorRaidSeasonManageExcel
    def SeasonStartDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # MultiFloorRaidSeasonManageExcel
    def ShowLobbyBanner(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # MultiFloorRaidSeasonManageExcel
    def LobbyEnterScenario(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # MultiFloorRaidSeasonManageExcel
    def SeasonId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def MultiFloorRaidSeasonManageExcelStart(builder): builder.StartObject(12)
def Start(builder):
    return MultiFloorRaidSeasonManageExcelStart(builder)
def MultiFloorRaidSeasonManageExcelAddPlayTip(builder, playTip): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(playTip), 0)
def AddPlayTip(builder, playTip):
    return MultiFloorRaidSeasonManageExcelAddPlayTip(builder, playTip)
def MultiFloorRaidSeasonManageExcelAddLevelImgPath(builder, levelImgPath): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(levelImgPath), 0)
def AddLevelImgPath(builder, levelImgPath):
    return MultiFloorRaidSeasonManageExcelAddLevelImgPath(builder, levelImgPath)
def MultiFloorRaidSeasonManageExcelAddLobbyImgPath(builder, lobbyImgPath): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(lobbyImgPath), 0)
def AddLobbyImgPath(builder, lobbyImgPath):
    return MultiFloorRaidSeasonManageExcelAddLobbyImgPath(builder, lobbyImgPath)
def MultiFloorRaidSeasonManageExcelAddEnterScenarioKey(builder, enterScenarioKey): builder.PrependUint32Slot(3, enterScenarioKey, 0)
def AddEnterScenarioKey(builder, enterScenarioKey):
    return MultiFloorRaidSeasonManageExcelAddEnterScenarioKey(builder, enterScenarioKey)
def MultiFloorRaidSeasonManageExcelAddOpenRaidBossGroupId(builder, openRaidBossGroupId): builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(openRaidBossGroupId), 0)
def AddOpenRaidBossGroupId(builder, openRaidBossGroupId):
    return MultiFloorRaidSeasonManageExcelAddOpenRaidBossGroupId(builder, openRaidBossGroupId)
def MultiFloorRaidSeasonManageExcelAddSettlementEndDate(builder, settlementEndDate): builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(settlementEndDate), 0)
def AddSettlementEndDate(builder, settlementEndDate):
    return MultiFloorRaidSeasonManageExcelAddSettlementEndDate(builder, settlementEndDate)
def MultiFloorRaidSeasonManageExcelAddSeasonEndDate(builder, seasonEndDate): builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(seasonEndDate), 0)
def AddSeasonEndDate(builder, seasonEndDate):
    return MultiFloorRaidSeasonManageExcelAddSeasonEndDate(builder, seasonEndDate)
def MultiFloorRaidSeasonManageExcelAddEndNoteLabelStartDate(builder, endNoteLabelStartDate): builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(endNoteLabelStartDate), 0)
def AddEndNoteLabelStartDate(builder, endNoteLabelStartDate):
    return MultiFloorRaidSeasonManageExcelAddEndNoteLabelStartDate(builder, endNoteLabelStartDate)
def MultiFloorRaidSeasonManageExcelAddSeasonStartDate(builder, seasonStartDate): builder.PrependUOffsetTRelativeSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(seasonStartDate), 0)
def AddSeasonStartDate(builder, seasonStartDate):
    return MultiFloorRaidSeasonManageExcelAddSeasonStartDate(builder, seasonStartDate)
def MultiFloorRaidSeasonManageExcelAddShowLobbyBanner(builder, showLobbyBanner): builder.PrependBoolSlot(9, showLobbyBanner, 0)
def AddShowLobbyBanner(builder, showLobbyBanner):
    return MultiFloorRaidSeasonManageExcelAddShowLobbyBanner(builder, showLobbyBanner)
def MultiFloorRaidSeasonManageExcelAddLobbyEnterScenario(builder, lobbyEnterScenario): builder.PrependUint32Slot(10, lobbyEnterScenario, 0)
def AddLobbyEnterScenario(builder, lobbyEnterScenario):
    return MultiFloorRaidSeasonManageExcelAddLobbyEnterScenario(builder, lobbyEnterScenario)
def MultiFloorRaidSeasonManageExcelAddSeasonId(builder, seasonId): builder.PrependInt64Slot(11, seasonId, 0)
def AddSeasonId(builder, seasonId):
    return MultiFloorRaidSeasonManageExcelAddSeasonId(builder, seasonId)
def MultiFloorRaidSeasonManageExcelEnd(builder): return builder.EndObject()
def End(builder):
    return MultiFloorRaidSeasonManageExcelEnd(builder)