# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ScenarioContentCollectionExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ScenarioContentCollectionExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsScenarioContentCollectionExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # ScenarioContentCollectionExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ScenarioContentCollectionExcel
    def SubNameLocalizeCodeId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ScenarioContentCollectionExcel
    def LocalizeEtcId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # ScenarioContentCollectionExcel
    def FullResource(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ScenarioContentCollectionExcel
    def ThumbResource(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ScenarioContentCollectionExcel
    def EmblemResource(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ScenarioContentCollectionExcel
    def IsHorizon(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # ScenarioContentCollectionExcel
    def IsObject(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # ScenarioContentCollectionExcel
    def UnlockConditionCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ScenarioContentCollectionExcel
    def MultipleConditionCheckType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ScenarioContentCollectionExcel
    def UnlockConditionParameter(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int64Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 8))
        return 0

    # ScenarioContentCollectionExcel
    def UnlockConditionParameterAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int64Flags, o)
        return 0

    # ScenarioContentCollectionExcel
    def UnlockConditionParameterLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # ScenarioContentCollectionExcel
    def UnlockConditionParameterIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        return o == 0

    # ScenarioContentCollectionExcel
    def UnlockConditionType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ScenarioContentCollectionExcel
    def GroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ScenarioContentCollectionExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def ScenarioContentCollectionExcelStart(builder): builder.StartObject(13)
def Start(builder):
    return ScenarioContentCollectionExcelStart(builder)
def ScenarioContentCollectionExcelAddSubNameLocalizeCodeId(builder, subNameLocalizeCodeId): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(subNameLocalizeCodeId), 0)
def AddSubNameLocalizeCodeId(builder, subNameLocalizeCodeId):
    return ScenarioContentCollectionExcelAddSubNameLocalizeCodeId(builder, subNameLocalizeCodeId)
def ScenarioContentCollectionExcelAddLocalizeEtcId(builder, localizeEtcId): builder.PrependUint32Slot(1, localizeEtcId, 0)
def AddLocalizeEtcId(builder, localizeEtcId):
    return ScenarioContentCollectionExcelAddLocalizeEtcId(builder, localizeEtcId)
def ScenarioContentCollectionExcelAddFullResource(builder, fullResource): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(fullResource), 0)
def AddFullResource(builder, fullResource):
    return ScenarioContentCollectionExcelAddFullResource(builder, fullResource)
def ScenarioContentCollectionExcelAddThumbResource(builder, thumbResource): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(thumbResource), 0)
def AddThumbResource(builder, thumbResource):
    return ScenarioContentCollectionExcelAddThumbResource(builder, thumbResource)
def ScenarioContentCollectionExcelAddEmblemResource(builder, emblemResource): builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(emblemResource), 0)
def AddEmblemResource(builder, emblemResource):
    return ScenarioContentCollectionExcelAddEmblemResource(builder, emblemResource)
def ScenarioContentCollectionExcelAddIsHorizon(builder, isHorizon): builder.PrependBoolSlot(5, isHorizon, 0)
def AddIsHorizon(builder, isHorizon):
    return ScenarioContentCollectionExcelAddIsHorizon(builder, isHorizon)
def ScenarioContentCollectionExcelAddIsObject(builder, isObject): builder.PrependBoolSlot(6, isObject, 0)
def AddIsObject(builder, isObject):
    return ScenarioContentCollectionExcelAddIsObject(builder, isObject)
def ScenarioContentCollectionExcelAddUnlockConditionCount(builder, unlockConditionCount): builder.PrependInt64Slot(7, unlockConditionCount, 0)
def AddUnlockConditionCount(builder, unlockConditionCount):
    return ScenarioContentCollectionExcelAddUnlockConditionCount(builder, unlockConditionCount)
def ScenarioContentCollectionExcelAddMultipleConditionCheckType(builder, multipleConditionCheckType): builder.PrependInt32Slot(8, multipleConditionCheckType, 0)
def AddMultipleConditionCheckType(builder, multipleConditionCheckType):
    return ScenarioContentCollectionExcelAddMultipleConditionCheckType(builder, multipleConditionCheckType)
def ScenarioContentCollectionExcelAddUnlockConditionParameter(builder, unlockConditionParameter): builder.PrependUOffsetTRelativeSlot(9, flatbuffers.number_types.UOffsetTFlags.py_type(unlockConditionParameter), 0)
def AddUnlockConditionParameter(builder, unlockConditionParameter):
    return ScenarioContentCollectionExcelAddUnlockConditionParameter(builder, unlockConditionParameter)
def ScenarioContentCollectionExcelStartUnlockConditionParameterVector(builder, numElems): return builder.StartVector(8, numElems, 8)
def StartUnlockConditionParameterVector(builder, numElems):
    return ScenarioContentCollectionExcelStartUnlockConditionParameterVector(builder, numElems)
def ScenarioContentCollectionExcelAddUnlockConditionType(builder, unlockConditionType): builder.PrependInt32Slot(10, unlockConditionType, 0)
def AddUnlockConditionType(builder, unlockConditionType):
    return ScenarioContentCollectionExcelAddUnlockConditionType(builder, unlockConditionType)
def ScenarioContentCollectionExcelAddGroupId(builder, groupId): builder.PrependInt64Slot(11, groupId, 0)
def AddGroupId(builder, groupId):
    return ScenarioContentCollectionExcelAddGroupId(builder, groupId)
def ScenarioContentCollectionExcelAddId(builder, id): builder.PrependInt64Slot(12, id, 0)
def AddId(builder, id):
    return ScenarioContentCollectionExcelAddId(builder, id)
def ScenarioContentCollectionExcelEnd(builder): return builder.EndObject()
def End(builder):
    return ScenarioContentCollectionExcelEnd(builder)