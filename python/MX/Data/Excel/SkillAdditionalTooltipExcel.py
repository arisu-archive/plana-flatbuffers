# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class SkillAdditionalTooltipExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = SkillAdditionalTooltipExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsSkillAdditionalTooltipExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # SkillAdditionalTooltipExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # SkillAdditionalTooltipExcel
    def GroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # SkillAdditionalTooltipExcel
    def AdditionalSkillGroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # SkillAdditionalTooltipExcel
    def ShowSkillSlot(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def SkillAdditionalTooltipExcelStart(builder):
    builder.StartObject(3)

def Start(builder):
    SkillAdditionalTooltipExcelStart(builder)

def SkillAdditionalTooltipExcelAddGroupId(builder, groupId):
    builder.PrependInt64Slot(0, groupId, 0)

def AddGroupId(builder, groupId):
    SkillAdditionalTooltipExcelAddGroupId(builder, groupId)

def SkillAdditionalTooltipExcelAddAdditionalSkillGroupId(builder, additionalSkillGroupId):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(additionalSkillGroupId), 0)

def AddAdditionalSkillGroupId(builder, additionalSkillGroupId):
    SkillAdditionalTooltipExcelAddAdditionalSkillGroupId(builder, additionalSkillGroupId)

def SkillAdditionalTooltipExcelAddShowSkillSlot(builder, showSkillSlot):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(showSkillSlot), 0)

def AddShowSkillSlot(builder, showSkillSlot):
    SkillAdditionalTooltipExcelAddShowSkillSlot(builder, showSkillSlot)

def SkillAdditionalTooltipExcelEnd(builder):
    return builder.EndObject()

def End(builder):
    return SkillAdditionalTooltipExcelEnd(builder)
