# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class EventContentCurrencyItemExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = EventContentCurrencyItemExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsEventContentCurrencyItemExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # EventContentCurrencyItemExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # EventContentCurrencyItemExcel
    def EventContentId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EventContentCurrencyItemExcel
    def EventContentItemType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # EventContentCurrencyItemExcel
    def ItemUniqueId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EventContentCurrencyItemExcel
    def UseShortCutContentType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def EventContentCurrencyItemExcelStart(builder):
    builder.StartObject(4)

def Start(builder):
    EventContentCurrencyItemExcelStart(builder)

def EventContentCurrencyItemExcelAddEventContentId(builder, eventContentId):
    builder.PrependInt64Slot(0, eventContentId, 0)

def AddEventContentId(builder, eventContentId):
    EventContentCurrencyItemExcelAddEventContentId(builder, eventContentId)

def EventContentCurrencyItemExcelAddEventContentItemType(builder, eventContentItemType):
    builder.PrependInt32Slot(1, eventContentItemType, 0)

def AddEventContentItemType(builder, eventContentItemType):
    EventContentCurrencyItemExcelAddEventContentItemType(builder, eventContentItemType)

def EventContentCurrencyItemExcelAddItemUniqueId(builder, itemUniqueId):
    builder.PrependInt64Slot(2, itemUniqueId, 0)

def AddItemUniqueId(builder, itemUniqueId):
    EventContentCurrencyItemExcelAddItemUniqueId(builder, itemUniqueId)

def EventContentCurrencyItemExcelAddUseShortCutContentType(builder, useShortCutContentType):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(useShortCutContentType), 0)

def AddUseShortCutContentType(builder, useShortCutContentType):
    EventContentCurrencyItemExcelAddUseShortCutContentType(builder, useShortCutContentType)

def EventContentCurrencyItemExcelEnd(builder):
    return builder.EndObject()

def End(builder):
    return EventContentCurrencyItemExcelEnd(builder)
