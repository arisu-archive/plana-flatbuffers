# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ScenarioScriptExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ScenarioScriptExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsScenarioScriptExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # ScenarioScriptExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ScenarioScriptExcel
    def GroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ScenarioScriptExcel
    def SelectionGroup(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ScenarioScriptExcel
    def BgmId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ScenarioScriptExcel
    def Sound(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ScenarioScriptExcel
    def Transition(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # ScenarioScriptExcel
    def BgName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # ScenarioScriptExcel
    def BgEffect(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # ScenarioScriptExcel
    def PopupFileName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ScenarioScriptExcel
    def ScriptKr(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ScenarioScriptExcel
    def TextJp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ScenarioScriptExcel
    def VoiceId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

def ScenarioScriptExcelStart(builder):
    builder.StartObject(11)

def Start(builder):
    ScenarioScriptExcelStart(builder)

def ScenarioScriptExcelAddGroupId(builder, groupId):
    builder.PrependInt64Slot(0, groupId, 0)

def AddGroupId(builder, groupId):
    ScenarioScriptExcelAddGroupId(builder, groupId)

def ScenarioScriptExcelAddSelectionGroup(builder, selectionGroup):
    builder.PrependInt64Slot(1, selectionGroup, 0)

def AddSelectionGroup(builder, selectionGroup):
    ScenarioScriptExcelAddSelectionGroup(builder, selectionGroup)

def ScenarioScriptExcelAddBgmId(builder, bgmId):
    builder.PrependInt64Slot(2, bgmId, 0)

def AddBgmId(builder, bgmId):
    ScenarioScriptExcelAddBgmId(builder, bgmId)

def ScenarioScriptExcelAddSound(builder, sound):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(sound), 0)

def AddSound(builder, sound):
    ScenarioScriptExcelAddSound(builder, sound)

def ScenarioScriptExcelAddTransition(builder, transition):
    builder.PrependUint32Slot(4, transition, 0)

def AddTransition(builder, transition):
    ScenarioScriptExcelAddTransition(builder, transition)

def ScenarioScriptExcelAddBgName(builder, bgName):
    builder.PrependUint32Slot(5, bgName, 0)

def AddBgName(builder, bgName):
    ScenarioScriptExcelAddBgName(builder, bgName)

def ScenarioScriptExcelAddBgEffect(builder, bgEffect):
    builder.PrependUint32Slot(6, bgEffect, 0)

def AddBgEffect(builder, bgEffect):
    ScenarioScriptExcelAddBgEffect(builder, bgEffect)

def ScenarioScriptExcelAddPopupFileName(builder, popupFileName):
    builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(popupFileName), 0)

def AddPopupFileName(builder, popupFileName):
    ScenarioScriptExcelAddPopupFileName(builder, popupFileName)

def ScenarioScriptExcelAddScriptKr(builder, scriptKr):
    builder.PrependUOffsetTRelativeSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(scriptKr), 0)

def AddScriptKr(builder, scriptKr):
    ScenarioScriptExcelAddScriptKr(builder, scriptKr)

def ScenarioScriptExcelAddTextJp(builder, textJp):
    builder.PrependUOffsetTRelativeSlot(9, flatbuffers.number_types.UOffsetTFlags.py_type(textJp), 0)

def AddTextJp(builder, textJp):
    ScenarioScriptExcelAddTextJp(builder, textJp)

def ScenarioScriptExcelAddVoiceId(builder, voiceId):
    builder.PrependUint32Slot(10, voiceId, 0)

def AddVoiceId(builder, voiceId):
    ScenarioScriptExcelAddVoiceId(builder, voiceId)

def ScenarioScriptExcelEnd(builder):
    return builder.EndObject()

def End(builder):
    return ScenarioScriptExcelEnd(builder)
