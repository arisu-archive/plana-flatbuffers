# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class WeekDungeonGroupBuffExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = WeekDungeonGroupBuffExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsWeekDungeonGroupBuffExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # WeekDungeonGroupBuffExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # WeekDungeonGroupBuffExcel
    def SkillGroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # WeekDungeonGroupBuffExcel
    def FormationLocalizeEtcId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # WeekDungeonGroupBuffExcel
    def RecommandLocalizeEtcId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # WeekDungeonGroupBuffExcel
    def School(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # WeekDungeonGroupBuffExcel
    def WeekDungeonBuffId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def WeekDungeonGroupBuffExcelStart(builder): builder.StartObject(5)
def Start(builder):
    return WeekDungeonGroupBuffExcelStart(builder)
def WeekDungeonGroupBuffExcelAddSkillGroupId(builder, skillGroupId): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(skillGroupId), 0)
def AddSkillGroupId(builder, skillGroupId):
    return WeekDungeonGroupBuffExcelAddSkillGroupId(builder, skillGroupId)
def WeekDungeonGroupBuffExcelAddFormationLocalizeEtcId(builder, formationLocalizeEtcId): builder.PrependUint32Slot(1, formationLocalizeEtcId, 0)
def AddFormationLocalizeEtcId(builder, formationLocalizeEtcId):
    return WeekDungeonGroupBuffExcelAddFormationLocalizeEtcId(builder, formationLocalizeEtcId)
def WeekDungeonGroupBuffExcelAddRecommandLocalizeEtcId(builder, recommandLocalizeEtcId): builder.PrependUint32Slot(2, recommandLocalizeEtcId, 0)
def AddRecommandLocalizeEtcId(builder, recommandLocalizeEtcId):
    return WeekDungeonGroupBuffExcelAddRecommandLocalizeEtcId(builder, recommandLocalizeEtcId)
def WeekDungeonGroupBuffExcelAddSchool(builder, school): builder.PrependInt32Slot(3, school, 0)
def AddSchool(builder, school):
    return WeekDungeonGroupBuffExcelAddSchool(builder, school)
def WeekDungeonGroupBuffExcelAddWeekDungeonBuffId(builder, weekDungeonBuffId): builder.PrependInt64Slot(4, weekDungeonBuffId, 0)
def AddWeekDungeonBuffId(builder, weekDungeonBuffId):
    return WeekDungeonGroupBuffExcelAddWeekDungeonBuffId(builder, weekDungeonBuffId)
def WeekDungeonGroupBuffExcelEnd(builder): return builder.EndObject()
def End(builder):
    return WeekDungeonGroupBuffExcelEnd(builder)