# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class CafeInfoExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = CafeInfoExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsCafeInfoExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # CafeInfoExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # CafeInfoExcel
    def CafeId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CafeInfoExcel
    def CategoryType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CafeInfoExcel
    def IsDefault(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # CafeInfoExcel
    def OpenConditionCafeId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CafeInfoExcel
    def OpenConditionCafeInvite(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CafeInfoExcel
    def SummonParcelAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CafeInfoExcel
    def SummonParcelId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # CafeInfoExcel
    def SummonParcelType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # CafeInfoExcel
    def SummonTicketIconPath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def CafeInfoExcelStart(builder): builder.StartObject(9)
def Start(builder):
    return CafeInfoExcelStart(builder)
def CafeInfoExcelAddCafeId(builder, cafeId): builder.PrependInt64Slot(0, cafeId, 0)
def AddCafeId(builder, cafeId):
    return CafeInfoExcelAddCafeId(builder, cafeId)
def CafeInfoExcelAddCategoryType(builder, categoryType): builder.PrependInt32Slot(1, categoryType, 0)
def AddCategoryType(builder, categoryType):
    return CafeInfoExcelAddCategoryType(builder, categoryType)
def CafeInfoExcelAddIsDefault(builder, isDefault): builder.PrependBoolSlot(2, isDefault, 0)
def AddIsDefault(builder, isDefault):
    return CafeInfoExcelAddIsDefault(builder, isDefault)
def CafeInfoExcelAddOpenConditionCafeId(builder, openConditionCafeId): builder.PrependInt32Slot(3, openConditionCafeId, 0)
def AddOpenConditionCafeId(builder, openConditionCafeId):
    return CafeInfoExcelAddOpenConditionCafeId(builder, openConditionCafeId)
def CafeInfoExcelAddOpenConditionCafeInvite(builder, openConditionCafeInvite): builder.PrependInt32Slot(4, openConditionCafeInvite, 0)
def AddOpenConditionCafeInvite(builder, openConditionCafeInvite):
    return CafeInfoExcelAddOpenConditionCafeInvite(builder, openConditionCafeInvite)
def CafeInfoExcelAddSummonParcelAmount(builder, summonParcelAmount): builder.PrependInt64Slot(5, summonParcelAmount, 0)
def AddSummonParcelAmount(builder, summonParcelAmount):
    return CafeInfoExcelAddSummonParcelAmount(builder, summonParcelAmount)
def CafeInfoExcelAddSummonParcelId(builder, summonParcelId): builder.PrependInt64Slot(6, summonParcelId, 0)
def AddSummonParcelId(builder, summonParcelId):
    return CafeInfoExcelAddSummonParcelId(builder, summonParcelId)
def CafeInfoExcelAddSummonParcelType(builder, summonParcelType): builder.PrependInt32Slot(7, summonParcelType, 0)
def AddSummonParcelType(builder, summonParcelType):
    return CafeInfoExcelAddSummonParcelType(builder, summonParcelType)
def CafeInfoExcelAddSummonTicketIconPath(builder, summonTicketIconPath): builder.PrependUOffsetTRelativeSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(summonTicketIconPath), 0)
def AddSummonTicketIconPath(builder, summonTicketIconPath):
    return CafeInfoExcelAddSummonTicketIconPath(builder, summonTicketIconPath)
def CafeInfoExcelEnd(builder): return builder.EndObject()
def End(builder):
    return CafeInfoExcelEnd(builder)