# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Excel

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class EmblemExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = EmblemExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsEmblemExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # EmblemExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # EmblemExcel
    def Category(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # EmblemExcel
    def CheckPassCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EmblemExcel
    def CheckPassType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # EmblemExcel
    def DislpayFavorLevel(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # EmblemExcel
    def DisplayEndDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # EmblemExcel
    def DisplayOrder(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EmblemExcel
    def DisplayStartDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # EmblemExcel
    def DisplayType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # EmblemExcel
    def EmblemBgPathJp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # EmblemExcel
    def EmblemBgPathKr(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # EmblemExcel
    def EmblemEffectPath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # EmblemExcel
    def EmblemIconBgPath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # EmblemExcel
    def EmblemIconNumControl(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # EmblemExcel
    def EmblemIconPath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # EmblemExcel
    def EmblemParameter(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EmblemExcel
    def EmblemTextVisible(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # EmblemExcel
    def IconPath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # EmblemExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(38))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # EmblemExcel
    def LocalizeCodeId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(40))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # EmblemExcel
    def LocalizeEtcId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(42))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # EmblemExcel
    def Rarity(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(44))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # EmblemExcel
    def UseAtLocalizeId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(46))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def EmblemExcelStart(builder): builder.StartObject(22)
def Start(builder):
    return EmblemExcelStart(builder)
def EmblemExcelAddCategory(builder, category): builder.PrependInt32Slot(0, category, 0)
def AddCategory(builder, category):
    return EmblemExcelAddCategory(builder, category)
def EmblemExcelAddCheckPassCount(builder, checkPassCount): builder.PrependInt64Slot(1, checkPassCount, 0)
def AddCheckPassCount(builder, checkPassCount):
    return EmblemExcelAddCheckPassCount(builder, checkPassCount)
def EmblemExcelAddCheckPassType(builder, checkPassType): builder.PrependInt32Slot(2, checkPassType, 0)
def AddCheckPassType(builder, checkPassType):
    return EmblemExcelAddCheckPassType(builder, checkPassType)
def EmblemExcelAddDislpayFavorLevel(builder, dislpayFavorLevel): builder.PrependInt32Slot(3, dislpayFavorLevel, 0)
def AddDislpayFavorLevel(builder, dislpayFavorLevel):
    return EmblemExcelAddDislpayFavorLevel(builder, dislpayFavorLevel)
def EmblemExcelAddDisplayEndDate(builder, displayEndDate): builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(displayEndDate), 0)
def AddDisplayEndDate(builder, displayEndDate):
    return EmblemExcelAddDisplayEndDate(builder, displayEndDate)
def EmblemExcelAddDisplayOrder(builder, displayOrder): builder.PrependInt64Slot(5, displayOrder, 0)
def AddDisplayOrder(builder, displayOrder):
    return EmblemExcelAddDisplayOrder(builder, displayOrder)
def EmblemExcelAddDisplayStartDate(builder, displayStartDate): builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(displayStartDate), 0)
def AddDisplayStartDate(builder, displayStartDate):
    return EmblemExcelAddDisplayStartDate(builder, displayStartDate)
def EmblemExcelAddDisplayType(builder, displayType): builder.PrependInt32Slot(7, displayType, 0)
def AddDisplayType(builder, displayType):
    return EmblemExcelAddDisplayType(builder, displayType)
def EmblemExcelAddEmblemBgPathJp(builder, emblemBgPathJp): builder.PrependUOffsetTRelativeSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(emblemBgPathJp), 0)
def AddEmblemBgPathJp(builder, emblemBgPathJp):
    return EmblemExcelAddEmblemBgPathJp(builder, emblemBgPathJp)
def EmblemExcelAddEmblemBgPathKr(builder, emblemBgPathKr): builder.PrependUOffsetTRelativeSlot(9, flatbuffers.number_types.UOffsetTFlags.py_type(emblemBgPathKr), 0)
def AddEmblemBgPathKr(builder, emblemBgPathKr):
    return EmblemExcelAddEmblemBgPathKr(builder, emblemBgPathKr)
def EmblemExcelAddEmblemEffectPath(builder, emblemEffectPath): builder.PrependUOffsetTRelativeSlot(10, flatbuffers.number_types.UOffsetTFlags.py_type(emblemEffectPath), 0)
def AddEmblemEffectPath(builder, emblemEffectPath):
    return EmblemExcelAddEmblemEffectPath(builder, emblemEffectPath)
def EmblemExcelAddEmblemIconBgPath(builder, emblemIconBgPath): builder.PrependUOffsetTRelativeSlot(11, flatbuffers.number_types.UOffsetTFlags.py_type(emblemIconBgPath), 0)
def AddEmblemIconBgPath(builder, emblemIconBgPath):
    return EmblemExcelAddEmblemIconBgPath(builder, emblemIconBgPath)
def EmblemExcelAddEmblemIconNumControl(builder, emblemIconNumControl): builder.PrependInt32Slot(12, emblemIconNumControl, 0)
def AddEmblemIconNumControl(builder, emblemIconNumControl):
    return EmblemExcelAddEmblemIconNumControl(builder, emblemIconNumControl)
def EmblemExcelAddEmblemIconPath(builder, emblemIconPath): builder.PrependUOffsetTRelativeSlot(13, flatbuffers.number_types.UOffsetTFlags.py_type(emblemIconPath), 0)
def AddEmblemIconPath(builder, emblemIconPath):
    return EmblemExcelAddEmblemIconPath(builder, emblemIconPath)
def EmblemExcelAddEmblemParameter(builder, emblemParameter): builder.PrependInt64Slot(14, emblemParameter, 0)
def AddEmblemParameter(builder, emblemParameter):
    return EmblemExcelAddEmblemParameter(builder, emblemParameter)
def EmblemExcelAddEmblemTextVisible(builder, emblemTextVisible): builder.PrependBoolSlot(15, emblemTextVisible, 0)
def AddEmblemTextVisible(builder, emblemTextVisible):
    return EmblemExcelAddEmblemTextVisible(builder, emblemTextVisible)
def EmblemExcelAddIconPath(builder, iconPath): builder.PrependUOffsetTRelativeSlot(16, flatbuffers.number_types.UOffsetTFlags.py_type(iconPath), 0)
def AddIconPath(builder, iconPath):
    return EmblemExcelAddIconPath(builder, iconPath)
def EmblemExcelAddId(builder, id): builder.PrependInt64Slot(17, id, 0)
def AddId(builder, id):
    return EmblemExcelAddId(builder, id)
def EmblemExcelAddLocalizeCodeId(builder, localizeCodeId): builder.PrependUint32Slot(18, localizeCodeId, 0)
def AddLocalizeCodeId(builder, localizeCodeId):
    return EmblemExcelAddLocalizeCodeId(builder, localizeCodeId)
def EmblemExcelAddLocalizeEtcId(builder, localizeEtcId): builder.PrependUint32Slot(19, localizeEtcId, 0)
def AddLocalizeEtcId(builder, localizeEtcId):
    return EmblemExcelAddLocalizeEtcId(builder, localizeEtcId)
def EmblemExcelAddRarity(builder, rarity): builder.PrependInt32Slot(20, rarity, 0)
def AddRarity(builder, rarity):
    return EmblemExcelAddRarity(builder, rarity)
def EmblemExcelAddUseAtLocalizeId(builder, useAtLocalizeId): builder.PrependInt64Slot(21, useAtLocalizeId, 0)
def AddUseAtLocalizeId(builder, useAtLocalizeId):
    return EmblemExcelAddUseAtLocalizeId(builder, useAtLocalizeId)
def EmblemExcelEnd(builder): return builder.EndObject()
def End(builder):
    return EmblemExcelEnd(builder)