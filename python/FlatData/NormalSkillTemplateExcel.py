# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class NormalSkillTemplateExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = NormalSkillTemplateExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsNormalSkillTemplateExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # NormalSkillTemplateExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # NormalSkillTemplateExcel
    def MultiAni(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # NormalSkillTemplateExcel
    def CoolTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # NormalSkillTemplateExcel
    def FirstCoolTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # NormalSkillTemplateExcel
    def Index(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def NormalSkillTemplateExcelStart(builder): builder.StartObject(4)
def Start(builder):
    return NormalSkillTemplateExcelStart(builder)
def NormalSkillTemplateExcelAddMultiAni(builder, multiAni): builder.PrependBoolSlot(0, multiAni, 0)
def AddMultiAni(builder, multiAni):
    return NormalSkillTemplateExcelAddMultiAni(builder, multiAni)
def NormalSkillTemplateExcelAddCoolTime(builder, coolTime): builder.PrependFloat32Slot(1, coolTime, 0.0)
def AddCoolTime(builder, coolTime):
    return NormalSkillTemplateExcelAddCoolTime(builder, coolTime)
def NormalSkillTemplateExcelAddFirstCoolTime(builder, firstCoolTime): builder.PrependFloat32Slot(2, firstCoolTime, 0.0)
def AddFirstCoolTime(builder, firstCoolTime):
    return NormalSkillTemplateExcelAddFirstCoolTime(builder, firstCoolTime)
def NormalSkillTemplateExcelAddIndex(builder, index): builder.PrependInt64Slot(3, index, 0)
def AddIndex(builder, index):
    return NormalSkillTemplateExcelAddIndex(builder, index)
def NormalSkillTemplateExcelEnd(builder): return builder.EndObject()
def End(builder):
    return NormalSkillTemplateExcelEnd(builder)