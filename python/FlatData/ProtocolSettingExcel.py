# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ProtocolSettingExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ProtocolSettingExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsProtocolSettingExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # ProtocolSettingExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ProtocolSettingExcel
    def Mail(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # ProtocolSettingExcel
    def Inventory(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # ProtocolSettingExcel
    def Currency(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # ProtocolSettingExcel
    def OpenConditionContent(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ProtocolSettingExcel
    def Protocol(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def ProtocolSettingExcelStart(builder): builder.StartObject(5)
def Start(builder):
    return ProtocolSettingExcelStart(builder)
def ProtocolSettingExcelAddMail(builder, mail): builder.PrependBoolSlot(0, mail, 0)
def AddMail(builder, mail):
    return ProtocolSettingExcelAddMail(builder, mail)
def ProtocolSettingExcelAddInventory(builder, inventory): builder.PrependBoolSlot(1, inventory, 0)
def AddInventory(builder, inventory):
    return ProtocolSettingExcelAddInventory(builder, inventory)
def ProtocolSettingExcelAddCurrency(builder, currency): builder.PrependBoolSlot(2, currency, 0)
def AddCurrency(builder, currency):
    return ProtocolSettingExcelAddCurrency(builder, currency)
def ProtocolSettingExcelAddOpenConditionContent(builder, openConditionContent): builder.PrependInt32Slot(3, openConditionContent, 0)
def AddOpenConditionContent(builder, openConditionContent):
    return ProtocolSettingExcelAddOpenConditionContent(builder, openConditionContent)
def ProtocolSettingExcelAddProtocol(builder, protocol): builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(protocol), 0)
def AddProtocol(builder, protocol):
    return ProtocolSettingExcelAddProtocol(builder, protocol)
def ProtocolSettingExcelEnd(builder): return builder.EndObject()
def End(builder):
    return ProtocolSettingExcelEnd(builder)