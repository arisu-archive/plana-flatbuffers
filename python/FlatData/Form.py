# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class Form(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Form()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsForm(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # Form
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Form
    def PublicSkill(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from FlatData.Motion import Motion
            obj = Motion()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # Form
    def MoveEnd(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from FlatData.MoveEnd import MoveEnd
            obj = MoveEnd()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def FormStart(builder): builder.StartObject(2)
def Start(builder):
    return FormStart(builder)
def FormAddPublicSkill(builder, publicSkill): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(publicSkill), 0)
def AddPublicSkill(builder, publicSkill):
    return FormAddPublicSkill(builder, publicSkill)
def FormAddMoveEnd(builder, moveEnd): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(moveEnd), 0)
def AddMoveEnd(builder, moveEnd):
    return FormAddMoveEnd(builder, moveEnd)
def FormEnd(builder): return builder.EndObject()
def End(builder):
    return FormEnd(builder)