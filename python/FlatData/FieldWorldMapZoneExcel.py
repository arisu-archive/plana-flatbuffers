# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class FieldWorldMapZoneExcel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = FieldWorldMapZoneExcel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsFieldWorldMapZoneExcel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # FieldWorldMapZoneExcel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # FieldWorldMapZoneExcel
    def CloseConditionId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # FieldWorldMapZoneExcel
    def CloseConditionType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # FieldWorldMapZoneExcel
    def Date(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # FieldWorldMapZoneExcel
    def FieldStageInteractionId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # FieldWorldMapZoneExcel
    def GroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # FieldWorldMapZoneExcel
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # FieldWorldMapZoneExcel
    def LocalizeCode(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # FieldWorldMapZoneExcel
    def NewTagDisplay(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # FieldWorldMapZoneExcel
    def OpenConditionId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # FieldWorldMapZoneExcel
    def OpenConditionType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # FieldWorldMapZoneExcel
    def ResultFieldScene(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # FieldWorldMapZoneExcel
    def WorldMapButtonType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def FieldWorldMapZoneExcelStart(builder): builder.StartObject(12)
def Start(builder):
    return FieldWorldMapZoneExcelStart(builder)
def FieldWorldMapZoneExcelAddCloseConditionId(builder, closeConditionId): builder.PrependInt64Slot(0, closeConditionId, 0)
def AddCloseConditionId(builder, closeConditionId):
    return FieldWorldMapZoneExcelAddCloseConditionId(builder, closeConditionId)
def FieldWorldMapZoneExcelAddCloseConditionType(builder, closeConditionType): builder.PrependInt32Slot(1, closeConditionType, 0)
def AddCloseConditionType(builder, closeConditionType):
    return FieldWorldMapZoneExcelAddCloseConditionType(builder, closeConditionType)
def FieldWorldMapZoneExcelAddDate(builder, date): builder.PrependInt32Slot(2, date, 0)
def AddDate(builder, date):
    return FieldWorldMapZoneExcelAddDate(builder, date)
def FieldWorldMapZoneExcelAddFieldStageInteractionId(builder, fieldStageInteractionId): builder.PrependInt64Slot(3, fieldStageInteractionId, 0)
def AddFieldStageInteractionId(builder, fieldStageInteractionId):
    return FieldWorldMapZoneExcelAddFieldStageInteractionId(builder, fieldStageInteractionId)
def FieldWorldMapZoneExcelAddGroupId(builder, groupId): builder.PrependInt32Slot(4, groupId, 0)
def AddGroupId(builder, groupId):
    return FieldWorldMapZoneExcelAddGroupId(builder, groupId)
def FieldWorldMapZoneExcelAddId(builder, id): builder.PrependInt64Slot(5, id, 0)
def AddId(builder, id):
    return FieldWorldMapZoneExcelAddId(builder, id)
def FieldWorldMapZoneExcelAddLocalizeCode(builder, localizeCode): builder.PrependUint32Slot(6, localizeCode, 0)
def AddLocalizeCode(builder, localizeCode):
    return FieldWorldMapZoneExcelAddLocalizeCode(builder, localizeCode)
def FieldWorldMapZoneExcelAddNewTagDisplay(builder, newTagDisplay): builder.PrependBoolSlot(7, newTagDisplay, 0)
def AddNewTagDisplay(builder, newTagDisplay):
    return FieldWorldMapZoneExcelAddNewTagDisplay(builder, newTagDisplay)
def FieldWorldMapZoneExcelAddOpenConditionId(builder, openConditionId): builder.PrependInt64Slot(8, openConditionId, 0)
def AddOpenConditionId(builder, openConditionId):
    return FieldWorldMapZoneExcelAddOpenConditionId(builder, openConditionId)
def FieldWorldMapZoneExcelAddOpenConditionType(builder, openConditionType): builder.PrependInt32Slot(9, openConditionType, 0)
def AddOpenConditionType(builder, openConditionType):
    return FieldWorldMapZoneExcelAddOpenConditionType(builder, openConditionType)
def FieldWorldMapZoneExcelAddResultFieldScene(builder, resultFieldScene): builder.PrependInt64Slot(10, resultFieldScene, 0)
def AddResultFieldScene(builder, resultFieldScene):
    return FieldWorldMapZoneExcelAddResultFieldScene(builder, resultFieldScene)
def FieldWorldMapZoneExcelAddWorldMapButtonType(builder, worldMapButtonType): builder.PrependInt32Slot(11, worldMapButtonType, 0)
def AddWorldMapButtonType(builder, worldMapButtonType):
    return FieldWorldMapZoneExcelAddWorldMapButtonType(builder, worldMapButtonType)
def FieldWorldMapZoneExcelEnd(builder): return builder.EndObject()
def End(builder):
    return FieldWorldMapZoneExcelEnd(builder)