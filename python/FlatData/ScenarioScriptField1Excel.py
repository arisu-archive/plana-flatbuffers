# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ScenarioScriptField1Excel(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ScenarioScriptField1Excel()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsScenarioScriptField1Excel(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # ScenarioScriptField1Excel
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ScenarioScriptField1Excel
    def BgEffect(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # ScenarioScriptField1Excel
    def BgmId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ScenarioScriptField1Excel
    def BgName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # ScenarioScriptField1Excel
    def GroupId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ScenarioScriptField1Excel
    def PopupFileName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ScenarioScriptField1Excel
    def ScriptKr(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ScenarioScriptField1Excel
    def SelectionGroup(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ScenarioScriptField1Excel
    def Sound(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ScenarioScriptField1Excel
    def TextJp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ScenarioScriptField1Excel
    def Transition(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # ScenarioScriptField1Excel
    def VoiceJp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def ScenarioScriptField1ExcelStart(builder): builder.StartObject(11)
def Start(builder):
    return ScenarioScriptField1ExcelStart(builder)
def ScenarioScriptField1ExcelAddBgEffect(builder, bgEffect): builder.PrependUint32Slot(0, bgEffect, 0)
def AddBgEffect(builder, bgEffect):
    return ScenarioScriptField1ExcelAddBgEffect(builder, bgEffect)
def ScenarioScriptField1ExcelAddBgmId(builder, bgmId): builder.PrependInt64Slot(1, bgmId, 0)
def AddBgmId(builder, bgmId):
    return ScenarioScriptField1ExcelAddBgmId(builder, bgmId)
def ScenarioScriptField1ExcelAddBgName(builder, bgName): builder.PrependUint32Slot(2, bgName, 0)
def AddBgName(builder, bgName):
    return ScenarioScriptField1ExcelAddBgName(builder, bgName)
def ScenarioScriptField1ExcelAddGroupId(builder, groupId): builder.PrependInt64Slot(3, groupId, 0)
def AddGroupId(builder, groupId):
    return ScenarioScriptField1ExcelAddGroupId(builder, groupId)
def ScenarioScriptField1ExcelAddPopupFileName(builder, popupFileName): builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(popupFileName), 0)
def AddPopupFileName(builder, popupFileName):
    return ScenarioScriptField1ExcelAddPopupFileName(builder, popupFileName)
def ScenarioScriptField1ExcelAddScriptKr(builder, scriptKr): builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(scriptKr), 0)
def AddScriptKr(builder, scriptKr):
    return ScenarioScriptField1ExcelAddScriptKr(builder, scriptKr)
def ScenarioScriptField1ExcelAddSelectionGroup(builder, selectionGroup): builder.PrependInt64Slot(6, selectionGroup, 0)
def AddSelectionGroup(builder, selectionGroup):
    return ScenarioScriptField1ExcelAddSelectionGroup(builder, selectionGroup)
def ScenarioScriptField1ExcelAddSound(builder, sound): builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(sound), 0)
def AddSound(builder, sound):
    return ScenarioScriptField1ExcelAddSound(builder, sound)
def ScenarioScriptField1ExcelAddTextJp(builder, textJp): builder.PrependUOffsetTRelativeSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(textJp), 0)
def AddTextJp(builder, textJp):
    return ScenarioScriptField1ExcelAddTextJp(builder, textJp)
def ScenarioScriptField1ExcelAddTransition(builder, transition): builder.PrependUint32Slot(9, transition, 0)
def AddTransition(builder, transition):
    return ScenarioScriptField1ExcelAddTransition(builder, transition)
def ScenarioScriptField1ExcelAddVoiceJp(builder, voiceJp): builder.PrependUOffsetTRelativeSlot(10, flatbuffers.number_types.UOffsetTFlags.py_type(voiceJp), 0)
def AddVoiceJp(builder, voiceJp):
    return ScenarioScriptField1ExcelAddVoiceJp(builder, voiceJp)
def ScenarioScriptField1ExcelEnd(builder): return builder.EndObject()
def End(builder):
    return ScenarioScriptField1ExcelEnd(builder)