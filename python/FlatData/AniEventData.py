# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatData

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class AniEventData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = AniEventData()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsAniEventData(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # AniEventData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # AniEventData
    def FloatParam(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # AniEventData
    def IntParam(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # AniEventData
    def Name(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # AniEventData
    def StringParam(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # AniEventData
    def Time(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

def AniEventDataStart(builder): builder.StartObject(5)
def Start(builder):
    return AniEventDataStart(builder)
def AniEventDataAddFloatParam(builder, floatParam): builder.PrependFloat32Slot(0, floatParam, 0.0)
def AddFloatParam(builder, floatParam):
    return AniEventDataAddFloatParam(builder, floatParam)
def AniEventDataAddIntParam(builder, intParam): builder.PrependInt32Slot(1, intParam, 0)
def AddIntParam(builder, intParam):
    return AniEventDataAddIntParam(builder, intParam)
def AniEventDataAddName(builder, name): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(name), 0)
def AddName(builder, name):
    return AniEventDataAddName(builder, name)
def AniEventDataAddStringParam(builder, stringParam): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(stringParam), 0)
def AddStringParam(builder, stringParam):
    return AniEventDataAddStringParam(builder, stringParam)
def AniEventDataAddTime(builder, time): builder.PrependFloat32Slot(4, time, 0.0)
def AddTime(builder, time):
    return AniEventDataAddTime(builder, time)
def AniEventDataEnd(builder): return builder.EndObject()
def End(builder):
    return AniEventDataEnd(builder)